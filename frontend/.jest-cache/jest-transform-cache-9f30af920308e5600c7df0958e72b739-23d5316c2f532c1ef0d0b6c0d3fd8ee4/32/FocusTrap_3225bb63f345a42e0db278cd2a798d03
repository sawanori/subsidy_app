547c85c1b88bda0296b35fd4c67f9b25
'use client';
"use strict";

/* istanbul ignore next */
function cov_2r32kgjiir() {
  var path = "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/a11y/FocusTrap.tsx";
  var hash = "68ff775cce3f5172435f10f2c18c019c9f91d8ac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/a11y/FocusTrap.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 25
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 69
        }
      },
      "6": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "7": {
        start: {
          line: 16,
          column: 39
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 28
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "9": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "10": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 20
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 66
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 19
        }
      },
      "14": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "16": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 53
        }
      },
      "17": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 30
        }
      },
      "19": {
        start: {
          line: 36,
          column: 17
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "20": {
        start: {
          line: 39,
          column: 32
        },
        end: {
          line: 39,
          column: 88
        }
      },
      "21": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "22": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "23": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 95
        }
      },
      "24": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "25": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 57
        }
      },
      "26": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 39
        }
      },
      "27": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 25
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "29": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 31
        }
      },
      "30": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 18
        }
      },
      "31": {
        start: {
          line: 56,
          column: 18
        },
        end: {
          line: 92,
          column: 1
        }
      },
      "32": {
        start: {
          line: 57,
          column: 25
        },
        end: {
          line: 57,
          column: 49
        }
      },
      "33": {
        start: {
          line: 58,
          column: 86
        },
        end: {
          line: 58,
          column: 131
        }
      },
      "34": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 85,
          column: 7
        }
      },
      "35": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 28
        }
      },
      "36": {
        start: {
          line: 60,
          column: 21
        },
        end: {
          line: 60,
          column: 28
        }
      },
      "37": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "38": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 24
        }
      },
      "39": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "40": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 44
        }
      },
      "41": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 70,
          column: 47
        }
      },
      "42": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 76,
          column: 10
        }
      },
      "43": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 24
        }
      },
      "44": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "45": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 33
        }
      },
      "46": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 91,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 47
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 19,
            column: 40
          }
        },
        loc: {
          start: {
            line: 19,
            column: 61
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 34
          }
        },
        loc: {
          start: {
            line: 23,
            column: 53
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 18
          },
          end: {
            line: 56,
            column: 19
          }
        },
        loc: {
          start: {
            line: 56,
            column: 102
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 26
          },
          end: {
            line: 59,
            column: 27
          }
        },
        loc: {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 59
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 71,
            column: 15
          },
          end: {
            line: 71,
            column: 16
          }
        },
        loc: {
          start: {
            line: 71,
            column: 19
          },
          end: {
            line: 76,
            column: 9
          }
        },
        line: 71
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 20,
            column: 45
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 65
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 20
          }
        }, {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 27
          }
        }, {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 45
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 20
          }
        }, {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 47
          }
        }, {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 27,
            column: 76
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 13
          }
        }, {
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 31
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 53
          }
        }, {
          start: {
            line: 39,
            column: 57
          },
          end: {
            line: 39,
            column: 88
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "10": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 29
          }
        }, {
          start: {
            line: 41,
            column: 33
          },
          end: {
            line: 41,
            column: 79
          }
        }],
        line: 41
      },
      "11": {
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 47
          },
          end: {
            line: 42,
            column: 88
          }
        }, {
          start: {
            line: 42,
            column: 91
          },
          end: {
            line: 42,
            column: 95
          }
        }],
        line: 42
      },
      "12": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 19
          },
          end: {
            line: 47,
            column: 13
          }
        }],
        line: 43
      },
      "13": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 20
          }
        }, {
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 43,
            column: 33
          }
        }, {
          start: {
            line: 43,
            column: 37
          },
          end: {
            line: 43,
            column: 45
          }
        }],
        line: 43
      },
      "14": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "15": {
        loc: {
          start: {
            line: 56,
            column: 31
          },
          end: {
            line: 56,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 56,
            column: 40
          },
          end: {
            line: 56,
            column: 44
          }
        }],
        line: 56
      },
      "16": {
        loc: {
          start: {
            line: 56,
            column: 46
          },
          end: {
            line: 56,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 56,
            column: 61
          },
          end: {
            line: 56,
            column: 65
          }
        }],
        line: 56
      },
      "17": {
        loc: {
          start: {
            line: 56,
            column: 67
          },
          end: {
            line: 56,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 56,
            column: 82
          },
          end: {
            line: 56,
            column: 86
          }
        }],
        line: 56
      },
      "18": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 60,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 60,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "19": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "20": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "21": {
        loc: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/a11y/FocusTrap.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useEffect, useRef } from 'react';\nimport { useFocusManagement } from '@/hooks/useFocusManagement';\n\ninterface FocusTrapProps {\n  children: React.ReactNode;\n  active?: boolean;\n  initialFocus?: boolean;\n  restoreFocus?: boolean;\n  className?: string;\n}\n\nexport const FocusTrap: React.FC<FocusTrapProps> = ({\n  children,\n  active = true,\n  initialFocus = true,\n  restoreFocus = true,\n  className,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { saveFocus, restoreFocus: restoreFocusFn, trapFocus, focusFirstElement } = useFocusManagement();\n\n  useEffect(() => {\n    if (!active) return;\n\n    // Save current focus\n    if (restoreFocus) {\n      saveFocus();\n    }\n\n    // Focus first element if requested\n    if (initialFocus) {\n      focusFirstElement(containerRef);\n    }\n\n    // Trap focus within container\n    const cleanup = trapFocus(containerRef);\n\n    return () => {\n      cleanup?.();\n      if (restoreFocus) {\n        restoreFocusFn();\n      }\n    };\n  }, [active, initialFocus, restoreFocus, saveFocus, restoreFocusFn, trapFocus, focusFirstElement]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      data-focus-trap={active}\n    >\n      {children}\n    </div>\n  );\n};"],
      names: ["FocusTrap", "children", "active", "initialFocus", "restoreFocus", "className", "containerRef", "useRef", "saveFocus", "restoreFocusFn", "trapFocus", "focusFirstElement", "useFocusManagement", "useEffect", "cleanup", "div", "ref", "data-focus-trap"],
      mappings: "AAAA;;;;;+BAaaA;;;eAAAA;;;;+DAX4B;oCACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU5B,MAAMA,YAAsC,CAAC,EAClDC,QAAQ,EACRC,SAAS,IAAI,EACbC,eAAe,IAAI,EACnBC,eAAe,IAAI,EACnBC,SAAS,EACV;IACC,MAAMC,eAAeC,IAAAA,aAAM,EAAiB;IAC5C,MAAM,EAAEC,SAAS,EAAEJ,cAAcK,cAAc,EAAEC,SAAS,EAAEC,iBAAiB,EAAE,GAAGC,IAAAA,sCAAkB;IAEpGC,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACX,QAAQ;QAEb,qBAAqB;QACrB,IAAIE,cAAc;YAChBI;QACF;QAEA,mCAAmC;QACnC,IAAIL,cAAc;YAChBQ,kBAAkBL;QACpB;QAEA,8BAA8B;QAC9B,MAAMQ,UAAUJ,UAAUJ;QAE1B,OAAO;YACLQ;YACA,IAAIV,cAAc;gBAChBK;YACF;QACF;IACF,GAAG;QAACP;QAAQC;QAAcC;QAAcI;QAAWC;QAAgBC;QAAWC;KAAkB;IAEhG,qBACE,qBAACI;QACCC,KAAKV;QACLD,WAAWA;QACXY,mBAAiBf;kBAEhBD;;AAGP"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "68ff775cce3f5172435f10f2c18c019c9f91d8ac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2r32kgjiir = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2r32kgjiir();
cov_2r32kgjiir().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2r32kgjiir().s[1]++;
Object.defineProperty(exports, "FocusTrap", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2r32kgjiir().f[0]++;
    cov_2r32kgjiir().s[2]++;
    return FocusTrap;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2r32kgjiir().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2r32kgjiir().s[4]++, _interop_require_wildcard(require("react")));
const _useFocusManagement =
/* istanbul ignore next */
(cov_2r32kgjiir().s[5]++, require("../../hooks/useFocusManagement"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2r32kgjiir().f[1]++;
  cov_2r32kgjiir().s[6]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2r32kgjiir().b[0][0]++;
    cov_2r32kgjiir().s[7]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2r32kgjiir().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2r32kgjiir().s[8]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2r32kgjiir().s[9]++, new WeakMap());
  /* istanbul ignore next */
  cov_2r32kgjiir().s[10]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2r32kgjiir().f[2]++;
    cov_2r32kgjiir().s[11]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2r32kgjiir().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2r32kgjiir().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2r32kgjiir().f[3]++;
  cov_2r32kgjiir().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_2r32kgjiir().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2r32kgjiir().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2r32kgjiir().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2r32kgjiir().b[2][0]++;
    cov_2r32kgjiir().s[13]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2r32kgjiir().b[2][1]++;
  }
  cov_2r32kgjiir().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_2r32kgjiir().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2r32kgjiir().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2r32kgjiir().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2r32kgjiir().b[4][0]++;
    cov_2r32kgjiir().s[15]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2r32kgjiir().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2r32kgjiir().s[16]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2r32kgjiir().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_2r32kgjiir().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2r32kgjiir().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2r32kgjiir().b[6][0]++;
    cov_2r32kgjiir().s[18]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2r32kgjiir().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2r32kgjiir().s[19]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2r32kgjiir().s[20]++,
  /* istanbul ignore next */
  (cov_2r32kgjiir().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2r32kgjiir().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2r32kgjiir().s[21]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2r32kgjiir().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_2r32kgjiir().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2r32kgjiir().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2r32kgjiir().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2r32kgjiir().s[23]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2r32kgjiir().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2r32kgjiir().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2r32kgjiir().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_2r32kgjiir().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2r32kgjiir().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2r32kgjiir().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2r32kgjiir().b[12][0]++;
        cov_2r32kgjiir().s[25]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2r32kgjiir().b[12][1]++;
        cov_2r32kgjiir().s[26]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2r32kgjiir().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2r32kgjiir().s[27]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2r32kgjiir().s[28]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2r32kgjiir().b[14][0]++;
    cov_2r32kgjiir().s[29]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2r32kgjiir().b[14][1]++;
  }
  cov_2r32kgjiir().s[30]++;
  return newObj;
}
/* istanbul ignore next */
cov_2r32kgjiir().s[31]++;
const FocusTrap = ({
  children,
  active =
  /* istanbul ignore next */
  (cov_2r32kgjiir().b[15][0]++, true),
  initialFocus =
  /* istanbul ignore next */
  (cov_2r32kgjiir().b[16][0]++, true),
  restoreFocus =
  /* istanbul ignore next */
  (cov_2r32kgjiir().b[17][0]++, true),
  className
}) => {
  /* istanbul ignore next */
  cov_2r32kgjiir().f[4]++;
  const containerRef =
  /* istanbul ignore next */
  (cov_2r32kgjiir().s[32]++, (0, _react.useRef)(null));
  const {
    saveFocus,
    restoreFocus: restoreFocusFn,
    trapFocus,
    focusFirstElement
  } =
  /* istanbul ignore next */
  (cov_2r32kgjiir().s[33]++, (0, _useFocusManagement.useFocusManagement)());
  /* istanbul ignore next */
  cov_2r32kgjiir().s[34]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2r32kgjiir().f[5]++;
    cov_2r32kgjiir().s[35]++;
    if (!active) {
      /* istanbul ignore next */
      cov_2r32kgjiir().b[18][0]++;
      cov_2r32kgjiir().s[36]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2r32kgjiir().b[18][1]++;
    }
    // Save current focus
    cov_2r32kgjiir().s[37]++;
    if (restoreFocus) {
      /* istanbul ignore next */
      cov_2r32kgjiir().b[19][0]++;
      cov_2r32kgjiir().s[38]++;
      saveFocus();
    } else
    /* istanbul ignore next */
    {
      cov_2r32kgjiir().b[19][1]++;
    }
    // Focus first element if requested
    cov_2r32kgjiir().s[39]++;
    if (initialFocus) {
      /* istanbul ignore next */
      cov_2r32kgjiir().b[20][0]++;
      cov_2r32kgjiir().s[40]++;
      focusFirstElement(containerRef);
    } else
    /* istanbul ignore next */
    {
      cov_2r32kgjiir().b[20][1]++;
    }
    // Trap focus within container
    const cleanup =
    /* istanbul ignore next */
    (cov_2r32kgjiir().s[41]++, trapFocus(containerRef));
    /* istanbul ignore next */
    cov_2r32kgjiir().s[42]++;
    return () => {
      /* istanbul ignore next */
      cov_2r32kgjiir().f[6]++;
      cov_2r32kgjiir().s[43]++;
      cleanup?.();
      /* istanbul ignore next */
      cov_2r32kgjiir().s[44]++;
      if (restoreFocus) {
        /* istanbul ignore next */
        cov_2r32kgjiir().b[21][0]++;
        cov_2r32kgjiir().s[45]++;
        restoreFocusFn();
      } else
      /* istanbul ignore next */
      {
        cov_2r32kgjiir().b[21][1]++;
      }
    };
  }, [active, initialFocus, restoreFocus, saveFocus, restoreFocusFn, trapFocus, focusFirstElement]);
  /* istanbul ignore next */
  cov_2r32kgjiir().s[46]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    ref: containerRef,
    className: className,
    "data-focus-trap": active,
    children: children
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJGb2N1c1RyYXAiLCJjaGlsZHJlbiIsImFjdGl2ZSIsImNvdl8ycjMya2dqaWlyIiwiYiIsImluaXRpYWxGb2N1cyIsInJlc3RvcmVGb2N1cyIsImNsYXNzTmFtZSIsImYiLCJjb250YWluZXJSZWYiLCJzIiwiX3JlYWN0IiwidXNlUmVmIiwic2F2ZUZvY3VzIiwicmVzdG9yZUZvY3VzRm4iLCJ0cmFwRm9jdXMiLCJmb2N1c0ZpcnN0RWxlbWVudCIsIl91c2VGb2N1c01hbmFnZW1lbnQiLCJ1c2VGb2N1c01hbmFnZW1lbnQiLCJ1c2VFZmZlY3QiLCJjbGVhbnVwIiwiX2pzeHJ1bnRpbWUiLCJqc3giLCJyZWYiXSwic291cmNlcyI6WyIvVXNlcnMvbm9yaXRha2FzYXdhZGEvQUlfUC9zdWJzaWR5QXBwL2Zyb250ZW5kL3NyYy9jb21wb25lbnRzL2ExMXkvRm9jdXNUcmFwLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUZvY3VzTWFuYWdlbWVudCB9IGZyb20gJ0AvaG9va3MvdXNlRm9jdXNNYW5hZ2VtZW50JztcblxuaW50ZXJmYWNlIEZvY3VzVHJhcFByb3BzIHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbiAgYWN0aXZlPzogYm9vbGVhbjtcbiAgaW5pdGlhbEZvY3VzPzogYm9vbGVhbjtcbiAgcmVzdG9yZUZvY3VzPzogYm9vbGVhbjtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgRm9jdXNUcmFwOiBSZWFjdC5GQzxGb2N1c1RyYXBQcm9wcz4gPSAoe1xuICBjaGlsZHJlbixcbiAgYWN0aXZlID0gdHJ1ZSxcbiAgaW5pdGlhbEZvY3VzID0gdHJ1ZSxcbiAgcmVzdG9yZUZvY3VzID0gdHJ1ZSxcbiAgY2xhc3NOYW1lLFxufSkgPT4ge1xuICBjb25zdCBjb250YWluZXJSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCB7IHNhdmVGb2N1cywgcmVzdG9yZUZvY3VzOiByZXN0b3JlRm9jdXNGbiwgdHJhcEZvY3VzLCBmb2N1c0ZpcnN0RWxlbWVudCB9ID0gdXNlRm9jdXNNYW5hZ2VtZW50KCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWFjdGl2ZSkgcmV0dXJuO1xuXG4gICAgLy8gU2F2ZSBjdXJyZW50IGZvY3VzXG4gICAgaWYgKHJlc3RvcmVGb2N1cykge1xuICAgICAgc2F2ZUZvY3VzKCk7XG4gICAgfVxuXG4gICAgLy8gRm9jdXMgZmlyc3QgZWxlbWVudCBpZiByZXF1ZXN0ZWRcbiAgICBpZiAoaW5pdGlhbEZvY3VzKSB7XG4gICAgICBmb2N1c0ZpcnN0RWxlbWVudChjb250YWluZXJSZWYpO1xuICAgIH1cblxuICAgIC8vIFRyYXAgZm9jdXMgd2l0aGluIGNvbnRhaW5lclxuICAgIGNvbnN0IGNsZWFudXAgPSB0cmFwRm9jdXMoY29udGFpbmVyUmVmKTtcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjbGVhbnVwPy4oKTtcbiAgICAgIGlmIChyZXN0b3JlRm9jdXMpIHtcbiAgICAgICAgcmVzdG9yZUZvY3VzRm4oKTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbYWN0aXZlLCBpbml0aWFsRm9jdXMsIHJlc3RvcmVGb2N1cywgc2F2ZUZvY3VzLCByZXN0b3JlRm9jdXNGbiwgdHJhcEZvY3VzLCBmb2N1c0ZpcnN0RWxlbWVudF0pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgcmVmPXtjb250YWluZXJSZWZ9XG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICAgIGRhdGEtZm9jdXMtdHJhcD17YWN0aXZlfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2Rpdj5cbiAgKTtcbn07Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBYWE7Ozs7OztXQUFBQSxTQUFBOzs7Ozs7Ozt5RUFYNEI7OztrQ0FDTjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBVTVCLE1BQU1BLFNBQUEsR0FBc0NBLENBQUM7RUFDbERDLFFBQVE7RUFDUkMsTUFBQTtFQUFBO0VBQUEsQ0FBQUMsY0FBQSxHQUFBQyxDQUFBLFdBQVMsSUFBSTtFQUNiQyxZQUFBO0VBQUE7RUFBQSxDQUFBRixjQUFBLEdBQUFDLENBQUEsV0FBZSxJQUFJO0VBQ25CRSxZQUFBO0VBQUE7RUFBQSxDQUFBSCxjQUFBLEdBQUFDLENBQUEsV0FBZSxJQUFJO0VBQ25CRztBQUFTLENBQ1Y7RUFBQTtFQUFBSixjQUFBLEdBQUFLLENBQUE7RUFDQyxNQUFNQyxZQUFBO0VBQUE7RUFBQSxDQUFBTixjQUFBLEdBQUFPLENBQUEsUUFBZSxJQUFBQyxNQUFBLENBQUFDLE1BQU0sRUFBaUI7RUFDNUMsTUFBTTtJQUFFQyxTQUFTO0lBQUVQLFlBQUEsRUFBY1EsY0FBYztJQUFFQyxTQUFTO0lBQUVDO0VBQWlCLENBQUU7RUFBQTtFQUFBLENBQUFiLGNBQUEsR0FBQU8sQ0FBQSxRQUFHLElBQUFPLG1CQUFBLENBQUFDLGtCQUFrQjtFQUFBO0VBQUFmLGNBQUEsR0FBQU8sQ0FBQTtFQUVwRyxJQUFBQyxNQUFBLENBQUFRLFNBQVMsRUFBQztJQUFBO0lBQUFoQixjQUFBLEdBQUFLLENBQUE7SUFBQUwsY0FBQSxHQUFBTyxDQUFBO0lBQ1IsSUFBSSxDQUFDUixNQUFBLEVBQVE7TUFBQTtNQUFBQyxjQUFBLEdBQUFDLENBQUE7TUFBQUQsY0FBQSxHQUFBTyxDQUFBO01BQUE7SUFBQTtJQUFBO0lBQUE7TUFBQVAsY0FBQSxHQUFBQyxDQUFBO0lBQUE7SUFFYjtJQUFBRCxjQUFBLEdBQUFPLENBQUE7SUFDQSxJQUFJSixZQUFBLEVBQWM7TUFBQTtNQUFBSCxjQUFBLEdBQUFDLENBQUE7TUFBQUQsY0FBQSxHQUFBTyxDQUFBO01BQ2hCRyxTQUFBO0lBQ0Y7SUFBQTtJQUFBO01BQUFWLGNBQUEsR0FBQUMsQ0FBQTtJQUFBO0lBRUE7SUFBQUQsY0FBQSxHQUFBTyxDQUFBO0lBQ0EsSUFBSUwsWUFBQSxFQUFjO01BQUE7TUFBQUYsY0FBQSxHQUFBQyxDQUFBO01BQUFELGNBQUEsR0FBQU8sQ0FBQTtNQUNoQk0saUJBQUEsQ0FBa0JQLFlBQUE7SUFDcEI7SUFBQTtJQUFBO01BQUFOLGNBQUEsR0FBQUMsQ0FBQTtJQUFBO0lBRUE7SUFDQSxNQUFNZ0IsT0FBQTtJQUFBO0lBQUEsQ0FBQWpCLGNBQUEsR0FBQU8sQ0FBQSxRQUFVSyxTQUFBLENBQVVOLFlBQUE7SUFBQTtJQUFBTixjQUFBLEdBQUFPLENBQUE7SUFFMUIsT0FBTztNQUFBO01BQUFQLGNBQUEsR0FBQUssQ0FBQTtNQUFBTCxjQUFBLEdBQUFPLENBQUE7TUFDTFUsT0FBQTtNQUFBO01BQUFqQixjQUFBLEdBQUFPLENBQUE7TUFDQSxJQUFJSixZQUFBLEVBQWM7UUFBQTtRQUFBSCxjQUFBLEdBQUFDLENBQUE7UUFBQUQsY0FBQSxHQUFBTyxDQUFBO1FBQ2hCSSxjQUFBO01BQ0Y7TUFBQTtNQUFBO1FBQUFYLGNBQUEsR0FBQUMsQ0FBQTtNQUFBO0lBQ0Y7RUFDRixHQUFHLENBQUNGLE1BQUEsRUFBUUcsWUFBQSxFQUFjQyxZQUFBLEVBQWNPLFNBQUEsRUFBV0MsY0FBQSxFQUFnQkMsU0FBQSxFQUFXQyxpQkFBQSxDQUFrQjtFQUFBO0VBQUFiLGNBQUEsR0FBQU8sQ0FBQTtFQUVoRyxvQkFDRSxJQUFBVyxXQUFBLENBQUFDLEdBQUEsRUFBQztJQUNDQyxHQUFBLEVBQUtkLFlBQUE7SUFDTEYsU0FBQSxFQUFXQSxTQUFBO0lBQ1gsbUJBQWlCTCxNQUFBO2NBRWhCRDs7QUFHUCIsImlnbm9yZUxpc3QiOltdfQ==