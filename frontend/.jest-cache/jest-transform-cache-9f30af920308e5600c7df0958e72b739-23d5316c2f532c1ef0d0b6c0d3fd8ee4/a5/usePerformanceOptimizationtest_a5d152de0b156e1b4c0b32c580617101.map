{"version":3,"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/hooks/__tests__/usePerformanceOptimization.test.ts"],"sourcesContent":["/**\n * APP-100: usePerformanceOptimization フック単体テスト\n * APP-240最適化機能の品質保証\n */\n\nimport { renderHook, act } from '@testing-library/react';\nimport {\n  useExpensiveComputation,\n  useDebounce,\n  useVirtualScroll,\n  createMemoComparison,\n  usePerformanceMonitor,\n  useBatchedUpdates\n} from '../usePerformanceOptimization';\n\ndescribe('usePerformanceOptimization', () => {\n  \n  describe('useExpensiveComputation', () => {\n    test('caches expensive computations correctly', () => {\n      const expensiveFunction = jest.fn((data: number) => data * 2);\n      \n      const { result, rerender } = renderHook(\n        ({ data }) => useExpensiveComputation(data, expensiveFunction),\n        { initialProps: { data: 5 } }\n      );\n      \n      expect(result.current).toBe(10);\n      expect(expensiveFunction).toHaveBeenCalledTimes(1);\n      \n      // 同じデータでの再レンダリング（キャッシュヒット）\n      rerender({ data: 5 });\n      expect(expensiveFunction).toHaveBeenCalledTimes(1); // キャッシュされているので呼ばれない\n      \n      // 異なるデータでの再レンダリング（キャッシュミス）\n      rerender({ data: 10 });\n      expect(result.current).toBe(20);\n      expect(expensiveFunction).toHaveBeenCalledTimes(2);\n    });\n\n    test('handles complex objects correctly', () => {\n      const complexFunction = jest.fn((obj: any) => Object.keys(obj).length);\n      \n      const { result, rerender } = renderHook(\n        ({ data }) => useExpensiveComputation(data, complexFunction),\n        { initialProps: { data: { a: 1, b: 2 } } }\n      );\n      \n      expect(result.current).toBe(2);\n      expect(complexFunction).toHaveBeenCalledTimes(1);\n      \n      // 同じ構造のオブジェクト（キャッシュヒット）\n      rerender({ data: { a: 1, b: 2 } });\n      expect(complexFunction).toHaveBeenCalledTimes(1);\n      \n      // 異なるオブジェクト（キャッシュミス）\n      rerender({ data: { a: 1, b: 2, c: 3 } });\n      expect(result.current).toBe(3);\n      expect(complexFunction).toHaveBeenCalledTimes(2);\n    });\n  });\n\n  describe('useDebounce', () => {\n    jest.useFakeTimers();\n\n    test('debounces values correctly', () => {\n      const { result, rerender } = renderHook(\n        ({ value }) => useDebounce(value, 500),\n        { initialProps: { value: 'initial' } }\n      );\n      \n      expect(result.current).toBe('initial');\n      \n      // 値を変更\n      rerender({ value: 'updated' });\n      expect(result.current).toBe('initial'); // まだdebounce中\n      \n      // 時間経過\n      act(() => {\n        jest.advanceTimersByTime(500);\n      });\n      \n      expect(result.current).toBe('updated');\n    });\n\n    test('cancels previous timeout on new value', () => {\n      const { result, rerender } = renderHook(\n        ({ value }) => useDebounce(value, 500),\n        { initialProps: { value: 'first' } }\n      );\n      \n      rerender({ value: 'second' });\n      \n      // 途中で時間経過\n      act(() => {\n        jest.advanceTimersByTime(250);\n      });\n      \n      rerender({ value: 'third' });\n      \n      // 最初のタイムアウト分の時間経過\n      act(() => {\n        jest.advanceTimersByTime(250);\n      });\n      \n      expect(result.current).toBe('first'); // 最初の値のまま\n      \n      // 追加の250ms経過で'third'になる\n      act(() => {\n        jest.advanceTimersByTime(250);\n      });\n      \n      expect(result.current).toBe('third');\n    });\n  });\n\n  describe('useVirtualScroll', () => {\n    const mockItems = Array.from({ length: 1000 }, (_, i) => `Item ${i}`);\n    const itemHeight = 50;\n    const containerHeight = 400;\n\n    test('calculates visible range correctly', () => {\n      const { result } = renderHook(() =>\n        useVirtualScroll(mockItems, itemHeight, containerHeight)\n      );\n      \n      expect(result.current.visibleItems.length).toBeLessThan(mockItems.length);\n      expect(result.current.totalHeight).toBe(mockItems.length * itemHeight);\n    });\n\n    test('updates visible items on scroll', () => {\n      const { result } = renderHook(() =>\n        useVirtualScroll(mockItems, itemHeight, containerHeight)\n      );\n      \n      const initialRange = result.current.visibleRange;\n      \n      // スクロールシミュレーション\n      act(() => {\n        const mockEvent = {\n          currentTarget: { scrollTop: 500 }\n        } as React.UIEvent<HTMLDivElement>;\n        \n        result.current.handleScroll(mockEvent);\n      });\n      \n      const newRange = result.current.visibleRange;\n      expect(newRange.startIndex).toBeGreaterThan(initialRange.startIndex);\n    });\n\n    test('includes overscan items', () => {\n      const overscan = 3;\n      const { result } = renderHook(() =>\n        useVirtualScroll(mockItems, itemHeight, containerHeight, overscan)\n      );\n      \n      const expectedVisible = Math.ceil(containerHeight / itemHeight);\n      expect(result.current.visibleItems.length).toBeGreaterThanOrEqual(expectedVisible);\n    });\n  });\n\n  describe('createMemoComparison', () => {\n    test('compares only specified keys', () => {\n      const comparison = createMemoComparison(['a', 'c']);\n      \n      const props1 = { a: 1, b: 2, c: 3 };\n      const props2 = { a: 1, b: 999, c: 3 }; // bが変更されたが比較対象外\n      const props3 = { a: 999, b: 2, c: 3 }; // aが変更された\n      \n      expect(comparison(props1, props2)).toBe(true);  // 等しい\n      expect(comparison(props1, props3)).toBe(false); // 異なる\n    });\n\n    test('handles missing keys gracefully', () => {\n      const comparison = createMemoComparison(['a', 'missing']);\n      \n      const props1 = { a: 1 };\n      const props2 = { a: 1 };\n      \n      expect(comparison(props1, props2)).toBe(true);\n    });\n  });\n\n  describe('usePerformanceMonitor', () => {\n    const consoleSpy = jest.spyOn(console, 'log').mockImplementation();\n    const consoleWarnSpy = jest.spyOn(console, 'warn').mockImplementation();\n\n    beforeEach(() => {\n      consoleSpy.mockClear();\n      consoleWarnSpy.mockClear();\n    });\n\n    afterAll(() => {\n      consoleSpy.mockRestore();\n      consoleWarnSpy.mockRestore();\n    });\n\n    test('tracks render count in development', () => {\n      const originalEnv = process.env.NODE_ENV;\n      process.env.NODE_ENV = 'development';\n      \n      const { rerender } = renderHook(() => \n        usePerformanceMonitor('TestComponent')\n      );\n      \n      rerender();\n      rerender();\n      \n      expect(consoleSpy).toHaveBeenCalledWith('TestComponent rendered 3 times');\n      \n      process.env.NODE_ENV = originalEnv;\n    });\n\n    test('measures performance timing', () => {\n      const { result } = renderHook(() => \n        usePerformanceMonitor('TestComponent')\n      );\n      \n      result.current.markStart();\n      const duration = result.current.markEnd('test operation');\n      \n      expect(typeof duration).toBe('number');\n      expect(duration).toBeGreaterThanOrEqual(0);\n    });\n  });\n\n  describe('useBatchedUpdates', () => {\n    jest.useFakeTimers();\n\n    test('batches updates correctly', () => {\n      const { result } = renderHook(() => \n        useBatchedUpdates(0, 3, 100)\n      );\n      \n      const [state, batchedUpdate] = result.current;\n      expect(state).toBe(0);\n      \n      // 複数の更新をバッチ\n      act(() => {\n        batchedUpdate(prev => prev + 1);\n        batchedUpdate(prev => prev + 2);\n        batchedUpdate(prev => prev + 3);\n      });\n      \n      // バッチサイズに達したので即座に実行される\n      expect(result.current[0]).toBe(6);\n    });\n\n    test('flushes updates after delay', () => {\n      const { result } = renderHook(() => \n        useBatchedUpdates(0, 5, 100)\n      );\n      \n      const [, batchedUpdate] = result.current;\n      \n      act(() => {\n        batchedUpdate(prev => prev + 1);\n        batchedUpdate(prev => prev + 2);\n      });\n      \n      // バッチサイズに達していないので更新されない\n      expect(result.current[0]).toBe(0);\n      \n      // 時間経過で更新される\n      act(() => {\n        jest.advanceTimersByTime(100);\n      });\n      \n      expect(result.current[0]).toBe(3);\n    });\n  });\n\n  describe('Performance Benchmarks', () => {\n    test('expensive computation performs within limits', () => {\n      const heavyComputation = (data: number[]) => {\n        return data.reduce((sum, num) => sum + Math.sqrt(num), 0);\n      };\n      \n      const largeData = Array.from({ length: 10000 }, (_, i) => i);\n      \n      const startTime = Date.now();\n      \n      const { result } = renderHook(() =>\n        useExpensiveComputation(largeData, heavyComputation)\n      );\n      \n      const computationTime = Date.now() - startTime;\n      \n      expect(computationTime).toBeLessThan(1000); // 1秒以内\n      expect(typeof result.current).toBe('number');\n    });\n\n    test('virtual scroll handles large datasets', () => {\n      const massiveItems = Array.from({ length: 100000 }, (_, i) => `Item ${i}`);\n      \n      const startTime = Date.now();\n      \n      const { result } = renderHook(() =>\n        useVirtualScroll(massiveItems, 30, 600)\n      );\n      \n      const initTime = Date.now() - startTime;\n      \n      expect(initTime).toBeLessThan(100); // 100ms以内で初期化\n      expect(result.current.visibleItems.length).toBeLessThan(100); // 可視項目は限定的\n    });\n  });\n\n  describe('Memory Efficiency', () => {\n    test('cleans up properly on unmount', () => {\n      const { unmount } = renderHook(() => \n        useDebounce('test', 500)\n      );\n      \n      // メモリリークがないことを確認（実際のメモリ測定は困難だが、エラーがないことを確認）\n      expect(() => unmount()).not.toThrow();\n    });\n\n    test('cache size stays reasonable', () => {\n      const computeFunction = jest.fn((x: number) => x * 2);\n      \n      const { rerender } = renderHook(\n        ({ data }) => useExpensiveComputation(data, computeFunction),\n        { initialProps: { data: 1 } }\n      );\n      \n      // 大量のデータでキャッシュテスト\n      for (let i = 1; i <= 100; i++) {\n        rerender({ data: i });\n      }\n      \n      // 計算回数がデータ数と一致することを確認（キャッシュが機能している）\n      expect(computeFunction).toHaveBeenCalledTimes(100);\n    });\n  });\n});"],"names":["describe","test","expensiveFunction","jest","fn","data","result","rerender","renderHook","useExpensiveComputation","initialProps","expect","current","toBe","toHaveBeenCalledTimes","complexFunction","obj","Object","keys","length","a","b","c","useFakeTimers","value","useDebounce","act","advanceTimersByTime","mockItems","Array","from","_","i","itemHeight","containerHeight","useVirtualScroll","visibleItems","toBeLessThan","totalHeight","initialRange","visibleRange","mockEvent","currentTarget","scrollTop","handleScroll","newRange","startIndex","toBeGreaterThan","overscan","expectedVisible","Math","ceil","toBeGreaterThanOrEqual","comparison","createMemoComparison","props1","props2","props3","consoleSpy","spyOn","console","mockImplementation","consoleWarnSpy","beforeEach","mockClear","afterAll","mockRestore","originalEnv","process","env","NODE_ENV","usePerformanceMonitor","toHaveBeenCalledWith","markStart","duration","markEnd","useBatchedUpdates","state","batchedUpdate","prev","heavyComputation","reduce","sum","num","sqrt","largeData","startTime","Date","now","computationTime","massiveItems","initTime","unmount","not","toThrow","computeFunction","x"],"mappings":"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"}