{"version":3,"names":["ExtractionReviewModal","isOpen","onClose","extractionData","onConfirm","cov_29b797tkcf","f","activeTab","setActiveTab","s","_react","useState","fields","setFields","Object","entries","extracted_fields","map","key","value","label","formatFieldLabel","originalValue","editedValue","confidence","b","confidence_scores","isEdited","isConfirmed","editingField","setEditingField","getConfidenceColor","getConfidenceBadgeVariant","handleFieldEdit","newValue","prev","field","handleFieldConfirm","handleConfirmAll","handleSubmit","reviewedData","reduce","acc","confirmedCount","filter","length","allConfirmed","_jsxruntime","jsx","_dialog","Dialog","open","onOpenChange","jsxs","DialogContent","className","DialogHeader","DialogTitle","_lucidereact","FileText","DialogDescription","_tabs","Tabs","onValueChange","v","TabsList","TabsTrigger","Edit2","Eye","TabsContent","_button","Button","size","variant","onClick","_scrollarea","ScrollArea","_utils","cn","_label","Label","_badge","Badge","Math","round","Fragment","CheckCircle","XCircle","_input","Input","onChange","e","target","autoFocus","some","_alert","Alert","AlertCircle","AlertDescription","DialogFooter","disabled","Check","labelMap","companyName","corporateName","name","representative","address","postalCode","phoneNumber","email","businessName","establishedDate","capital","businessPurpose","income","taxAmount","taxYear","fiscalYearFrom","fiscalYearTo","corporateTax"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/intake/extraction-review-modal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Badge } from '@/components/ui/badge';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { cn } from '@/lib/utils';\nimport { ExtractResponse } from '@/lib/api/types';\nimport {\n  Check,\n  X,\n  AlertCircle,\n  Edit2,\n  FileText,\n  Eye,\n  CheckCircle,\n  XCircle,\n} from 'lucide-react';\n\ninterface ExtractionReviewModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  extractionData: ExtractResponse;\n  onConfirm: (reviewedData: Record<string, any>) => void;\n}\n\ninterface FieldReview {\n  key: string;\n  label: string;\n  originalValue: any;\n  editedValue: any;\n  confidence: number;\n  isEdited: boolean;\n  isConfirmed: boolean;\n}\n\nexport function ExtractionReviewModal({\n  isOpen,\n  onClose,\n  extractionData,\n  onConfirm,\n}: ExtractionReviewModalProps) {\n  const [activeTab, setActiveTab] = useState<'review' | 'preview'>('review');\n  const [fields, setFields] = useState<FieldReview[]>(() => {\n    return Object.entries(extractionData.extracted_fields).map(([key, value]) => ({\n      key,\n      label: formatFieldLabel(key),\n      originalValue: value,\n      editedValue: value,\n      confidence: extractionData.confidence_scores[key] || 0,\n      isEdited: false,\n      isConfirmed: extractionData.confidence_scores[key] >= 0.9,\n    }));\n  });\n\n  const [editingField, setEditingField] = useState<string | null>(null);\n\n  const getConfidenceColor = (confidence: number) => {\n    if (confidence >= 0.9) return 'text-confidence-high';\n    if (confidence >= 0.7) return 'text-confidence-medium';\n    return 'text-confidence-low';\n  };\n\n  const getConfidenceBadgeVariant = (confidence: number) => {\n    if (confidence >= 0.9) return 'default';\n    if (confidence >= 0.7) return 'secondary';\n    return 'destructive';\n  };\n\n  const handleFieldEdit = (key: string, newValue: string) => {\n    setFields((prev) =>\n      prev.map((field) =>\n        field.key === key\n          ? { ...field, editedValue: newValue, isEdited: true, isConfirmed: true }\n          : field\n      )\n    );\n  };\n\n  const handleFieldConfirm = (key: string) => {\n    setFields((prev) =>\n      prev.map((field) =>\n        field.key === key ? { ...field, isConfirmed: !field.isConfirmed } : field\n      )\n    );\n  };\n\n  const handleConfirmAll = () => {\n    setFields((prev) => prev.map((field) => ({ ...field, isConfirmed: true })));\n  };\n\n  const handleSubmit = () => {\n    const reviewedData = fields.reduce((acc, field) => {\n      acc[field.key] = field.editedValue;\n      return acc;\n    }, {} as Record<string, any>);\n    onConfirm(reviewedData);\n    onClose();\n  };\n\n  const confirmedCount = fields.filter((f) => f.isConfirmed).length;\n  const allConfirmed = confirmedCount === fields.length;\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh]\">\n        <DialogHeader>\n          <DialogTitle>\n            <div className=\"flex items-center gap-2\">\n              <FileText className=\"h-5 w-5\" />\n              抽出結果の確認\n            </div>\n          </DialogTitle>\n          <DialogDescription>\n            OCRで抽出されたデータを確認し、必要に応じて修正してください\n          </DialogDescription>\n        </DialogHeader>\n\n        <Tabs value={activeTab} onValueChange={(v) => setActiveTab(v as 'review' | 'preview')}>\n          <TabsList className=\"grid w-full grid-cols-2\">\n            <TabsTrigger value=\"review\" className=\"gap-2\">\n              <Edit2 className=\"h-4 w-4\" />\n              確認・編集\n            </TabsTrigger>\n            <TabsTrigger value=\"preview\" className=\"gap-2\">\n              <Eye className=\"h-4 w-4\" />\n              プレビュー\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"review\" className=\"mt-4\">\n            <div className=\"space-y-4\">\n              {/* 統計情報 */}\n              <div className=\"flex items-center justify-between rounded-lg bg-muted/50 p-4\">\n                <div className=\"flex items-center gap-4 text-sm\">\n                  <span>\n                    抽出項目: <strong>{fields.length}</strong>\n                  </span>\n                  <span>\n                    確認済み: <strong>{confirmedCount}</strong>\n                  </span>\n                  <span>\n                    編集済み:{' '}\n                    <strong>{fields.filter((f) => f.isEdited).length}</strong>\n                  </span>\n                </div>\n                <Button size=\"sm\" variant=\"outline\" onClick={handleConfirmAll}>\n                  すべて確認済みにする\n                </Button>\n              </div>\n\n              {/* フィールドリスト */}\n              <ScrollArea className=\"h-[400px] pr-4\">\n                <div className=\"space-y-3\">\n                  {fields.map((field) => (\n                    <div\n                      key={field.key}\n                      className={cn(\n                        'rounded-lg border p-4 transition-colors',\n                        field.isConfirmed ? 'bg-muted/20' : 'bg-background'\n                      )}\n                    >\n                      <div className=\"flex items-start justify-between mb-2\">\n                        <div className=\"flex items-center gap-2\">\n                          <Label className=\"font-medium\">{field.label}</Label>\n                          {field.isEdited && (\n                            <Badge variant=\"secondary\" className=\"text-xs\">\n                              編集済み\n                            </Badge>\n                          )}\n                          <Badge\n                            variant={getConfidenceBadgeVariant(field.confidence)}\n                            className=\"text-xs\"\n                          >\n                            信頼度: {Math.round(field.confidence * 100)}%\n                          </Badge>\n                        </div>\n                        <Button\n                          variant={field.isConfirmed ? 'default' : 'outline'}\n                          size=\"sm\"\n                          onClick={() => handleFieldConfirm(field.key)}\n                          className=\"h-7 px-2\"\n                        >\n                          {field.isConfirmed ? (\n                            <>\n                              <CheckCircle className=\"h-3.5 w-3.5 mr-1\" />\n                              確認済み\n                            </>\n                          ) : (\n                            <>\n                              <XCircle className=\"h-3.5 w-3.5 mr-1\" />\n                              未確認\n                            </>\n                          )}\n                        </Button>\n                      </div>\n\n                      {editingField === field.key ? (\n                        <div className=\"flex gap-2\">\n                          <Input\n                            value={field.editedValue}\n                            onChange={(e) => handleFieldEdit(field.key, e.target.value)}\n                            className=\"flex-1\"\n                            autoFocus\n                          />\n                          <Button\n                            size=\"sm\"\n                            onClick={() => setEditingField(null)}\n                            className=\"px-3\"\n                          >\n                            完了\n                          </Button>\n                        </div>\n                      ) : (\n                        <div\n                          className=\"flex items-center justify-between cursor-pointer hover:bg-muted/50 rounded px-2 py-1 -mx-2\"\n                          onClick={() => setEditingField(field.key)}\n                        >\n                          <span\n                            className={cn(\n                              'text-sm',\n                              field.confidence < 0.7 && 'text-muted-foreground'\n                            )}\n                          >\n                            {field.editedValue || '（未入力）'}\n                          </span>\n                          <Edit2 className=\"h-3.5 w-3.5 text-muted-foreground\" />\n                        </div>\n                      )}\n\n                      {field.isEdited && field.originalValue !== field.editedValue && (\n                        <div className=\"mt-2 text-xs text-muted-foreground\">\n                          元の値: <span className=\"line-through\">{field.originalValue}</span>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </ScrollArea>\n\n              {/* 低信頼度の警告 */}\n              {fields.some((f) => f.confidence < 0.7) && (\n                <Alert>\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>\n                    信頼度が低い項目があります。内容を確認して必要に応じて修正してください。\n                  </AlertDescription>\n                </Alert>\n              )}\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"preview\" className=\"mt-4\">\n            <ScrollArea className=\"h-[450px]\">\n              <div className=\"space-y-4 pr-4\">\n                <div className=\"rounded-lg border bg-card p-6\">\n                  <h3 className=\"font-semibold mb-4\">確認済みデータ</h3>\n                  <dl className=\"grid grid-cols-2 gap-4\">\n                    {fields\n                      .filter((f) => f.isConfirmed)\n                      .map((field) => (\n                        <div key={field.key}>\n                          <dt className=\"text-sm font-medium text-muted-foreground\">\n                            {field.label}\n                          </dt>\n                          <dd className=\"text-sm mt-1\">\n                            {field.editedValue || '（未入力）'}\n                            {field.isEdited && (\n                              <Badge variant=\"secondary\" className=\"ml-2 text-xs\">\n                                編集済み\n                              </Badge>\n                            )}\n                          </dd>\n                        </div>\n                      ))}\n                  </dl>\n                </div>\n\n                {fields.filter((f) => !f.isConfirmed).length > 0 && (\n                  <div className=\"rounded-lg border bg-muted/20 p-6\">\n                    <h3 className=\"font-semibold mb-4 text-muted-foreground\">\n                      未確認のデータ\n                    </h3>\n                    <dl className=\"grid grid-cols-2 gap-4\">\n                      {fields\n                        .filter((f) => !f.isConfirmed)\n                        .map((field) => (\n                          <div key={field.key} className=\"opacity-60\">\n                            <dt className=\"text-sm font-medium text-muted-foreground\">\n                              {field.label}\n                            </dt>\n                            <dd className=\"text-sm mt-1\">\n                              {field.editedValue || '（未入力）'}\n                            </dd>\n                          </div>\n                        ))}\n                    </dl>\n                  </div>\n                )}\n              </div>\n            </ScrollArea>\n          </TabsContent>\n        </Tabs>\n\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={onClose}>\n            キャンセル\n          </Button>\n          <Button onClick={handleSubmit} disabled={!allConfirmed} className=\"gap-2\">\n            {allConfirmed ? (\n              <>\n                <Check className=\"h-4 w-4\" />\n                確定して適用\n              </>\n            ) : (\n              <>\n                <AlertCircle className=\"h-4 w-4\" />\n                すべて確認してください ({confirmedCount}/{fields.length})\n              </>\n            )}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n// フィールド名を日本語ラベルに変換\nfunction formatFieldLabel(key: string): string {\n  const labelMap: Record<string, string> = {\n    companyName: '会社名',\n    corporateName: '法人名',\n    name: '氏名',\n    representative: '代表者',\n    address: '住所',\n    postalCode: '郵便番号',\n    phoneNumber: '電話番号',\n    email: 'メールアドレス',\n    businessName: '屋号',\n    establishedDate: '設立年月日',\n    capital: '資本金',\n    businessPurpose: '事業目的',\n    income: '所得金額',\n    taxAmount: '納税額',\n    taxYear: '年度',\n    fiscalYearFrom: '事業年度（開始）',\n    fiscalYearTo: '事業年度（終了）',\n    corporateTax: '法人税額',\n  };\n\n  return labelMap[key] || key;\n}"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}