ea2e8b526efc40be5b2c81942f5a7c02
"use strict";

/* istanbul ignore next */
function cov_229az2m456() {
  var path = "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/i18n/request.ts";
  var hash = "6f9b1ba660c3331f97c87f9d06c95d1e163ddaba";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/i18n/request.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 43
        }
      },
      "4": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 51
        }
      },
      "5": {
        start: {
          line: 13,
          column: 39
        },
        end: {
          line: 13,
          column: 51
        }
      },
      "6": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "7": {
        start: {
          line: 15,
          column: 27
        },
        end: {
          line: 15,
          column: 40
        }
      },
      "8": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 20
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 66
        }
      },
      "10": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "11": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 19
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 10
        }
      },
      "14": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 53
        }
      },
      "15": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 30
        }
      },
      "17": {
        start: {
          line: 33,
          column: 17
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "18": {
        start: {
          line: 36,
          column: 32
        },
        end: {
          line: 36,
          column: 88
        }
      },
      "19": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "20": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "21": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 95
        }
      },
      "22": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 44,
          column: 13
        }
      },
      "23": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 57
        }
      },
      "24": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "25": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 25
        }
      },
      "26": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "27": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 31
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 18
        }
      },
      "29": {
        start: {
          line: 53,
          column: 17
        },
        end: {
          line: 66,
          column: 2
        }
      },
      "30": {
        start: {
          line: 54,
          column: 19
        },
        end: {
          line: 54,
          column: 46
        }
      },
      "31": {
        start: {
          line: 56,
          column: 25
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "32": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 68
        }
      },
      "33": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 65,
          column: 6
        }
      },
      "34": {
        start: {
          line: 64,
          column: 102
        },
        end: {
          line: 64,
          column: 139
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 33
          }
        },
        loc: {
          start: {
            line: 12,
            column: 47
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 16,
            column: 40
          }
        },
        loc: {
          start: {
            line: 16,
            column: 61
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 34
          }
        },
        loc: {
          start: {
            line: 20,
            column: 53
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 53,
            column: 47
          },
          end: {
            line: 53,
            column: 48
          }
        },
        loc: {
          start: {
            line: 53,
            column: 74
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 53
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 64,
            column: 83
          },
          end: {
            line: 64,
            column: 84
          }
        },
        loc: {
          start: {
            line: 64,
            column: 102
          },
          end: {
            line: 64,
            column: 139
          }
        },
        line: 64
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 29
          },
          end: {
            line: 17,
            column: 45
          }
        }, {
          start: {
            line: 17,
            column: 48
          },
          end: {
            line: 17,
            column: 65
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 20
          }
        }, {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 21,
            column: 27
          }
        }, {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 21,
            column: 45
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "5": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 20
          }
        }, {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 47
          }
        }, {
          start: {
            line: 24,
            column: 51
          },
          end: {
            line: 24,
            column: 76
          }
        }],
        line: 24
      },
      "6": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "7": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 13
          }
        }, {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 31
          }
        }],
        line: 30
      },
      "8": {
        loc: {
          start: {
            line: 36,
            column: 32
          },
          end: {
            line: 36,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 32
          },
          end: {
            line: 36,
            column: 53
          }
        }, {
          start: {
            line: 36,
            column: 57
          },
          end: {
            line: 36,
            column: 88
          }
        }],
        line: 36
      },
      "9": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "10": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 29
          }
        }, {
          start: {
            line: 38,
            column: 33
          },
          end: {
            line: 38,
            column: 79
          }
        }],
        line: 38
      },
      "11": {
        loc: {
          start: {
            line: 39,
            column: 23
          },
          end: {
            line: 39,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 47
          },
          end: {
            line: 39,
            column: 88
          }
        }, {
          start: {
            line: 39,
            column: 91
          },
          end: {
            line: 39,
            column: 95
          }
        }],
        line: 39
      },
      "12": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: 42,
            column: 19
          },
          end: {
            line: 44,
            column: 13
          }
        }],
        line: 40
      },
      "13": {
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 20
          }
        }, {
          start: {
            line: 40,
            column: 25
          },
          end: {
            line: 40,
            column: 33
          }
        }, {
          start: {
            line: 40,
            column: 37
          },
          end: {
            line: 40,
            column: 45
          }
        }],
        line: 40
      },
      "14": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "15": {
        loc: {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 54,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 54,
            column: 38
          }
        }, {
          start: {
            line: 54,
            column: 42
          },
          end: {
            line: 54,
            column: 46
          }
        }],
        line: 54
      },
      "16": {
        loc: {
          start: {
            line: 61,
            column: 23
          },
          end: {
            line: 61,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 55
          },
          end: {
            line: 61,
            column: 61
          }
        }, {
          start: {
            line: 61,
            column: 64
          },
          end: {
            line: 61,
            column: 68
          }
        }],
        line: 61
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/i18n/request.ts"],
      sourcesContent: ["import { getRequestConfig } from 'next-intl/server';\n\nexport default getRequestConfig(async ({ requestLocale }) => {\n  const locale = (await requestLocale) || 'ja';\n  \n  // Ensure valid locale for message import\n  const validLocales = ['ja', 'en', 'zz-ZZ'];\n  const safeLocale = validLocales.includes(locale) ? locale : 'ja';\n  \n  return {\n    locale,\n    messages: (await import(`../../messages/${safeLocale}.json`)).default\n  };\n});"],
      names: ["getRequestConfig", "requestLocale", "locale", "validLocales", "safeLocale", "includes", "messages", "default"],
      mappings: ";;;;+BAEA;;;eAAA;;;wBAFiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAEjC,WAAeA,IAAAA,wBAAgB,EAAC,OAAO,EAAEC,aAAa,EAAE;IACtD,MAAMC,SAAS,AAAC,MAAMD,iBAAkB;IAExC,yCAAyC;IACzC,MAAME,eAAe;QAAC;QAAM;QAAM;KAAQ;IAC1C,MAAMC,aAAaD,aAAaE,QAAQ,CAACH,UAAUA,SAAS;IAE5D,OAAO;QACLA;QACAI,UAAU,AAAC,CAAA,MAAM,gBAAO,CAAC,eAAe,EAAEF,WAAW,KAAK,CAAC,oDAA1C,YAA0C,EAAGG,OAAO;IACvE;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6f9b1ba660c3331f97c87f9d06c95d1e163ddaba"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_229az2m456 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_229az2m456();
cov_229az2m456().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_229az2m456().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_229az2m456().f[0]++;
    cov_229az2m456().s[2]++;
    return _default;
  }
});
const _server =
/* istanbul ignore next */
(cov_229az2m456().s[3]++, require("next-intl/server"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_229az2m456().f[1]++;
  cov_229az2m456().s[4]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_229az2m456().b[0][0]++;
    cov_229az2m456().s[5]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_229az2m456().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_229az2m456().s[6]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_229az2m456().s[7]++, new WeakMap());
  /* istanbul ignore next */
  cov_229az2m456().s[8]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_229az2m456().f[2]++;
    cov_229az2m456().s[9]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_229az2m456().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_229az2m456().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_229az2m456().f[3]++;
  cov_229az2m456().s[10]++;
  if (
  /* istanbul ignore next */
  (cov_229az2m456().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_229az2m456().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_229az2m456().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_229az2m456().b[2][0]++;
    cov_229az2m456().s[11]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_229az2m456().b[2][1]++;
  }
  cov_229az2m456().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_229az2m456().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_229az2m456().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_229az2m456().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_229az2m456().b[4][0]++;
    cov_229az2m456().s[13]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_229az2m456().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_229az2m456().s[14]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_229az2m456().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_229az2m456().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_229az2m456().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_229az2m456().b[6][0]++;
    cov_229az2m456().s[16]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_229az2m456().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_229az2m456().s[17]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_229az2m456().s[18]++,
  /* istanbul ignore next */
  (cov_229az2m456().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_229az2m456().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_229az2m456().s[19]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_229az2m456().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_229az2m456().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_229az2m456().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_229az2m456().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_229az2m456().s[21]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_229az2m456().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_229az2m456().b[11][1]++, null));
      /* istanbul ignore next */
      cov_229az2m456().s[22]++;
      if (
      /* istanbul ignore next */
      (cov_229az2m456().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_229az2m456().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_229az2m456().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_229az2m456().b[12][0]++;
        cov_229az2m456().s[23]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_229az2m456().b[12][1]++;
        cov_229az2m456().s[24]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_229az2m456().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_229az2m456().s[25]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_229az2m456().s[26]++;
  if (cache) {
    /* istanbul ignore next */
    cov_229az2m456().b[14][0]++;
    cov_229az2m456().s[27]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_229az2m456().b[14][1]++;
  }
  cov_229az2m456().s[28]++;
  return newObj;
}
const _default =
/* istanbul ignore next */
(cov_229az2m456().s[29]++, (0, _server.getRequestConfig)(async ({
  requestLocale
}) => {
  /* istanbul ignore next */
  cov_229az2m456().f[4]++;
  const locale =
  /* istanbul ignore next */
  (cov_229az2m456().s[30]++,
  /* istanbul ignore next */
  (cov_229az2m456().b[15][0]++, await requestLocale) ||
  /* istanbul ignore next */
  (cov_229az2m456().b[15][1]++, 'ja'));
  // Ensure valid locale for message import
  const validLocales =
  /* istanbul ignore next */
  (cov_229az2m456().s[31]++, ['ja', 'en', 'zz-ZZ']);
  const safeLocale =
  /* istanbul ignore next */
  (cov_229az2m456().s[32]++, validLocales.includes(locale) ?
  /* istanbul ignore next */
  (cov_229az2m456().b[16][0]++, locale) :
  /* istanbul ignore next */
  (cov_229az2m456().b[16][1]++, 'ja'));
  /* istanbul ignore next */
  cov_229az2m456().s[33]++;
  return {
    locale,
    messages: (await Promise.resolve(`../../messages/${safeLocale}.json`).then(p => {
      /* istanbul ignore next */
      cov_229az2m456().f[5]++;
      cov_229az2m456().s[34]++;
      return /*#__PURE__*/_interop_require_wildcard(require(p));
    })).default
  };
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsImNvdl8yMjlhejJtNDU2IiwicyIsIl9zZXJ2ZXIiLCJnZXRSZXF1ZXN0Q29uZmlnIiwicmVxdWVzdExvY2FsZSIsImYiLCJsb2NhbGUiLCJiIiwidmFsaWRMb2NhbGVzIiwic2FmZUxvY2FsZSIsImluY2x1ZGVzIiwibWVzc2FnZXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInRoZW4iLCJwIiwiX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZCIsInJlcXVpcmUiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiL1VzZXJzL25vcml0YWthc2F3YWRhL0FJX1Avc3Vic2lkeUFwcC9mcm9udGVuZC9zcmMvaTE4bi9yZXF1ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFJlcXVlc3RDb25maWcgfSBmcm9tICduZXh0LWludGwvc2VydmVyJztcblxuZXhwb3J0IGRlZmF1bHQgZ2V0UmVxdWVzdENvbmZpZyhhc3luYyAoeyByZXF1ZXN0TG9jYWxlIH0pID0+IHtcbiAgY29uc3QgbG9jYWxlID0gKGF3YWl0IHJlcXVlc3RMb2NhbGUpIHx8ICdqYSc7XG4gIFxuICAvLyBFbnN1cmUgdmFsaWQgbG9jYWxlIGZvciBtZXNzYWdlIGltcG9ydFxuICBjb25zdCB2YWxpZExvY2FsZXMgPSBbJ2phJywgJ2VuJywgJ3p6LVpaJ107XG4gIGNvbnN0IHNhZmVMb2NhbGUgPSB2YWxpZExvY2FsZXMuaW5jbHVkZXMobG9jYWxlKSA/IGxvY2FsZSA6ICdqYSc7XG4gIFxuICByZXR1cm4ge1xuICAgIGxvY2FsZSxcbiAgICBtZXNzYWdlczogKGF3YWl0IGltcG9ydChgLi4vLi4vbWVzc2FnZXMvJHtzYWZlTG9jYWxlfS5qc29uYCkpLmRlZmF1bHRcbiAgfTtcbn0pOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQkFFQTs7Ozs7O1dBQUFBLFFBQUE7Ozs7O2tDQUZpQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQUVqQ0EsUUFBQTtBQUFBO0FBQUEsQ0FBQUMsY0FBQSxHQUFBQyxDQUFBLFFBQWUsSUFBQUMsT0FBQSxDQUFBQyxnQkFBZ0IsRUFBQyxPQUFPO0VBQUVDO0FBQWEsQ0FBRTtFQUFBO0VBQUFKLGNBQUEsR0FBQUssQ0FBQTtFQUN0RCxNQUFNQyxNQUFBO0VBQUE7RUFBQSxDQUFBTixjQUFBLEdBQUFDLENBQUE7RUFBUztFQUFBLENBQUFELGNBQUEsR0FBQU8sQ0FBQSxpQkFBT0gsYUFBQTtFQUFBO0VBQUEsQ0FBQUosY0FBQSxHQUFBTyxDQUFBLFdBQWtCO0VBRXhDO0VBQ0EsTUFBTUMsWUFBQTtFQUFBO0VBQUEsQ0FBQVIsY0FBQSxHQUFBQyxDQUFBLFFBQWUsQ0FBQyxNQUFNLE1BQU0sUUFBUTtFQUMxQyxNQUFNUSxVQUFBO0VBQUE7RUFBQSxDQUFBVCxjQUFBLEdBQUFDLENBQUEsUUFBYU8sWUFBQSxDQUFhRSxRQUFRLENBQUNKLE1BQUE7RUFBQTtFQUFBLENBQUFOLGNBQUEsR0FBQU8sQ0FBQSxXQUFVRCxNQUFBO0VBQUE7RUFBQSxDQUFBTixjQUFBLEdBQUFPLENBQUEsV0FBUztFQUFBO0VBQUFQLGNBQUEsR0FBQUMsQ0FBQTtFQUU1RCxPQUFPO0lBQ0xLLE1BQUE7SUFDQUssUUFBQSxFQUFVLENBQUMsTUFBTUMsT0FBQSxDQUFBQyxPQUFBLENBQU8sa0JBQWtCSixVQUFBLE9BQWlCLEVBQUFLLElBQUEsQ0FBQUMsQ0FBQTtNQUFBO01BQUFmLGNBQUEsR0FBQUssQ0FBQTtNQUFBTCxjQUFBLEdBQUFDLENBQUE7TUFBQSxvQkFBQWUseUJBQUEsQ0FBMUNDLE9BQUEsQ0FBQUYsQ0FBQTtJQUFBLEVBQTBDLEVBQUdHO0VBQ2hFO0FBQ0YiLCJpZ25vcmVMaXN0IjpbXX0=