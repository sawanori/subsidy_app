{"version":3,"names":["BackgroundForm","applicationId","data","onChange","onValidate","cov_2llqx0bgzr","f","formData","setFormData","s","_react","useState","b","isGenerating","setIsGenerating","generationProgress","setGenerationProgress","errors","setErrors","characterCounts","setCharacterCounts","activeTab","setActiveTab","CHARACTER_LIMITS","currentSituation","marketEnvironment","competitiveAdvantage","necessityReason","handleFieldChange","field","value","newData","prev","length","newErrors","handleAutoGenerate","response","_client","apiClient","post","application_id","evidence_ids","evidence","map","e","id","generatedContent","parseGeneratedBackground","content","citations","c","evidence_id","text","url","setTimeout","error","generation","message","sections","sectionPatterns","key","pattern","Object","entries","match","trim","challengeMatch","challenges","split","line","filter","startsWith","substring","validateForm","limit","keys","addChallenge","updateChallenge","index","removeChallenge","splice","_jsxruntime","jsxs","_card","Card","CardHeader","CardTitle","className","jsx","_lucidereact","FileText","CardDescription","CardContent","_tabs","Tabs","onValueChange","TabsList","TabsTrigger","TabsContent","_label","Label","htmlFor","target","placeholder","rows","challenge","_button","Button","type","variant","size","onClick","ev","_badge","Badge","href","rel","_alert","Alert","Sparkles","AlertDescription","Loader2","_progress","Progress","AlertCircle","defaultChecked","Info"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/forms/background-form.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Label } from '@/components/ui/label';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  FileText,\n  Sparkles,\n  AlertCircle,\n  CheckCircle,\n  Info,\n  Loader2,\n  RefreshCw,\n  Search,\n} from 'lucide-react';\nimport { apiClient } from '@/lib/api/client';\nimport { GenerateResponse } from '@/lib/api/types';\n\ninterface BackgroundData {\n  currentSituation?: string;\n  challenges?: string[];\n  marketEnvironment?: string;\n  competitiveAdvantage?: string;\n  necessityReason?: string;\n  evidence?: Array<{\n    id: string;\n    text: string;\n    url: string;\n  }>;\n}\n\ninterface BackgroundFormProps {\n  applicationId: string;\n  data?: BackgroundData;\n  onChange: (data: BackgroundData) => void;\n  onValidate?: () => Promise<boolean>;\n}\n\nexport function BackgroundForm({\n  applicationId,\n  data,\n  onChange,\n  onValidate,\n}: BackgroundFormProps) {\n  const [formData, setFormData] = useState<BackgroundData>(data || {});\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generationProgress, setGenerationProgress] = useState(0);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [characterCounts, setCharacterCounts] = useState<Record<string, number>>({});\n  const [activeTab, setActiveTab] = useState('manual');\n\n  const CHARACTER_LIMITS = {\n    currentSituation: 500,\n    marketEnvironment: 300,\n    competitiveAdvantage: 300,\n    necessityReason: 400,\n  };\n\n  const handleFieldChange = (field: string, value: any) => {\n    const newData = { ...formData, [field]: value };\n    setFormData(newData);\n    onChange(newData);\n\n    // 文字数カウント更新\n    if (typeof value === 'string') {\n      setCharacterCounts((prev) => ({ ...prev, [field]: value.length }));\n    }\n\n    // エラークリア\n    if (errors[field]) {\n      setErrors((prev) => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  const handleAutoGenerate = async () => {\n    setIsGenerating(true);\n    setGenerationProgress(10);\n\n    try {\n      // 背景生成APIを呼び出し\n      setGenerationProgress(30);\n      const response = await apiClient.post<GenerateResponse>('/generate/background', {\n        application_id: applicationId,\n        evidence_ids: formData.evidence?.map((e) => e.id) || [],\n      });\n\n      setGenerationProgress(70);\n\n      // レスポンスをパース\n      const generatedContent = parseGeneratedBackground(response.content);\n\n      setGenerationProgress(90);\n\n      // フォームデータを更新\n      const newData: BackgroundData = {\n        ...formData,\n        ...generatedContent,\n        evidence: response.citations.map((c) => ({\n          id: c.evidence_id,\n          text: c.text,\n          url: c.url,\n        })),\n      };\n\n      setFormData(newData);\n      onChange(newData);\n      setGenerationProgress(100);\n\n      setTimeout(() => {\n        setGenerationProgress(0);\n        setActiveTab('manual');\n      }, 1000);\n    } catch (error: any) {\n      setErrors({ generation: error.message || '生成に失敗しました' });\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const parseGeneratedBackground = (content: string): Partial<BackgroundData> => {\n    // 生成されたテキストをセクションごとに分割\n    const sections: Partial<BackgroundData> = {};\n\n    const sectionPatterns = {\n      currentSituation: /【現状】\\s*([\\s\\S]*?)(?=【|$)/,\n      marketEnvironment: /【市場環境】\\s*([\\s\\S]*?)(?=【|$)/,\n      competitiveAdvantage: /【競争優位性】\\s*([\\s\\S]*?)(?=【|$)/,\n      necessityReason: /【必要性】\\s*([\\s\\S]*?)(?=【|$)/,\n    };\n\n    for (const [key, pattern] of Object.entries(sectionPatterns)) {\n      const match = content.match(pattern);\n      if (match && match[1]) {\n        sections[key] = match[1].trim();\n      }\n    }\n\n    // 課題の抽出\n    const challengeMatch = content.match(/【課題】\\s*([\\s\\S]*?)(?=【|$)/);\n    if (challengeMatch && challengeMatch[1]) {\n      sections.challenges = challengeMatch[1]\n        .split(/\\n/)\n        .map((line) => line.trim())\n        .filter((line) => line.startsWith('・'))\n        .map((line) => line.substring(1).trim());\n    }\n\n    return sections;\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.currentSituation) {\n      newErrors.currentSituation = '現在の状況は必須です';\n    }\n    if (!formData.challenges || formData.challenges.length === 0) {\n      newErrors.challenges = '課題を少なくとも1つ入力してください';\n    }\n    if (!formData.necessityReason) {\n      newErrors.necessityReason = '補助金の必要性は必須です';\n    }\n\n    // 文字数超過チェック\n    for (const [field, limit] of Object.entries(CHARACTER_LIMITS)) {\n      const value = formData[field];\n      if (typeof value === 'string' && value.length > limit) {\n        newErrors[field] = `文字数が上限（${limit}文字）を超えています`;\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const addChallenge = () => {\n    const challenges = formData.challenges || [];\n    handleFieldChange('challenges', [...challenges, '']);\n  };\n\n  const updateChallenge = (index: number, value: string) => {\n    const challenges = [...(formData.challenges || [])];\n    challenges[index] = value;\n    handleFieldChange('challenges', challenges);\n  };\n\n  const removeChallenge = (index: number) => {\n    const challenges = [...(formData.challenges || [])];\n    challenges.splice(index, 1);\n    handleFieldChange('challenges', challenges);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <FileText className=\"h-5 w-5\" />\n          事業背景・課題\n        </CardTitle>\n        <CardDescription>\n          現在の事業状況と解決すべき課題を記入してください。AIによる自動生成も利用できます。\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Tabs value={activeTab} onValueChange={setActiveTab}>\n          <TabsList className=\"grid w-full grid-cols-2\">\n            <TabsTrigger value=\"manual\">手動入力</TabsTrigger>\n            <TabsTrigger value=\"generate\">AI生成</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"manual\" className=\"space-y-6 mt-6\">\n            {/* 現在の状況 */}\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between\">\n                <Label htmlFor=\"currentSituation\">\n                  現在の状況 <span className=\"text-destructive\">*</span>\n                </Label>\n                <span className=\"text-xs text-muted-foreground\">\n                  {characterCounts.currentSituation || 0} / {CHARACTER_LIMITS.currentSituation}\n                </span>\n              </div>\n              <textarea\n                id=\"currentSituation\"\n                value={formData.currentSituation || ''}\n                onChange={(e) => handleFieldChange('currentSituation', e.target.value)}\n                placeholder=\"現在の事業の状況、売上規模、従業員数、主要顧客などを記載\"\n                className=\"flex min-h-[100px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\"\n                rows={4}\n              />\n              {errors.currentSituation && (\n                <p className=\"text-sm text-destructive\">{errors.currentSituation}</p>\n              )}\n            </div>\n\n            {/* 課題 */}\n            <div className=\"space-y-2\">\n              <Label>\n                課題・問題点 <span className=\"text-destructive\">*</span>\n              </Label>\n              <div className=\"space-y-2\">\n                {(formData.challenges || []).map((challenge, index) => (\n                  <div key={index} className=\"flex gap-2\">\n                    <input\n                      value={challenge}\n                      onChange={(e) => updateChallenge(index, e.target.value)}\n                      placeholder={`課題 ${index + 1}`}\n                      className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\"\n                    />\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => removeChallenge(index)}\n                    >\n                      削除\n                    </Button>\n                  </div>\n                ))}\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={addChallenge}\n                  className=\"w-full\"\n                >\n                  課題を追加\n                </Button>\n              </div>\n              {errors.challenges && (\n                <p className=\"text-sm text-destructive\">{errors.challenges}</p>\n              )}\n            </div>\n\n            {/* 市場環境 */}\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between\">\n                <Label htmlFor=\"marketEnvironment\">市場環境</Label>\n                <span className=\"text-xs text-muted-foreground\">\n                  {characterCounts.marketEnvironment || 0} / {CHARACTER_LIMITS.marketEnvironment}\n                </span>\n              </div>\n              <textarea\n                id=\"marketEnvironment\"\n                value={formData.marketEnvironment || ''}\n                onChange={(e) => handleFieldChange('marketEnvironment', e.target.value)}\n                placeholder=\"業界の動向、市場規模、成長性など\"\n                className=\"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\n                rows={3}\n              />\n            </div>\n\n            {/* 競争優位性 */}\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between\">\n                <Label htmlFor=\"competitiveAdvantage\">競争優位性</Label>\n                <span className=\"text-xs text-muted-foreground\">\n                  {characterCounts.competitiveAdvantage || 0} / {CHARACTER_LIMITS.competitiveAdvantage}\n                </span>\n              </div>\n              <textarea\n                id=\"competitiveAdvantage\"\n                value={formData.competitiveAdvantage || ''}\n                onChange={(e) => handleFieldChange('competitiveAdvantage', e.target.value)}\n                placeholder=\"自社の強み、独自技術、差別化要素など\"\n                className=\"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\n                rows={3}\n              />\n            </div>\n\n            {/* 補助金の必要性 */}\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between\">\n                <Label htmlFor=\"necessityReason\">\n                  補助金の必要性 <span className=\"text-destructive\">*</span>\n                </Label>\n                <span className=\"text-xs text-muted-foreground\">\n                  {characterCounts.necessityReason || 0} / {CHARACTER_LIMITS.necessityReason}\n                </span>\n              </div>\n              <textarea\n                id=\"necessityReason\"\n                value={formData.necessityReason || ''}\n                onChange={(e) => handleFieldChange('necessityReason', e.target.value)}\n                placeholder=\"なぜ補助金が必要か、どのように活用するか\"\n                className=\"flex min-h-[100px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\n                rows={4}\n              />\n              {errors.necessityReason && (\n                <p className=\"text-sm text-destructive\">{errors.necessityReason}</p>\n              )}\n            </div>\n\n            {/* エビデンス */}\n            {formData.evidence && formData.evidence.length > 0 && (\n              <div className=\"space-y-2\">\n                <Label>引用・根拠資料</Label>\n                <div className=\"space-y-2\">\n                  {formData.evidence.map((ev, index) => (\n                    <div key={index} className=\"flex items-start gap-2 text-sm\">\n                      <Badge variant=\"secondary\">{index + 1}</Badge>\n                      <div className=\"flex-1\">\n                        <p className=\"text-muted-foreground\">{ev.text}</p>\n                        {ev.url && (\n                          <a\n                            href={ev.url}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"text-xs text-primary hover:underline\"\n                          >\n                            {ev.url}\n                          </a>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </TabsContent>\n\n          <TabsContent value=\"generate\" className=\"space-y-6 mt-6\">\n            <Alert>\n              <Sparkles className=\"h-4 w-4\" />\n              <AlertDescription>\n                AIが申請内容に基づいて背景説明を自動生成します。生成後は手動で編集可能です。\n              </AlertDescription>\n            </Alert>\n\n            <div className=\"space-y-4\">\n              {!isGenerating && (\n                <Button\n                  onClick={handleAutoGenerate}\n                  className=\"w-full gap-2\"\n                  size=\"lg\"\n                >\n                  <Sparkles className=\"h-4 w-4\" />\n                  背景説明を自動生成\n                </Button>\n              )}\n\n              {isGenerating && (\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-center py-8\">\n                    <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n                  </div>\n                  <Progress value={generationProgress} className=\"h-2\" />\n                  <p className=\"text-center text-sm text-muted-foreground\">\n                    {generationProgress < 30 && 'データを分析中...'}\n                    {generationProgress >= 30 && generationProgress < 70 && '背景情報を生成中...'}\n                    {generationProgress >= 70 && generationProgress < 90 && 'エビデンスを収集中...'}\n                    {generationProgress >= 90 && '最終調整中...'}\n                  </p>\n                </div>\n              )}\n\n              {errors.generation && (\n                <Alert variant=\"destructive\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>{errors.generation}</AlertDescription>\n                </Alert>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label>生成オプション</Label>\n              <div className=\"space-y-3\">\n                <label className=\"flex items-center gap-2\">\n                  <input type=\"checkbox\" className=\"rounded\" defaultChecked />\n                  <span className=\"text-sm\">市場データを含める</span>\n                </label>\n                <label className=\"flex items-center gap-2\">\n                  <input type=\"checkbox\" className=\"rounded\" defaultChecked />\n                  <span className=\"text-sm\">競合分析を含める</span>\n                </label>\n                <label className=\"flex items-center gap-2\">\n                  <input type=\"checkbox\" className=\"rounded\" defaultChecked />\n                  <span className=\"text-sm\">根拠資料の引用を含める</span>\n                </label>\n              </div>\n            </div>\n          </TabsContent>\n        </Tabs>\n\n        <div className=\"mt-6\">\n          <Alert>\n            <Info className=\"h-4 w-4\" />\n            <AlertDescription>\n              背景説明は審査員が最初に読む重要な部分です。\n              具体的な数値や事実を含め、説得力のある内容にしましょう。\n            </AlertDescription>\n          </Alert>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}