a1e2dec4b89339ffe0a88d7807babf57
"use strict";

/* istanbul ignore next */
function cov_1su9e8qkwy() {
  var path = "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/hooks/useAIAssistant.ts";
  var hash = "bae73ead16619f88d1f19f190cf0168d7cdd7359";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/hooks/useAIAssistant.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "3": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "4": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 33
        }
      },
      "5": {
        start: {
          line: 14,
          column: 38
        },
        end: {
          line: 14,
          column: 65
        }
      },
      "6": {
        start: {
          line: 15,
          column: 36
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "7": {
        start: {
          line: 16,
          column: 30
        },
        end: {
          line: 16,
          column: 56
        }
      },
      "8": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 53,
          column: 6
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 27
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 23
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "12": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 21,
          column: 85
        }
      },
      "13": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 68
        }
      },
      "14": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 29,
          column: 14
        }
      },
      "15": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 32,
          column: 13
        }
      },
      "16": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 72
        }
      },
      "17": {
        start: {
          line: 33,
          column: 31
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "18": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 36
        }
      },
      "19": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 37,
          column: 13
        }
      },
      "20": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "21": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 49
        }
      },
      "22": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "23": {
        start: {
          line: 41,
          column: 26
        },
        end: {
          line: 41,
          column: 29
        }
      },
      "24": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 28
        }
      },
      "25": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "26": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 39
        }
      },
      "27": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 65
        }
      },
      "28": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 24
        }
      },
      "29": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 32
        }
      },
      "30": {
        start: {
          line: 55,
          column: 26
        },
        end: {
          line: 63,
          column: 6
        }
      },
      "31": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 60,
          column: 11
        }
      },
      "32": {
        start: {
          line: 65,
          column: 29
        },
        end: {
          line: 74,
          column: 6
        }
      },
      "33": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "34": {
        start: {
          line: 76,
          column: 26
        },
        end: {
          line: 83,
          column: 6
        }
      },
      "35": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 80,
          column: 11
        }
      },
      "36": {
        start: {
          line: 85,
          column: 24
        },
        end: {
          line: 92,
          column: 6
        }
      },
      "37": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 89,
          column: 11
        }
      },
      "38": {
        start: {
          line: 94,
          column: 25
        },
        end: {
          line: 101,
          column: 6
        }
      },
      "39": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 98,
          column: 11
        }
      },
      "40": {
        start: {
          line: 103,
          column: 26
        },
        end: {
          line: 111,
          column: 6
        }
      },
      "41": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 108,
          column: 11
        }
      },
      "42": {
        start: {
          line: 113,
          column: 26
        },
        end: {
          line: 121,
          column: 6
        }
      },
      "43": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "44": {
        start: {
          line: 123,
          column: 28
        },
        end: {
          line: 133,
          column: 6
        }
      },
      "45": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 130,
          column: 11
        }
      },
      "46": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 146,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "useAIAssistant",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 23
          }
        },
        loc: {
          start: {
            line: 13,
            column: 33
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 43
          },
          end: {
            line: 17,
            column: 44
          }
        },
        loc: {
          start: {
            line: 17,
            column: 66
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 55,
            column: 50
          },
          end: {
            line: 55,
            column: 51
          }
        },
        loc: {
          start: {
            line: 55,
            column: 105
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 55
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 65,
            column: 53
          },
          end: {
            line: 65,
            column: 54
          }
        },
        loc: {
          start: {
            line: 65,
            column: 123
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 65
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 76,
            column: 50
          },
          end: {
            line: 76,
            column: 51
          }
        },
        loc: {
          start: {
            line: 76,
            column: 84
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 76
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 85,
            column: 48
          },
          end: {
            line: 85,
            column: 49
          }
        },
        loc: {
          start: {
            line: 85,
            column: 87
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 85
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 94,
            column: 49
          },
          end: {
            line: 94,
            column: 50
          }
        },
        loc: {
          start: {
            line: 94,
            column: 94
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 94
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 103,
            column: 50
          },
          end: {
            line: 103,
            column: 51
          }
        },
        loc: {
          start: {
            line: 103,
            column: 103
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 103
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 113,
            column: 50
          },
          end: {
            line: 113,
            column: 51
          }
        },
        loc: {
          start: {
            line: 113,
            column: 110
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 113
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 123,
            column: 52
          },
          end: {
            line: 123,
            column: 53
          }
        },
        loc: {
          start: {
            line: 123,
            column: 133
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 123
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 58
          }
        }, {
          start: {
            line: 21,
            column: 62
          },
          end: {
            line: 21,
            column: 85
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/hooks/useAIAssistant.ts"],
      sourcesContent: ["import { useState, useCallback } from 'react';\nimport { toast } from 'sonner';\n\nexport type AIFeature = \n  | 'analyze-issues'\n  | 'suggest-solutions'\n  | 'elaborate-plan'\n  | 'suggest-kpis'\n  | 'analyze-risks'\n  | 'analyze-market'\n  | 'generate-gantt'\n  | 'generate-summary';\n\ninterface AIResponse {\n  content: any;\n  type: 'text' | 'json' | 'markdown';\n  category: string;\n  tokensUsed: number;\n  confidence?: number;\n  metadata?: Record<string, any>;\n}\n\ninterface UseAIAssistantOptions {\n  onSuccess?: (response: AIResponse) => void;\n  onError?: (error: Error) => void;\n}\n\nexport function useAIAssistant(options?: UseAIAssistantOptions) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [response, setResponse] = useState<AIResponse | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n\n  const callAI = useCallback(async (\n    feature: AIFeature,\n    data: any\n  ): Promise<AIResponse | null> => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const apiUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001';\n      const endpoint = `${apiUrl}/api/ai-assistant/${feature}`;\n      \n      const res = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!res.ok) {\n        throw new Error(`AI request failed: ${res.statusText}`);\n      }\n\n      const aiResponse: AIResponse = await res.json();\n      setResponse(aiResponse);\n      \n      if (options?.onSuccess) {\n        options.onSuccess(aiResponse);\n      }\n      \n      toast.success('AI\u5206\u6790\u304C\u5B8C\u4E86\u3057\u307E\u3057\u305F');\n      return aiResponse;\n    } catch (err) {\n      const error = err as Error;\n      setError(error);\n      \n      if (options?.onError) {\n        options.onError(error);\n      }\n      \n      toast.error('AI\u5206\u6790\u306B\u5931\u6557\u3057\u307E\u3057\u305F: ' + error.message);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [options]);\n\n  // \u8AB2\u984C\u5206\u6790\n  const analyzeIssues = useCallback(async (\n    businessDescription: string,\n    painPoints: string,\n    businessType?: string\n  ) => {\n    return callAI('analyze-issues', {\n      businessDescription,\n      painPoints,\n      businessType,\n    });\n  }, [callAI]);\n\n  // \u89E3\u6C7A\u7B56\u63D0\u6848\n  const suggestSolutions = useCallback(async (\n    currentIssues: any[],\n    businessType: string,\n    maxAmount: number,\n    implementationPeriod: string\n  ) => {\n    return callAI('suggest-solutions', {\n      currentIssues,\n      businessType,\n      maxAmount,\n      implementationPeriod,\n    });\n  }, [callAI]);\n\n  // 5W1H\u8A73\u7D30\u5316\n  const elaboratePlan = useCallback(async (\n    planSummary: string,\n    targetIssue: string\n  ) => {\n    return callAI('elaborate-plan', {\n      planSummary,\n      targetIssue,\n    });\n  }, [callAI]);\n\n  // KPI\u63D0\u6848\n  const suggestKPIs = useCallback(async (\n    businessPlan: string,\n    expectedEffects: string\n  ) => {\n    return callAI('suggest-kpis', {\n      businessPlan,\n      expectedEffects,\n    });\n  }, [callAI]);\n\n  // \u30EA\u30B9\u30AF\u5206\u6790\n  const analyzeRisks = useCallback(async (\n    businessPlan: string,\n    implementationDetails: string\n  ) => {\n    return callAI('analyze-risks', {\n      businessPlan,\n      implementationDetails,\n    });\n  }, [callAI]);\n\n  // \u5E02\u5834\u5206\u6790\n  const analyzeMarket = useCallback(async (\n    businessDescription: string,\n    targetCustomer: string,\n    region?: string\n  ) => {\n    return callAI('analyze-market', {\n      businessDescription,\n      targetCustomer,\n      region,\n    });\n  }, [callAI]);\n\n  // \u30AC\u30F3\u30C8\u30C1\u30E3\u30FC\u30C8\u751F\u6210\n  const generateGantt = useCallback(async (\n    businessPlan: string,\n    implementationPeriod: string,\n    mainActivities: string[]\n  ) => {\n    return callAI('generate-gantt', {\n      businessPlan,\n      implementationPeriod,\n      mainActivities,\n    });\n  }, [callAI]);\n\n  // \u7533\u8ACB\u66F8\u30B5\u30DE\u30EA\u30FC\u751F\u6210\n  const generateSummary = useCallback(async (\n    companyInfo: any,\n    currentIssues: any[],\n    solutions: string,\n    expectedEffects: string,\n    requestedAmount: number\n  ) => {\n    return callAI('generate-summary', {\n      companyInfo,\n      currentIssues,\n      solutions,\n      expectedEffects,\n      requestedAmount,\n    });\n  }, [callAI]);\n\n  return {\n    isLoading,\n    response,\n    error,\n    analyzeIssues,\n    suggestSolutions,\n    elaboratePlan,\n    suggestKPIs,\n    analyzeRisks,\n    analyzeMarket,\n    generateGantt,\n    generateSummary,\n  };\n}"],
      names: ["useAIAssistant", "options", "isLoading", "setIsLoading", "useState", "response", "setResponse", "error", "setError", "callAI", "useCallback", "feature", "data", "apiUrl", "process", "env", "NEXT_PUBLIC_API_URL", "endpoint", "res", "fetch", "method", "headers", "body", "JSON", "stringify", "ok", "Error", "statusText", "aiResponse", "json", "onSuccess", "toast", "success", "err", "onError", "message", "analyzeIssues", "businessDescription", "painPoints", "businessType", "suggestSolutions", "currentIssues", "maxAmount", "implementationPeriod", "elaboratePlan", "planSummary", "targetIssue", "suggestKPIs", "businessPlan", "expectedEffects", "analyzeRisks", "implementationDetails", "analyzeMarket", "targetCustomer", "region", "generateGantt", "mainActivities", "generateSummary", "companyInfo", "solutions", "requestedAmount"],
      mappings: ";;;;+BA2BgBA;;;eAAAA;;;uBA3BsB;wBAChB;AA0Bf,SAASA,eAAeC,OAA+B;IAC5D,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACC,UAAUC,YAAY,GAAGF,IAAAA,eAAQ,EAAoB;IAC5D,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAe;IAEjD,MAAMK,SAASC,IAAAA,kBAAW,EAAC,OACzBC,SACAC;QAEAT,aAAa;QACbK,SAAS;QAET,IAAI;YACF,MAAMK,SAASC,QAAQC,GAAG,CAACC,mBAAmB,IAAI;YAClD,MAAMC,WAAW,GAAGJ,OAAO,kBAAkB,EAAEF,SAAS;YAExD,MAAMO,MAAM,MAAMC,MAAMF,UAAU;gBAChCG,QAAQ;gBACRC,SAAS;oBACP,gBAAgB;gBAClB;gBACAC,MAAMC,KAAKC,SAAS,CAACZ;YACvB;YAEA,IAAI,CAACM,IAAIO,EAAE,EAAE;gBACX,MAAM,IAAIC,MAAM,CAAC,mBAAmB,EAAER,IAAIS,UAAU,EAAE;YACxD;YAEA,MAAMC,aAAyB,MAAMV,IAAIW,IAAI;YAC7CvB,YAAYsB;YAEZ,IAAI3B,SAAS6B,WAAW;gBACtB7B,QAAQ6B,SAAS,CAACF;YACpB;YAEAG,aAAK,CAACC,OAAO,CAAC;YACd,OAAOJ;QACT,EAAE,OAAOK,KAAK;YACZ,MAAM1B,QAAQ0B;YACdzB,SAASD;YAET,IAAIN,SAASiC,SAAS;gBACpBjC,QAAQiC,OAAO,CAAC3B;YAClB;YAEAwB,aAAK,CAACxB,KAAK,CAAC,kBAAkBA,MAAM4B,OAAO;YAC3C,OAAO;QACT,SAAU;YACRhC,aAAa;QACf;IACF,GAAG;QAACF;KAAQ;IAEZ,OAAO;IACP,MAAMmC,gBAAgB1B,IAAAA,kBAAW,EAAC,OAChC2B,qBACAC,YACAC;QAEA,OAAO9B,OAAO,kBAAkB;YAC9B4B;YACAC;YACAC;QACF;IACF,GAAG;QAAC9B;KAAO;IAEX,QAAQ;IACR,MAAM+B,mBAAmB9B,IAAAA,kBAAW,EAAC,OACnC+B,eACAF,cACAG,WACAC;QAEA,OAAOlC,OAAO,qBAAqB;YACjCgC;YACAF;YACAG;YACAC;QACF;IACF,GAAG;QAAClC;KAAO;IAEX,UAAU;IACV,MAAMmC,gBAAgBlC,IAAAA,kBAAW,EAAC,OAChCmC,aACAC;QAEA,OAAOrC,OAAO,kBAAkB;YAC9BoC;YACAC;QACF;IACF,GAAG;QAACrC;KAAO;IAEX,QAAQ;IACR,MAAMsC,cAAcrC,IAAAA,kBAAW,EAAC,OAC9BsC,cACAC;QAEA,OAAOxC,OAAO,gBAAgB;YAC5BuC;YACAC;QACF;IACF,GAAG;QAACxC;KAAO;IAEX,QAAQ;IACR,MAAMyC,eAAexC,IAAAA,kBAAW,EAAC,OAC/BsC,cACAG;QAEA,OAAO1C,OAAO,iBAAiB;YAC7BuC;YACAG;QACF;IACF,GAAG;QAAC1C;KAAO;IAEX,OAAO;IACP,MAAM2C,gBAAgB1C,IAAAA,kBAAW,EAAC,OAChC2B,qBACAgB,gBACAC;QAEA,OAAO7C,OAAO,kBAAkB;YAC9B4B;YACAgB;YACAC;QACF;IACF,GAAG;QAAC7C;KAAO;IAEX,YAAY;IACZ,MAAM8C,gBAAgB7C,IAAAA,kBAAW,EAAC,OAChCsC,cACAL,sBACAa;QAEA,OAAO/C,OAAO,kBAAkB;YAC9BuC;YACAL;YACAa;QACF;IACF,GAAG;QAAC/C;KAAO;IAEX,YAAY;IACZ,MAAMgD,kBAAkB/C,IAAAA,kBAAW,EAAC,OAClCgD,aACAjB,eACAkB,WACAV,iBACAW;QAEA,OAAOnD,OAAO,oBAAoB;YAChCiD;YACAjB;YACAkB;YACAV;YACAW;QACF;IACF,GAAG;QAACnD;KAAO;IAEX,OAAO;QACLP;QACAG;QACAE;QACA6B;QACAI;QACAI;QACAG;QACAG;QACAE;QACAG;QACAE;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bae73ead16619f88d1f19f190cf0168d7cdd7359"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1su9e8qkwy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1su9e8qkwy();
cov_1su9e8qkwy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1su9e8qkwy().s[1]++;
Object.defineProperty(exports, "useAIAssistant", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1su9e8qkwy().f[0]++;
    cov_1su9e8qkwy().s[2]++;
    return useAIAssistant;
  }
});
const _react =
/* istanbul ignore next */
(cov_1su9e8qkwy().s[3]++, require("react"));
const _sonner =
/* istanbul ignore next */
(cov_1su9e8qkwy().s[4]++, require("sonner"));
function useAIAssistant(options) {
  /* istanbul ignore next */
  cov_1su9e8qkwy().f[1]++;
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1su9e8qkwy().s[5]++, (0, _react.useState)(false));
  const [response, setResponse] =
  /* istanbul ignore next */
  (cov_1su9e8qkwy().s[6]++, (0, _react.useState)(null));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1su9e8qkwy().s[7]++, (0, _react.useState)(null));
  const callAI =
  /* istanbul ignore next */
  (cov_1su9e8qkwy().s[8]++, (0, _react.useCallback)(async (feature, data) => {
    /* istanbul ignore next */
    cov_1su9e8qkwy().f[2]++;
    cov_1su9e8qkwy().s[9]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1su9e8qkwy().s[10]++;
    setError(null);
    /* istanbul ignore next */
    cov_1su9e8qkwy().s[11]++;
    try {
      const apiUrl =
      /* istanbul ignore next */
      (cov_1su9e8qkwy().s[12]++,
      /* istanbul ignore next */
      (cov_1su9e8qkwy().b[0][0]++, process.env.NEXT_PUBLIC_API_URL) ||
      /* istanbul ignore next */
      (cov_1su9e8qkwy().b[0][1]++, 'http://localhost:3001'));
      const endpoint =
      /* istanbul ignore next */
      (cov_1su9e8qkwy().s[13]++, `${apiUrl}/api/ai-assistant/${feature}`);
      const res =
      /* istanbul ignore next */
      (cov_1su9e8qkwy().s[14]++, await fetch(endpoint, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      }));
      /* istanbul ignore next */
      cov_1su9e8qkwy().s[15]++;
      if (!res.ok) {
        /* istanbul ignore next */
        cov_1su9e8qkwy().b[1][0]++;
        cov_1su9e8qkwy().s[16]++;
        throw new Error(`AI request failed: ${res.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_1su9e8qkwy().b[1][1]++;
      }
      const aiResponse =
      /* istanbul ignore next */
      (cov_1su9e8qkwy().s[17]++, await res.json());
      /* istanbul ignore next */
      cov_1su9e8qkwy().s[18]++;
      setResponse(aiResponse);
      /* istanbul ignore next */
      cov_1su9e8qkwy().s[19]++;
      if (options?.onSuccess) {
        /* istanbul ignore next */
        cov_1su9e8qkwy().b[2][0]++;
        cov_1su9e8qkwy().s[20]++;
        options.onSuccess(aiResponse);
      } else
      /* istanbul ignore next */
      {
        cov_1su9e8qkwy().b[2][1]++;
      }
      cov_1su9e8qkwy().s[21]++;
      _sonner.toast.success('AI分析が完了しました');
      /* istanbul ignore next */
      cov_1su9e8qkwy().s[22]++;
      return aiResponse;
    } catch (err) {
      const error =
      /* istanbul ignore next */
      (cov_1su9e8qkwy().s[23]++, err);
      /* istanbul ignore next */
      cov_1su9e8qkwy().s[24]++;
      setError(error);
      /* istanbul ignore next */
      cov_1su9e8qkwy().s[25]++;
      if (options?.onError) {
        /* istanbul ignore next */
        cov_1su9e8qkwy().b[3][0]++;
        cov_1su9e8qkwy().s[26]++;
        options.onError(error);
      } else
      /* istanbul ignore next */
      {
        cov_1su9e8qkwy().b[3][1]++;
      }
      cov_1su9e8qkwy().s[27]++;
      _sonner.toast.error('AI分析に失敗しました: ' + error.message);
      /* istanbul ignore next */
      cov_1su9e8qkwy().s[28]++;
      return null;
    } finally {
      /* istanbul ignore next */
      cov_1su9e8qkwy().s[29]++;
      setIsLoading(false);
    }
  }, [options]));
  // 課題分析
  const analyzeIssues =
  /* istanbul ignore next */
  (cov_1su9e8qkwy().s[30]++, (0, _react.useCallback)(async (businessDescription, painPoints, businessType) => {
    /* istanbul ignore next */
    cov_1su9e8qkwy().f[3]++;
    cov_1su9e8qkwy().s[31]++;
    return callAI('analyze-issues', {
      businessDescription,
      painPoints,
      businessType
    });
  }, [callAI]));
  // 解決策提案
  const suggestSolutions =
  /* istanbul ignore next */
  (cov_1su9e8qkwy().s[32]++, (0, _react.useCallback)(async (currentIssues, businessType, maxAmount, implementationPeriod) => {
    /* istanbul ignore next */
    cov_1su9e8qkwy().f[4]++;
    cov_1su9e8qkwy().s[33]++;
    return callAI('suggest-solutions', {
      currentIssues,
      businessType,
      maxAmount,
      implementationPeriod
    });
  }, [callAI]));
  // 5W1H詳細化
  const elaboratePlan =
  /* istanbul ignore next */
  (cov_1su9e8qkwy().s[34]++, (0, _react.useCallback)(async (planSummary, targetIssue) => {
    /* istanbul ignore next */
    cov_1su9e8qkwy().f[5]++;
    cov_1su9e8qkwy().s[35]++;
    return callAI('elaborate-plan', {
      planSummary,
      targetIssue
    });
  }, [callAI]));
  // KPI提案
  const suggestKPIs =
  /* istanbul ignore next */
  (cov_1su9e8qkwy().s[36]++, (0, _react.useCallback)(async (businessPlan, expectedEffects) => {
    /* istanbul ignore next */
    cov_1su9e8qkwy().f[6]++;
    cov_1su9e8qkwy().s[37]++;
    return callAI('suggest-kpis', {
      businessPlan,
      expectedEffects
    });
  }, [callAI]));
  // リスク分析
  const analyzeRisks =
  /* istanbul ignore next */
  (cov_1su9e8qkwy().s[38]++, (0, _react.useCallback)(async (businessPlan, implementationDetails) => {
    /* istanbul ignore next */
    cov_1su9e8qkwy().f[7]++;
    cov_1su9e8qkwy().s[39]++;
    return callAI('analyze-risks', {
      businessPlan,
      implementationDetails
    });
  }, [callAI]));
  // 市場分析
  const analyzeMarket =
  /* istanbul ignore next */
  (cov_1su9e8qkwy().s[40]++, (0, _react.useCallback)(async (businessDescription, targetCustomer, region) => {
    /* istanbul ignore next */
    cov_1su9e8qkwy().f[8]++;
    cov_1su9e8qkwy().s[41]++;
    return callAI('analyze-market', {
      businessDescription,
      targetCustomer,
      region
    });
  }, [callAI]));
  // ガントチャート生成
  const generateGantt =
  /* istanbul ignore next */
  (cov_1su9e8qkwy().s[42]++, (0, _react.useCallback)(async (businessPlan, implementationPeriod, mainActivities) => {
    /* istanbul ignore next */
    cov_1su9e8qkwy().f[9]++;
    cov_1su9e8qkwy().s[43]++;
    return callAI('generate-gantt', {
      businessPlan,
      implementationPeriod,
      mainActivities
    });
  }, [callAI]));
  // 申請書サマリー生成
  const generateSummary =
  /* istanbul ignore next */
  (cov_1su9e8qkwy().s[44]++, (0, _react.useCallback)(async (companyInfo, currentIssues, solutions, expectedEffects, requestedAmount) => {
    /* istanbul ignore next */
    cov_1su9e8qkwy().f[10]++;
    cov_1su9e8qkwy().s[45]++;
    return callAI('generate-summary', {
      companyInfo,
      currentIssues,
      solutions,
      expectedEffects,
      requestedAmount
    });
  }, [callAI]));
  /* istanbul ignore next */
  cov_1su9e8qkwy().s[46]++;
  return {
    isLoading,
    response,
    error,
    analyzeIssues,
    suggestSolutions,
    elaboratePlan,
    suggestKPIs,
    analyzeRisks,
    analyzeMarket,
    generateGantt,
    generateSummary
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,