{"version":3,"names":["ErrorDisplay","ERROR_CODES","cov_1p1cytx7vt","s","category","severity","message","suggestion","errors","b","onRetry","onClear","showToast","compact","f","expandedErrors","setExpandedErrors","_react","useState","Set","retryingErrors","setRetryingErrors","useEffect","length","latestError","errorInfo","code","toastType","_sonner","toast","description","action","retryable","label","onClick","handleRetry","undefined","error","prev","add","jobId","_client","apiClient","post","retryError","newSet","delete","toggleExpanded","errorCode","has","getCategoryIcon","_jsxruntime","jsx","_lucidereact","AlertCircle","className","Network","Database","Shield","FileWarning","Clock","DollarSign","Bug","getSeverityColor","getSeverityVariant","map","index","isExpanded","isRetrying","_alert","Alert","variant","jsxs","AlertDescription","_button","Button","size","disabled","RefreshCw","_card","Card","CardHeader","CardTitle","CardDescription","CardContent","_scrollarea","ScrollArea","_badge","Badge","Date","timestamp","toLocaleTimeString","details","ChevronDown","ChevronRight","navigator","clipboard","writeText","Copy","JSON","stringify"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/errors/error-display.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible';\nimport { toast } from 'sonner';\nimport {\n  AlertCircle,\n  AlertTriangle,\n  XCircle,\n  RefreshCw,\n  ChevronDown,\n  ChevronRight,\n  Copy,\n  Bug,\n  Shield,\n  Database,\n  Network,\n  FileWarning,\n  Clock,\n  DollarSign,\n  Info,\n} from 'lucide-react';\nimport { apiClient } from '@/lib/api/client';\n\n/**\n * エラー表示コンポーネント\n * APP-423: エラーコード表とトースト/再試行UI\n */\n\nexport interface AppError {\n  code: string;\n  message: string;\n  details?: any;\n  timestamp: string;\n  jobId?: string;\n  retryable?: boolean;\n  category?: ErrorCategory;\n  severity?: ErrorSeverity;\n  suggestion?: string;\n}\n\ntype ErrorCategory =\n  | 'validation'\n  | 'network'\n  | 'database'\n  | 'security'\n  | 'file'\n  | 'rate-limit'\n  | 'cost'\n  | 'system';\n\ntype ErrorSeverity = 'critical' | 'error' | 'warning' | 'info';\n\ninterface ErrorDisplayProps {\n  errors?: AppError[];\n  onRetry?: (error: AppError) => void;\n  onClear?: () => void;\n  showToast?: boolean;\n  compact?: boolean;\n}\n\n/**\n * エラーコードマッピング\n */\nconst ERROR_CODES: Record<string, {\n  category: ErrorCategory;\n  severity: ErrorSeverity;\n  message: string;\n  suggestion: string;\n}> = {\n  // Validation Errors\n  'ERR_VALIDATION_REQUIRED': {\n    category: 'validation',\n    severity: 'error',\n    message: '必須フィールドが入力されていません',\n    suggestion: '赤色でハイライトされた項目を入力してください',\n  },\n  'ERR_VALIDATION_FORMAT': {\n    category: 'validation',\n    severity: 'error',\n    message: 'フォーマットが正しくありません',\n    suggestion: '指定された形式で入力してください',\n  },\n  'ERR_VALIDATION_LENGTH': {\n    category: 'validation',\n    severity: 'error',\n    message: '文字数制限を超えています',\n    suggestion: '文字数を調整してください',\n  },\n\n  // Network Errors\n  'ERR_NETWORK_TIMEOUT': {\n    category: 'network',\n    severity: 'error',\n    message: 'リクエストがタイムアウトしました',\n    suggestion: 'ネットワーク接続を確認して再試行してください',\n  },\n  'ERR_NETWORK_OFFLINE': {\n    category: 'network',\n    severity: 'critical',\n    message: 'オフライン状態です',\n    suggestion: 'インターネット接続を確認してください',\n  },\n\n  // Database Errors\n  'ERR_DB_CONNECTION': {\n    category: 'database',\n    severity: 'critical',\n    message: 'データベース接続エラー',\n    suggestion: 'しばらく待ってから再試行してください',\n  },\n  'ERR_DB_CONSTRAINT': {\n    category: 'database',\n    severity: 'error',\n    message: 'データ整合性エラー',\n    suggestion: '入力内容を確認してください',\n  },\n\n  // Security Errors\n  'ERR_SECURITY_AUTH': {\n    category: 'security',\n    severity: 'critical',\n    message: '認証エラー',\n    suggestion: 'ログインし直してください',\n  },\n  'ERR_SECURITY_PERMISSION': {\n    category: 'security',\n    severity: 'error',\n    message: '権限がありません',\n    suggestion: '管理者に問い合わせてください',\n  },\n\n  // File Errors\n  'ERR_FILE_SIZE': {\n    category: 'file',\n    severity: 'error',\n    message: 'ファイルサイズが上限を超えています',\n    suggestion: 'ファイルサイズを10MB以下にしてください',\n  },\n  'ERR_FILE_TYPE': {\n    category: 'file',\n    severity: 'error',\n    message: 'サポートされていないファイル形式です',\n    suggestion: 'PDF、Excel、Word形式のファイルをアップロードしてください',\n  },\n  'ERR_FILE_VIRUS': {\n    category: 'file',\n    severity: 'critical',\n    message: 'ウイルスが検出されました',\n    suggestion: 'ファイルを確認してください',\n  },\n\n  // Rate Limit Errors\n  'ERR_RATE_LIMIT_EXCEEDED': {\n    category: 'rate-limit',\n    severity: 'warning',\n    message: 'レート制限に達しました',\n    suggestion: '少し時間をおいてから再試行してください',\n  },\n\n  // Cost Errors\n  'ERR_COST_LIMIT_EXCEEDED': {\n    category: 'cost',\n    severity: 'warning',\n    message: 'コスト上限に達しました',\n    suggestion: '利用プランをアップグレードしてください',\n  },\n  'ERR_COST_ESTIMATE_HIGH': {\n    category: 'cost',\n    severity: 'info',\n    message: '予想コストが高くなっています',\n    suggestion: '処理内容を見直すことをお勧めします',\n  },\n\n  // System Errors\n  'ERR_SYSTEM_MAINTENANCE': {\n    category: 'system',\n    severity: 'info',\n    message: 'メンテナンス中です',\n    suggestion: 'メンテナンス終了までお待ちください',\n  },\n  'ERR_SYSTEM_UNKNOWN': {\n    category: 'system',\n    severity: 'error',\n    message: '予期しないエラーが発生しました',\n    suggestion: 'サポートにお問い合わせください',\n  },\n};\n\nexport function ErrorDisplay({\n  errors = [],\n  onRetry,\n  onClear,\n  showToast = true,\n  compact = false,\n}: ErrorDisplayProps) {\n  const [expandedErrors, setExpandedErrors] = useState<Set<string>>(new Set());\n  const [retryingErrors, setRetryingErrors] = useState<Set<string>>(new Set());\n\n  /**\n   * エラーをトーストで表示\n   */\n  useEffect(() => {\n    if (showToast && errors.length > 0) {\n      const latestError = errors[errors.length - 1];\n      const errorInfo = ERROR_CODES[latestError.code] || {};\n\n      const toastType =\n        errorInfo.severity === 'critical' ? 'error' :\n        errorInfo.severity === 'warning' ? 'warning' :\n        errorInfo.severity === 'info' ? 'info' :\n        'error';\n\n      toast[toastType](latestError.message, {\n        description: errorInfo.suggestion,\n        action: latestError.retryable && onRetry ? {\n          label: '再試行',\n          onClick: () => handleRetry(latestError),\n        } : undefined,\n      });\n    }\n  }, [errors, showToast]);\n\n  /**\n   * エラー再試行\n   */\n  const handleRetry = async (error: AppError) => {\n    setRetryingErrors((prev) => new Set(prev).add(error.code));\n\n    try {\n      if (error.jobId) {\n        // ジョブ再試行\n        await apiClient.post(`/jobs/${error.jobId}/retry`);\n      }\n      onRetry?.(error);\n    } catch (retryError) {\n      toast.error('再試行に失敗しました');\n    } finally {\n      setRetryingErrors((prev) => {\n        const newSet = new Set(prev);\n        newSet.delete(error.code);\n        return newSet;\n      });\n    }\n  };\n\n  /**\n   * エラー展開トグル\n   */\n  const toggleExpanded = (errorCode: string) => {\n    setExpandedErrors((prev) => {\n      const newSet = new Set(prev);\n      if (newSet.has(errorCode)) {\n        newSet.delete(errorCode);\n      } else {\n        newSet.add(errorCode);\n      }\n      return newSet;\n    });\n  };\n\n  /**\n   * カテゴリアイコン取得\n   */\n  const getCategoryIcon = (category?: ErrorCategory) => {\n    switch (category) {\n      case 'validation':\n        return <AlertCircle className=\"h-4 w-4\" />;\n      case 'network':\n        return <Network className=\"h-4 w-4\" />;\n      case 'database':\n        return <Database className=\"h-4 w-4\" />;\n      case 'security':\n        return <Shield className=\"h-4 w-4\" />;\n      case 'file':\n        return <FileWarning className=\"h-4 w-4\" />;\n      case 'rate-limit':\n        return <Clock className=\"h-4 w-4\" />;\n      case 'cost':\n        return <DollarSign className=\"h-4 w-4\" />;\n      case 'system':\n        return <Bug className=\"h-4 w-4\" />;\n      default:\n        return <AlertCircle className=\"h-4 w-4\" />;\n    }\n  };\n\n  /**\n   * 重要度による色取得\n   */\n  const getSeverityColor = (severity?: ErrorSeverity) => {\n    switch (severity) {\n      case 'critical':\n        return 'text-red-600 dark:text-red-400';\n      case 'error':\n        return 'text-destructive';\n      case 'warning':\n        return 'text-yellow-600 dark:text-yellow-400';\n      case 'info':\n        return 'text-blue-600 dark:text-blue-400';\n      default:\n        return 'text-destructive';\n    }\n  };\n\n  /**\n   * 重要度によるバリアント取得\n   */\n  const getSeverityVariant = (severity?: ErrorSeverity): \"default\" | \"destructive\" | \"outline\" | \"secondary\" => {\n    switch (severity) {\n      case 'critical':\n      case 'error':\n        return 'destructive';\n      case 'warning':\n        return 'secondary';\n      case 'info':\n        return 'outline';\n      default:\n        return 'destructive';\n    }\n  };\n\n  if (errors.length === 0) {\n    return null;\n  }\n\n  /**\n   * コンパクト表示\n   */\n  if (compact) {\n    return (\n      <div className=\"space-y-2\">\n        {errors.map((error, index) => {\n          const errorInfo = ERROR_CODES[error.code] || {};\n          const isExpanded = expandedErrors.has(error.code);\n          const isRetrying = retryingErrors.has(error.code);\n\n          return (\n            <Alert\n              key={`${error.code}-${index}`}\n              variant={getSeverityVariant(errorInfo.severity)}\n            >\n              <div className=\"flex items-start gap-2\">\n                {getCategoryIcon(errorInfo.category)}\n                <div className=\"flex-1\">\n                  <AlertDescription className=\"font-medium\">\n                    {error.message}\n                  </AlertDescription>\n                  {errorInfo.suggestion && (\n                    <p className=\"text-sm text-muted-foreground mt-1\">\n                      {errorInfo.suggestion}\n                    </p>\n                  )}\n                </div>\n                {error.retryable && onRetry && (\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => handleRetry(error)}\n                    disabled={isRetrying}\n                  >\n                    <RefreshCw className={`h-3 w-3 ${isRetrying ? 'animate-spin' : ''}`} />\n                  </Button>\n                )}\n              </div>\n            </Alert>\n          );\n        })}\n      </div>\n    );\n  }\n\n  /**\n   * 詳細表示\n   */\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <CardTitle className=\"flex items-center gap-2\">\n              <AlertCircle className=\"h-5 w-5\" />\n              エラー情報\n            </CardTitle>\n            <CardDescription>\n              {errors.length}件のエラーが発生しています\n            </CardDescription>\n          </div>\n          {onClear && (\n            <Button variant=\"outline\" size=\"sm\" onClick={onClear}>\n              クリア\n            </Button>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent>\n        <ScrollArea className=\"h-96\">\n          <div className=\"space-y-3\">\n            {errors.map((error, index) => {\n              const errorInfo = ERROR_CODES[error.code] || {};\n              const isExpanded = expandedErrors.has(error.code);\n              const isRetrying = retryingErrors.has(error.code);\n\n              return (\n                <div\n                  key={`${error.code}-${index}`}\n                  className=\"border rounded-lg p-3 space-y-2\"\n                >\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex items-start gap-2\">\n                      <div className={getSeverityColor(errorInfo.severity)}>\n                        {getCategoryIcon(errorInfo.category)}\n                      </div>\n                      <div className=\"space-y-1\">\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"font-medium\">{error.message}</span>\n                          <Badge variant=\"outline\" className=\"text-xs\">\n                            {error.code}\n                          </Badge>\n                        </div>\n                        {errorInfo.suggestion && (\n                          <p className=\"text-sm text-muted-foreground\">\n                            💡 {errorInfo.suggestion}\n                          </p>\n                        )}\n                        <div className=\"flex items-center gap-3 text-xs text-muted-foreground\">\n                          <span>{new Date(error.timestamp).toLocaleTimeString('ja-JP')}</span>\n                          {error.jobId && (\n                            <span>Job: {error.jobId}</span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      {error.retryable && onRetry && (\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => handleRetry(error)}\n                          disabled={isRetrying}\n                        >\n                          <RefreshCw className={`h-4 w-4 ${isRetrying ? 'animate-spin' : ''}`} />\n                        </Button>\n                      )}\n                      {error.details && (\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => toggleExpanded(error.code)}\n                        >\n                          {isExpanded ? (\n                            <ChevronDown className=\"h-4 w-4\" />\n                          ) : (\n                            <ChevronRight className=\"h-4 w-4\" />\n                          )}\n                        </Button>\n                      )}\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => navigator.clipboard.writeText(\n                          `Error: ${error.code}\\nMessage: ${error.message}\\nTime: ${error.timestamp}`\n                        )}\n                      >\n                        <Copy className=\"h-3 w-3\" />\n                      </Button>\n                    </div>\n                  </div>\n\n                  {/* 詳細情報 */}\n                  {error.details && isExpanded && (\n                    <div className=\"mt-2 p-2 bg-muted rounded text-xs font-mono\">\n                      <pre>{JSON.stringify(error.details, null, 2)}</pre>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </ScrollArea>\n      </CardContent>\n    </Card>\n  );\n}"],"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","ignoreList":[]}