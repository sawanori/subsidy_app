{"version":3,"names":["config","cov_k2x06livb","f","s","middleware","RATE_LIMIT_WINDOW","DEFAULT_RATE_LIMIT","GENERATE_RATE_LIMIT","rateLimitStore","Map","intlMiddleware","_middleware","default","locales","defaultLocale","localePrefix","getRateLimitData","ip","isGenerateEndpoint","limit","b","now","Date","existing","get","resetTime","set","count","request","response","_server","NextResponse","next","headers","supabase","_ssr","createServerClient","process","env","NEXT_PUBLIC_SUPABASE_URL","NEXT_PUBLIC_SUPABASE_ANON_KEY","cookies","getAll","setAll","cookiesToSet","forEach","name","value","options","data","user","auth","getUser","protectedPaths","authPaths","pathname","nextUrl","isProtectedPath","some","path","includes","isAuthPath","locale","split","redirectUrl","URL","url","searchParams","redirect","startsWith","intlResponse","JSON","stringify","error","message","status","toString","toISOString","matcher"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\nimport createMiddleware from 'next-intl/middleware';\nimport { createServerClient } from '@supabase/ssr';\n\n// Rate limiting configuration per governance.yaml\n// 100 req/5min/IP (generate endpoint: 10/5min)\nconst RATE_LIMIT_WINDOW = 5 * 60 * 1000; // 5 minutes in ms\nconst DEFAULT_RATE_LIMIT = 100;\nconst GENERATE_RATE_LIMIT = 10;\n\n// In-memory store for demo (production should use Redis)\nconst rateLimitStore = new Map<string, { count: number; resetTime: number }>();\n\n// Create internationalization middleware\nconst intlMiddleware = createMiddleware({\n  locales: ['ja', 'en', 'zz-ZZ'],\n  defaultLocale: 'ja',\n  localePrefix: 'always'\n});\n\nfunction getRateLimitData(ip: string, isGenerateEndpoint: boolean) {\n  const limit = isGenerateEndpoint ? GENERATE_RATE_LIMIT : DEFAULT_RATE_LIMIT;\n  const now = Date.now();\n  const existing = rateLimitStore.get(ip);\n  \n  if (!existing || now > existing.resetTime) {\n    const resetTime = now + RATE_LIMIT_WINDOW;\n    rateLimitStore.set(ip, { count: 1, resetTime });\n    return { count: 1, limit, resetTime };\n  }\n  \n  existing.count += 1;\n  return { count: existing.count, limit, resetTime: existing.resetTime };\n}\n\nexport async function middleware(request: NextRequest) {\n  let response = NextResponse.next({\n    request: {\n      headers: request.headers,\n    },\n  });\n\n  // Create Supabase client for auth check\n  const supabase = createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return request.cookies.getAll()\n        },\n        setAll(cookiesToSet) {\n          cookiesToSet.forEach(({ name, value }) => request.cookies.set(name, value))\n          response = NextResponse.next({\n            request,\n          })\n          cookiesToSet.forEach(({ name, value, options }) =>\n            response.cookies.set(name, value, options)\n          )\n        },\n      },\n    }\n  );\n\n  // Check authentication\n  const { data: { user } } = await supabase.auth.getUser();\n\n  // Protected routes that require authentication\n  const protectedPaths = ['/applications', '/profile', '/settings'];\n  const authPaths = ['/login', '/signup'];\n  const pathname = request.nextUrl.pathname;\n\n  // Check if the path is protected (considering locale prefix)\n  const isProtectedPath = protectedPaths.some(path =>\n    pathname.includes(path)\n  );\n\n  // Check if the path is an auth path\n  const isAuthPath = authPaths.some(path =>\n    pathname.includes(path)\n  );\n\n  // Redirect to login if accessing protected route without authentication\n  if (isProtectedPath && !user) {\n    // Extract locale from pathname\n    const locale = pathname.split('/')[1] || 'ja';\n    const redirectUrl = new URL(`/${locale}/login`, request.url);\n    redirectUrl.searchParams.set('redirectedFrom', pathname);\n    return NextResponse.redirect(redirectUrl);\n  }\n\n  // Redirect to applications if accessing auth pages while authenticated\n  if (isAuthPath && user) {\n    const locale = pathname.split('/')[1] || 'ja';\n    return NextResponse.redirect(new URL(`/${locale}/applications`, request.url));\n  }\n\n  // Apply internationalization for non-API routes\n  if (!request.nextUrl.pathname.startsWith('/api') &&\n      !request.nextUrl.pathname.startsWith('/_next')) {\n    const intlResponse = intlMiddleware(request);\n    if (intlResponse) return intlResponse;\n  }\n  \n  // Apply rate limiting for API routes\n  if (request.nextUrl.pathname.startsWith('/api') || \n      request.nextUrl.pathname.includes('/generate')) {\n    \n    // Get client IP - Next.js 15 compatible\n    const ip = request.headers.get('x-real-ip') ?? \n      request.headers.get('x-forwarded-for')?.split(',')[0] ?? \n      '127.0.0.1';\n    \n    const isGenerateEndpoint = request.nextUrl.pathname.includes('/generate');\n    const { count, limit, resetTime } = getRateLimitData(ip, isGenerateEndpoint);\n    \n    if (count > limit) {\n      return new NextResponse(\n        JSON.stringify({\n          error: 'Rate limit exceeded',\n          message: `Too many requests. Limit: ${limit}/5min`,\n        }),\n        {\n          status: 429,\n          headers: {\n            'Content-Type': 'application/json',\n            'X-RateLimit-Limit': limit.toString(),\n            'X-RateLimit-Remaining': '0',\n            'X-RateLimit-Reset': new Date(resetTime).toISOString(),\n          },\n        }\n      );\n    }\n    \n    const response = NextResponse.next();\n    response.headers.set('X-RateLimit-Limit', limit.toString());\n    response.headers.set('X-RateLimit-Remaining', (limit - count).toString());\n    response.headers.set('X-RateLimit-Reset', new Date(resetTime).toISOString());\n    \n    return response;\n  }\n  \n  return response;\n}\n\nexport const config = {\n  matcher: [\n    // Match all pathnames except for static assets and API routes for i18n\n    '/((?!api|_next|_vercel|.*\\\\..*).*)',\n    // Include API routes for rate limiting\n    '/api/:path*',\n    '/generate/:path*',\n  ],\n};"],"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","ignoreList":[]}