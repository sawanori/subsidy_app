943bf3237f873b5786ff1d690277938f
"use strict";

/* istanbul ignore next */
function cov_2afg4gtf0o() {
  var path = "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/a11y/ScreenReaderOnly.tsx";
  var hash = "192d7faa62f85fc594b1d517ab6938f9c5bb09e3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/a11y/ScreenReaderOnly.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 20,
          column: 71
        }
      },
      "8": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 57
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 6
        }
      },
      "10": {
        start: {
          line: 27,
          column: 25
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 32,
          column: 7
        }
      },
      "12": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 34,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 28
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 33
          }
        },
        loc: {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 27,
            column: 26
          }
        },
        loc: {
          start: {
            line: 27,
            column: 75
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 27
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 35
          },
          end: {
            line: 23,
            column: 38
          }
        }, {
          start: {
            line: 23,
            column: 41
          },
          end: {
            line: 25,
            column: 5
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 23,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 23,
            column: 14
          }
        }, {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 23,
            column: 32
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 42
          },
          end: {
            line: 27,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 27,
            column: 54
          },
          end: {
            line: 27,
            column: 60
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/a11y/ScreenReaderOnly.tsx"],
      sourcesContent: ["import React from 'react';\nimport { a11y } from '@/lib/accessibility';\n\ninterface ScreenReaderOnlyProps {\n  children: React.ReactNode;\n  as?: React.ElementType;\n  [key: string]: unknown;\n}\n\nexport const ScreenReaderOnly: React.FC<ScreenReaderOnlyProps> = ({ \n  children, \n  as: Component = 'span',\n  ...props \n}) => {\n  return (\n    <Component \n      style={a11y.srOnly}\n      {...props}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport default ScreenReaderOnly;"],
      names: ["ScreenReaderOnly", "children", "as", "Component", "props", "style", "a11y", "srOnly"],
      mappings: ";;;;;;;;;;;QASaA;eAAAA;;QAeb;eAAA;;;;8DAxBkB;+BACG;;;;;;AAQd,MAAMA,mBAAoD,CAAC,EAChEC,QAAQ,EACRC,IAAIC,YAAY,MAAM,EACtB,GAAGC,OACJ;IACC,qBACE,qBAACD;QACCE,OAAOC,mBAAI,CAACC,MAAM;QACjB,GAAGH,KAAK;kBAERH;;AAGP;MAEA,WAAeD"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "192d7faa62f85fc594b1d517ab6938f9c5bb09e3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2afg4gtf0o = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2afg4gtf0o();
cov_2afg4gtf0o().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2afg4gtf0o().f[0]++;
  cov_2afg4gtf0o().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2afg4gtf0o().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2afg4gtf0o().s[3]++;
_export(exports, {
  get ScreenReaderOnly() {
    /* istanbul ignore next */
    cov_2afg4gtf0o().f[1]++;
    cov_2afg4gtf0o().s[4]++;
    return ScreenReaderOnly;
  },
  get default() {
    /* istanbul ignore next */
    cov_2afg4gtf0o().f[2]++;
    cov_2afg4gtf0o().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2afg4gtf0o().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2afg4gtf0o().s[7]++, _interop_require_default(require("react")));
const _accessibility =
/* istanbul ignore next */
(cov_2afg4gtf0o().s[8]++, require("../../lib/accessibility"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2afg4gtf0o().f[3]++;
  cov_2afg4gtf0o().s[9]++;
  return /* istanbul ignore next */(cov_2afg4gtf0o().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2afg4gtf0o().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2afg4gtf0o().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2afg4gtf0o().b[0][1]++, {
    default: obj
  });
}
/* istanbul ignore next */
cov_2afg4gtf0o().s[10]++;
const ScreenReaderOnly = ({
  children,
  as: Component =
  /* istanbul ignore next */
  (cov_2afg4gtf0o().b[2][0]++, 'span'),
  ...props
}) => {
  /* istanbul ignore next */
  cov_2afg4gtf0o().f[4]++;
  cov_2afg4gtf0o().s[11]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(Component, {
    style: _accessibility.a11y.srOnly,
    ...props,
    children: children
  });
};
const _default =
/* istanbul ignore next */
(cov_2afg4gtf0o().s[12]++, ScreenReaderOnly);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW5SZWFkZXJPbmx5IiwiY292XzJhZmc0Z3RmMG8iLCJmIiwicyIsImRlZmF1bHQiLCJfZGVmYXVsdCIsImNoaWxkcmVuIiwiYXMiLCJDb21wb25lbnQiLCJiIiwicHJvcHMiLCJfanN4cnVudGltZSIsImpzeCIsInN0eWxlIiwiX2FjY2Vzc2liaWxpdHkiLCJhMTF5Iiwic3JPbmx5Il0sInNvdXJjZXMiOlsiL1VzZXJzL25vcml0YWthc2F3YWRhL0FJX1Avc3Vic2lkeUFwcC9mcm9udGVuZC9zcmMvY29tcG9uZW50cy9hMTF5L1NjcmVlblJlYWRlck9ubHkudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBhMTF5IH0gZnJvbSAnQC9saWIvYWNjZXNzaWJpbGl0eSc7XG5cbmludGVyZmFjZSBTY3JlZW5SZWFkZXJPbmx5UHJvcHMge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xuICBhcz86IFJlYWN0LkVsZW1lbnRUeXBlO1xuICBba2V5OiBzdHJpbmddOiB1bmtub3duO1xufVxuXG5leHBvcnQgY29uc3QgU2NyZWVuUmVhZGVyT25seTogUmVhY3QuRkM8U2NyZWVuUmVhZGVyT25seVByb3BzPiA9ICh7IFxuICBjaGlsZHJlbiwgXG4gIGFzOiBDb21wb25lbnQgPSAnc3BhbicsXG4gIC4uLnByb3BzIFxufSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxDb21wb25lbnQgXG4gICAgICBzdHlsZT17YTExeS5zck9ubHl9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQ29tcG9uZW50PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU2NyZWVuUmVhZGVyT25seTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFTYUEsaUJBQUE7SUFBQTtJQUFBQyxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO1dBQUFILGdCQUFBOztNQWViSSxRQUFBO0lBQUE7SUFBQUgsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtXQUFBRSxRQUFBOzs7Ozs7Ozt3RUF4QmtCOzs7a0NBQ0c7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUWQsTUFBTUwsZ0JBQUEsR0FBb0RBLENBQUM7RUFDaEVNLFFBQVE7RUFDUkMsRUFBQSxFQUFJQyxTQUFBO0VBQUE7RUFBQSxDQUFBUCxjQUFBLEdBQUFRLENBQUEsVUFBWSxNQUFNO0VBQ3RCLEdBQUdDO0FBQUEsQ0FDSjtFQUFBO0VBQUFULGNBQUEsR0FBQUMsQ0FBQTtFQUFBRCxjQUFBLEdBQUFFLENBQUE7RUFDQyxvQkFDRSxJQUFBUSxXQUFBLENBQUFDLEdBQUEsRUFBQ0osU0FBQTtJQUNDSyxLQUFBLEVBQU9DLGNBQUEsQ0FBQUMsSUFBSSxDQUFDQyxNQUFNO0lBQ2pCLEdBQUdOLEtBQUs7Y0FFUko7O0FBR1A7TUFFQUQsUUFBQTtBQUFBO0FBQUEsQ0FBQUosY0FBQSxHQUFBRSxDQUFBLFFBQWVILGdCQUFBIiwiaWdub3JlTGlzdCI6W119