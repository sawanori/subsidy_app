{"version":3,"names":["KPIForm","UNIT_DICTIONARY","cov_1066bq4wef","s","数量","時間","金額","割合","人数","面積","重量","データ","速度","その他","PERIOD_OPTIONS","value","label","FREQUENCY_OPTIONS","applicationId","data","onChange","onValidate","f","formData","setFormData","_react","useState","b","kpis","evaluationCriteria","monitoringFrequency","isGenerating","setIsGenerating","generationProgress","setGenerationProgress","validationResult","setValidationResult","errors","setErrors","activeTab","setActiveTab","selectedUnitCategory","setSelectedUnitCategory","handleFieldChange","field","newData","prev","newErrors","handleKPIChange","index","newKPIs","addKPI","newKPI","id","Date","now","name","unit","baseline","target","period","importance","removeKPI","filter","_","i","handleAutoGenerate","response","_client","apiClient","post","application_id","generatedKPIs","parseGeneratedKPIs","content","setTimeout","error","generation","message","handleValidate","result","validation","lines","split","currentKPI","line","startsWith","push","length","description","measurementMethod","substring","trim","includes","parseFloat","periodText","mapPeriodText","mapImportance","slice","text","calculateImprovement","improvement","toFixed","validateForm","forEach","kpi","Object","keys","_jsxruntime","jsxs","_card","Card","CardHeader","CardTitle","className","jsx","_lucidereact","Target","CardDescription","CardContent","_tabs","Tabs","onValueChange","TabsList","TabsTrigger","TabsContent","map","_badge","Badge","variant","_button","Button","type","size","onClick","Trash2","_label","Label","htmlFor","_input","Input","e","placeholder","_select","Select","SelectTrigger","SelectValue","SelectContent","category","SelectItem","option","rows","TrendingUp","Plus","_alert","Alert","AlertCircle","AlertDescription","disabled","Calculator","is_valid","CheckCircle","messages","msg","Sparkles","Loader2","_progress","Progress","Info"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/forms/kpi-form.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Target,\n  Sparkles,\n  AlertCircle,\n  CheckCircle,\n  Info,\n  Loader2,\n  Plus,\n  Trash2,\n  TrendingUp,\n  Calculator,\n} from 'lucide-react';\nimport { apiClient } from '@/lib/api/client';\nimport { GenerateResponse, ValidationResult } from '@/lib/api/types';\n\ninterface KPIItem {\n  id: string;\n  name: string;\n  description?: string;\n  unit: string;\n  baseline: number;\n  target: number;\n  period: string;\n  measurementMethod?: string;\n  importance: 'high' | 'medium' | 'low';\n}\n\ninterface KPIData {\n  kpis: KPIItem[];\n  evaluationCriteria?: string;\n  monitoringFrequency?: string;\n}\n\ninterface KPIFormProps {\n  applicationId: string;\n  data?: KPIData;\n  onChange: (data: KPIData) => void;\n  onValidate?: () => Promise<boolean>;\n}\n\n// 単位辞書\nconst UNIT_DICTIONARY: Record<string, string[]> = {\n  数量: ['件', '個', '台', '本', '枚', '回'],\n  時間: ['秒', '分', '時間', '日', '週', '月', '年'],\n  金額: ['円', '千円', '万円', '百万円', '億円'],\n  割合: ['%', 'ポイント', '倍'],\n  人数: ['人', '名', '社'],\n  面積: ['㎡', '坪', 'ha'],\n  重量: ['g', 'kg', 't'],\n  データ: ['KB', 'MB', 'GB', 'TB'],\n  速度: ['件/時間', '個/日', '台/月'],\n  その他: ['段階', 'レベル', 'スコア'],\n};\n\nconst PERIOD_OPTIONS = [\n  { value: '1month', label: '1ヶ月' },\n  { value: '3months', label: '3ヶ月' },\n  { value: '6months', label: '6ヶ月' },\n  { value: '1year', label: '1年' },\n  { value: '2years', label: '2年' },\n  { value: '3years', label: '3年' },\n];\n\nconst FREQUENCY_OPTIONS = [\n  { value: 'daily', label: '日次' },\n  { value: 'weekly', label: '週次' },\n  { value: 'monthly', label: '月次' },\n  { value: 'quarterly', label: '四半期' },\n  { value: 'yearly', label: '年次' },\n];\n\nexport function KPIForm({ applicationId, data, onChange, onValidate }: KPIFormProps) {\n  const [formData, setFormData] = useState<KPIData>(\n    data || {\n      kpis: [],\n      evaluationCriteria: '',\n      monitoringFrequency: 'monthly',\n    }\n  );\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generationProgress, setGenerationProgress] = useState(0);\n  const [validationResult, setValidationResult] = useState<ValidationResult | null>(null);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [activeTab, setActiveTab] = useState('manual');\n  const [selectedUnitCategory, setSelectedUnitCategory] = useState<string>('数量');\n\n  const handleFieldChange = (field: string, value: any) => {\n    const newData = { ...formData, [field]: value };\n    setFormData(newData);\n    onChange(newData);\n\n    // エラークリア\n    if (errors[field]) {\n      setErrors((prev) => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  const handleKPIChange = (index: number, field: keyof KPIItem, value: any) => {\n    const newKPIs = [...formData.kpis];\n    newKPIs[index] = { ...newKPIs[index], [field]: value };\n    handleFieldChange('kpis', newKPIs);\n  };\n\n  const addKPI = () => {\n    const newKPI: KPIItem = {\n      id: `kpi-${Date.now()}`,\n      name: '',\n      unit: '件',\n      baseline: 0,\n      target: 0,\n      period: '1year',\n      importance: 'medium',\n    };\n    handleFieldChange('kpis', [...formData.kpis, newKPI]);\n  };\n\n  const removeKPI = (index: number) => {\n    const newKPIs = formData.kpis.filter((_, i) => i !== index);\n    handleFieldChange('kpis', newKPIs);\n  };\n\n  const handleAutoGenerate = async () => {\n    setIsGenerating(true);\n    setGenerationProgress(10);\n\n    try {\n      // KPI生成APIを呼び出し\n      setGenerationProgress(30);\n      const response = await apiClient.post<GenerateResponse>('/generate/kpis', {\n        application_id: applicationId,\n      });\n\n      setGenerationProgress(70);\n\n      // レスポンスをパース\n      const generatedKPIs = parseGeneratedKPIs(response.content);\n\n      setGenerationProgress(90);\n\n      // フォームデータを更新\n      const newData: KPIData = {\n        ...formData,\n        kpis: generatedKPIs,\n      };\n\n      setFormData(newData);\n      onChange(newData);\n      setGenerationProgress(100);\n\n      setTimeout(() => {\n        setGenerationProgress(0);\n        setActiveTab('manual');\n      }, 1000);\n    } catch (error: any) {\n      setErrors({ generation: error.message || 'KPI生成に失敗しました' });\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const handleValidate = async () => {\n    try {\n      const result = await apiClient.post<ValidationResult>('/validate/kpis', {\n        kpis: formData.kpis,\n      });\n      setValidationResult(result);\n    } catch (error: any) {\n      setErrors({ validation: error.message || '検証に失敗しました' });\n    }\n  };\n\n  const parseGeneratedKPIs = (content: string): KPIItem[] => {\n    // 生成されたテキストからKPIを抽出\n    const kpis: KPIItem[] = [];\n    const lines = content.split('\\n');\n    \n    let currentKPI: Partial<KPIItem> | null = null;\n    \n    for (const line of lines) {\n      if (line.startsWith('KPI:')) {\n        if (currentKPI && currentKPI.name) {\n          kpis.push({\n            id: `kpi-${Date.now()}-${kpis.length}`,\n            name: currentKPI.name,\n            description: currentKPI.description || '',\n            unit: currentKPI.unit || '件',\n            baseline: currentKPI.baseline || 0,\n            target: currentKPI.target || 0,\n            period: currentKPI.period || '1year',\n            measurementMethod: currentKPI.measurementMethod,\n            importance: currentKPI.importance || 'medium',\n          });\n        }\n        currentKPI = { name: line.substring(4).trim() };\n      } else if (currentKPI) {\n        if (line.includes('説明:')) {\n          currentKPI.description = line.split('説明:')[1].trim();\n        } else if (line.includes('単位:')) {\n          currentKPI.unit = line.split('単位:')[1].trim();\n        } else if (line.includes('現状:')) {\n          currentKPI.baseline = parseFloat(line.split('現状:')[1]) || 0;\n        } else if (line.includes('目標:')) {\n          currentKPI.target = parseFloat(line.split('目標:')[1]) || 0;\n        } else if (line.includes('期間:')) {\n          const periodText = line.split('期間:')[1].trim();\n          currentKPI.period = mapPeriodText(periodText);\n        } else if (line.includes('測定方法:')) {\n          currentKPI.measurementMethod = line.split('測定方法:')[1].trim();\n        } else if (line.includes('重要度:')) {\n          const importance = line.split('重要度:')[1].trim();\n          currentKPI.importance = mapImportance(importance);\n        }\n      }\n    }\n    \n    // 最後のKPIを追加\n    if (currentKPI && currentKPI.name) {\n      kpis.push({\n        id: `kpi-${Date.now()}-${kpis.length}`,\n        name: currentKPI.name,\n        description: currentKPI.description || '',\n        unit: currentKPI.unit || '件',\n        baseline: currentKPI.baseline || 0,\n        target: currentKPI.target || 0,\n        period: currentKPI.period || '1year',\n        measurementMethod: currentKPI.measurementMethod,\n        importance: currentKPI.importance || 'medium',\n      });\n    }\n    \n    return kpis.slice(0, 5); // 最大5件\n  };\n\n  const mapPeriodText = (text: string): string => {\n    if (text.includes('1ヶ月')) return '1month';\n    if (text.includes('3ヶ月')) return '3months';\n    if (text.includes('6ヶ月') || text.includes('半年')) return '6months';\n    if (text.includes('2年')) return '2years';\n    if (text.includes('3年')) return '3years';\n    return '1year';\n  };\n\n  const mapImportance = (text: string): 'high' | 'medium' | 'low' => {\n    if (text.includes('高') || text.includes('重要')) return 'high';\n    if (text.includes('低')) return 'low';\n    return 'medium';\n  };\n\n  const calculateImprovement = (baseline: number, target: number): string => {\n    if (baseline === 0) return target > 0 ? '新規' : '0%';\n    const improvement = ((target - baseline) / baseline) * 100;\n    return `${improvement > 0 ? '+' : ''}${improvement.toFixed(1)}%`;\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.kpis || formData.kpis.length === 0) {\n      newErrors.kpis = 'KPIを少なくとも1つ設定してください';\n    } else if (formData.kpis.length < 3) {\n      newErrors.kpis = 'KPIは3つ以上設定することを推奨します';\n    } else if (formData.kpis.length > 5) {\n      newErrors.kpis = 'KPIは5つ以内に絞ることを推奨します';\n    }\n\n    formData.kpis.forEach((kpi, index) => {\n      if (!kpi.name) {\n        newErrors[`kpi-${index}-name`] = 'KPI名は必須です';\n      }\n      if (kpi.target <= kpi.baseline) {\n        newErrors[`kpi-${index}-target`] = '目標値は現状値より大きい値を設定してください';\n      }\n    });\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Target className=\"h-5 w-5\" />\n          KPI（重要業績評価指標）\n        </CardTitle>\n        <CardDescription>\n          事業の成果を測定するための定量的な指標を3〜5個設定してください。\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Tabs value={activeTab} onValueChange={setActiveTab}>\n          <TabsList className=\"grid w-full grid-cols-2\">\n            <TabsTrigger value=\"manual\">手動入力</TabsTrigger>\n            <TabsTrigger value=\"generate\">AI生成</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"manual\" className=\"space-y-6 mt-6\">\n            {/* KPIリスト */}\n            <div className=\"space-y-4\">\n              {formData.kpis.map((kpi, index) => (\n                <div key={kpi.id} className=\"border rounded-lg p-4 space-y-4\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <Badge variant=\"outline\">KPI {index + 1}</Badge>\n                      <Badge\n                        variant={\n                          kpi.importance === 'high'\n                            ? 'destructive'\n                            : kpi.importance === 'low'\n                            ? 'secondary'\n                            : 'default'\n                        }\n                      >\n                        {kpi.importance === 'high' ? '高' : kpi.importance === 'low' ? '低' : '中'}\n                      </Badge>\n                    </div>\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => removeKPI(index)}\n                    >\n                      <Trash2 className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"col-span-2\">\n                      <Label htmlFor={`kpi-name-${index}`}>\n                        指標名 <span className=\"text-destructive\">*</span>\n                      </Label>\n                      <Input\n                        id={`kpi-name-${index}`}\n                        value={kpi.name}\n                        onChange={(e) => handleKPIChange(index, 'name', e.target.value)}\n                        placeholder=\"例: 月間売上高\"\n                        className={errors[`kpi-${index}-name`] ? 'border-destructive' : ''}\n                      />\n                      {errors[`kpi-${index}-name`] && (\n                        <p className=\"text-sm text-destructive mt-1\">\n                          {errors[`kpi-${index}-name`]}\n                        </p>\n                      )}\n                    </div>\n\n                    <div>\n                      <Label>単位カテゴリー</Label>\n                      <Select\n                        value={selectedUnitCategory}\n                        onValueChange={setSelectedUnitCategory}\n                      >\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {Object.keys(UNIT_DICTIONARY).map((category) => (\n                            <SelectItem key={category} value={category}>\n                              {category}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div>\n                      <Label htmlFor={`kpi-unit-${index}`}>単位</Label>\n                      <Select\n                        value={kpi.unit}\n                        onValueChange={(value) => handleKPIChange(index, 'unit', value)}\n                      >\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {UNIT_DICTIONARY[selectedUnitCategory].map((unit) => (\n                            <SelectItem key={unit} value={unit}>\n                              {unit}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div>\n                      <Label htmlFor={`kpi-baseline-${index}`}>現状値</Label>\n                      <Input\n                        id={`kpi-baseline-${index}`}\n                        type=\"number\"\n                        value={kpi.baseline}\n                        onChange={(e) =>\n                          handleKPIChange(index, 'baseline', parseFloat(e.target.value) || 0)\n                        }\n                        placeholder=\"0\"\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor={`kpi-target-${index}`}>\n                        目標値 <span className=\"text-destructive\">*</span>\n                      </Label>\n                      <Input\n                        id={`kpi-target-${index}`}\n                        type=\"number\"\n                        value={kpi.target}\n                        onChange={(e) =>\n                          handleKPIChange(index, 'target', parseFloat(e.target.value) || 0)\n                        }\n                        placeholder=\"100\"\n                        className={errors[`kpi-${index}-target`] ? 'border-destructive' : ''}\n                      />\n                      {errors[`kpi-${index}-target`] && (\n                        <p className=\"text-sm text-destructive mt-1\">\n                          {errors[`kpi-${index}-target`]}\n                        </p>\n                      )}\n                    </div>\n\n                    <div>\n                      <Label htmlFor={`kpi-period-${index}`}>達成期間</Label>\n                      <Select\n                        value={kpi.period}\n                        onValueChange={(value) => handleKPIChange(index, 'period', value)}\n                      >\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {PERIOD_OPTIONS.map((option) => (\n                            <SelectItem key={option.value} value={option.value}>\n                              {option.label}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div>\n                      <Label htmlFor={`kpi-importance-${index}`}>重要度</Label>\n                      <Select\n                        value={kpi.importance}\n                        onValueChange={(value) =>\n                          handleKPIChange(index, 'importance', value as 'high' | 'medium' | 'low')\n                        }\n                      >\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"high\">高</SelectItem>\n                          <SelectItem value=\"medium\">中</SelectItem>\n                          <SelectItem value=\"low\">低</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div className=\"col-span-2\">\n                      <Label htmlFor={`kpi-description-${index}`}>説明</Label>\n                      <textarea\n                        id={`kpi-description-${index}`}\n                        value={kpi.description || ''}\n                        onChange={(e) => handleKPIChange(index, 'description', e.target.value)}\n                        placeholder=\"この指標の意味や測定方法を説明\"\n                        className=\"flex min-h-[60px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\n                        rows={2}\n                      />\n                    </div>\n\n                    <div className=\"col-span-2\">\n                      <Label htmlFor={`kpi-method-${index}`}>測定方法</Label>\n                      <Input\n                        id={`kpi-method-${index}`}\n                        value={kpi.measurementMethod || ''}\n                        onChange={(e) => handleKPIChange(index, 'measurementMethod', e.target.value)}\n                        placeholder=\"例: Google Analyticsで月次集計\"\n                      />\n                    </div>\n                  </div>\n\n                  {/* 改善率の表示 */}\n                  {kpi.baseline > 0 && kpi.target > 0 && (\n                    <div className=\"flex items-center gap-2 p-3 bg-muted rounded-lg\">\n                      <TrendingUp className=\"h-4 w-4 text-status-success\" />\n                      <span className=\"text-sm\">\n                        改善率: <strong>{calculateImprovement(kpi.baseline, kpi.target)}</strong>\n                      </span>\n                    </div>\n                  )}\n                </div>\n              ))}\n\n              {formData.kpis.length < 5 && (\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={addKPI}\n                  className=\"w-full gap-2\"\n                >\n                  <Plus className=\"h-4 w-4\" />\n                  KPIを追加\n                </Button>\n              )}\n\n              {errors.kpis && (\n                <Alert variant={formData.kpis.length < 3 ? 'default' : 'destructive'}>\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>{errors.kpis}</AlertDescription>\n                </Alert>\n              )}\n            </div>\n\n            {/* 評価基準 */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"evaluationCriteria\">評価基準</Label>\n              <textarea\n                id=\"evaluationCriteria\"\n                value={formData.evaluationCriteria || ''}\n                onChange={(e) => handleFieldChange('evaluationCriteria', e.target.value)}\n                placeholder=\"KPIの達成度をどのように評価するか、基準を記載\"\n                className=\"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\n                rows={3}\n              />\n            </div>\n\n            {/* モニタリング頻度 */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"monitoringFrequency\">モニタリング頻度</Label>\n              <Select\n                value={formData.monitoringFrequency}\n                onValueChange={(value) => handleFieldChange('monitoringFrequency', value)}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {FREQUENCY_OPTIONS.map((option) => (\n                    <SelectItem key={option.value} value={option.value}>\n                      {option.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            {/* 検証ボタン */}\n            <div className=\"flex justify-end gap-2\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={handleValidate}\n                disabled={formData.kpis.length === 0}\n              >\n                <Calculator className=\"h-4 w-4 mr-2\" />\n                KPIを検証\n              </Button>\n            </div>\n\n            {/* 検証結果 */}\n            {validationResult && (\n              <Alert variant={validationResult.is_valid ? 'default' : 'destructive'}>\n                <CheckCircle className=\"h-4 w-4\" />\n                <AlertDescription>\n                  <div className=\"space-y-1\">\n                    <p className=\"font-medium\">\n                      {validationResult.is_valid ? '検証成功' : '検証エラー'}\n                    </p>\n                    {validationResult.messages.map((msg, i) => (\n                      <p key={i} className=\"text-sm\">\n                        {msg}\n                      </p>\n                    ))}\n                  </div>\n                </AlertDescription>\n              </Alert>\n            )}\n          </TabsContent>\n\n          <TabsContent value=\"generate\" className=\"space-y-6 mt-6\">\n            <Alert>\n              <Sparkles className=\"h-4 w-4\" />\n              <AlertDescription>\n                AIが事業内容に基づいて適切なKPIを自動生成します。\n                生成後は手動で編集可能です。\n              </AlertDescription>\n            </Alert>\n\n            <div className=\"space-y-4\">\n              {!isGenerating && (\n                <Button onClick={handleAutoGenerate} className=\"w-full gap-2\" size=\"lg\">\n                  <Sparkles className=\"h-4 w-4\" />\n                  KPIを自動生成\n                </Button>\n              )}\n\n              {isGenerating && (\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-center py-8\">\n                    <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n                  </div>\n                  <Progress value={generationProgress} className=\"h-2\" />\n                  <p className=\"text-center text-sm text-muted-foreground\">\n                    {generationProgress < 30 && '事業内容を分析中...'}\n                    {generationProgress >= 30 && generationProgress < 70 && 'KPIを生成中...'}\n                    {generationProgress >= 70 && generationProgress < 90 && '目標値を最適化中...'}\n                    {generationProgress >= 90 && '最終調整中...'}\n                  </p>\n                </div>\n              )}\n\n              {errors.generation && (\n                <Alert variant=\"destructive\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>{errors.generation}</AlertDescription>\n                </Alert>\n              )}\n            </div>\n\n            <Alert>\n              <Info className=\"h-4 w-4\" />\n              <AlertDescription>\n                <div className=\"space-y-2\">\n                  <p className=\"font-medium\">生成されるKPIの特徴：</p>\n                  <ul className=\"list-disc list-inside space-y-1 text-sm\">\n                    <li>SMART原則（具体的・測定可能・達成可能・関連性・期限）に準拠</li>\n                    <li>業界標準のベンチマークを考慮</li>\n                    <li>補助金の評価基準に適合</li>\n                    <li>3〜5個の最適な指標を提案</li>\n                  </ul>\n                </div>\n              </AlertDescription>\n            </Alert>\n          </TabsContent>\n        </Tabs>\n      </CardContent>\n    </Card>\n  );\n}"],"mappingsyFgB;;;;;;WAAAA,OAAA;;;;;;;;yEAvFgB;;;kCAC0C;;;kCACnD;;;kCACD;;;kCACA;;;kCACkB;;;mCAClB;;;mCACG;;;mCACgC;;;mCAOlD;;;mCAYA;;;mCACmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4B1B;AACA,MAAMC,eAAA;AAAA;AAAA,CAAAC,cAAA,GAAAC,CAAA,QAA4C;EAChDC,EAAA,EAAI,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI;EAClCC,EAAA,EAAI,CAAC,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,IAAI;EACxCC,EAAA,EAAI,CAAC,KAAK,MAAM,MAAM,OAAO,KAAK;EAClCC,EAAA,EAAI,CAAC,KAAK,QAAQ,IAAI;EACtBC,EAAA,EAAI,CAAC,KAAK,KAAK,IAAI;EACnBC,EAAA,EAAI,CAAC,KAAK,KAAK,KAAK;EACpBC,EAAA,EAAI,CAAC,KAAK,MAAM,IAAI;EACpBC,GAAA,EAAK,CAAC,MAAM,MAAM,MAAM,KAAK;EAC7BC,EAAA,EAAI,CAAC,QAAQ,OAAO,MAAM;EAC1BC,GAAA,EAAK,CAAC,MAAM,OAAO;AACrB;AAEA,MAAMC,cAAA;AAAA;AAAA,CAAAZ,cAAA,GAAAC,CAAA,QAAiB,CACrB;EAAEY,KAAA,EAAO;EAAUC,KAAA,EAAO;AAAM,GAChC;EAAED,KAAA,EAAO;EAAWC,KAAA,EAAO;AAAM,GACjC;EAAED,KAAA,EAAO;EAAWC,KAAA,EAAO;AAAM,GACjC;EAAED,KAAA,EAAO;EAASC,KAAA,EAAO;AAAK,GAC9B;EAAED,KAAA,EAAO;EAAUC,KAAA,EAAO;AAAK,GAC/B;EAAED,KAAA,EAAO;EAAUC,KAAA,EAAO;AAAK,EAChC;AAED,MAAMC,iBAAA;AAAA;AAAA,CAAAf,cAAA,GAAAC,CAAA,QAAoB,CACxB;EAAEY,KAAA,EAAO;EAASC,KAAA,EAAO;AAAK,GAC9B;EAAED,KAAA,EAAO;EAAUC,KAAA,EAAO;AAAK,GAC/B;EAAED,KAAA,EAAO;EAAWC,KAAA,EAAO;AAAK,GAChC;EAAED,KAAA,EAAO;EAAaC,KAAA,EAAO;AAAM,GACnC;EAAED,KAAA,EAAO;EAAUC,KAAA,EAAO;AAAK,EAChC;AAEM,SAAShB,QAAQ;EAAEkB,aAAa;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAU,CAAgB;EAAA;EAAAnB,cAAA,GAAAoB,CAAA;EACjF,MAAM,CAACC,QAAA,EAAUC,WAAA,CAAY;EAAA;EAAA,CAAAtB,cAAA,GAAAC,CAAA,QAAG,IAAAsB,MAAA,CAAAC,QAAQ;EACtC;EAAA,CAAAxB,cAAA,GAAAyB,CAAA,WAAAR,IAAA;EAAA;EAAA,CAAAjB,cAAA,GAAAyB,CAAA,WAAQ;IACNC,IAAA,EAAM,EAAE;IACRC,kBAAA,EAAoB;IACpBC,mBAAA,EAAqB;EACvB;EAEF,MAAM,CAACC,YAAA,EAAcC,eAAA,CAAgB;EAAA;EAAA,CAAA9B,cAAA,GAAAC,CAAA,QAAG,IAAAsB,MAAA,CAAAC,QAAQ,EAAC;EACjD,MAAM,CAACO,kBAAA,EAAoBC,qBAAA,CAAsB;EAAA;EAAA,CAAAhC,cAAA,GAAAC,CAAA,QAAG,IAAAsB,MAAA,CAAAC,QAAQ,EAAC;EAC7D,MAAM,CAACS,gBAAA,EAAkBC,mBAAA,CAAoB;EAAA;EAAA,CAAAlC,cAAA,GAAAC,CAAA,QAAG,IAAAsB,MAAA,CAAAC,QAAQ,EAA0B;EAClF,MAAM,CAACW,MAAA,EAAQC,SAAA,CAAU;EAAA;EAAA,CAAApC,cAAA,GAAAC,CAAA,QAAG,IAAAsB,MAAA,CAAAC,QAAQ,EAAyB,CAAC;EAC9D,MAAM,CAACa,SAAA,EAAWC,YAAA,CAAa;EAAA;EAAA,CAAAtC,cAAA,GAAAC,CAAA,QAAG,IAAAsB,MAAA,CAAAC,QAAQ,EAAC;EAC3C,MAAM,CAACe,oBAAA,EAAsBC,uBAAA,CAAwB;EAAA;EAAA,CAAAxC,cAAA,GAAAC,CAAA,QAAG,IAAAsB,MAAA,CAAAC,QAAQ,EAAS;EAAA;EAAAxB,cAAA,GAAAC,CAAA;EAEzE,MAAMwC,iBAAA,GAAoBA,CAACC,KAAA,EAAe7B,KAAA;IAAA;IAAAb,cAAA,GAAAoB,CAAA;IACxC,MAAMuB,OAAA;IAAA;IAAA,CAAA3C,cAAA,GAAAC,CAAA,QAAU;MAAE,GAAGoB,QAAQ;MAAE,CAACqB,KAAA,GAAQ7B;IAAM;IAAA;IAAAb,cAAA,GAAAC,CAAA;IAC9CqB,WAAA,CAAYqB,OAAA;IAAA;IAAA3C,cAAA,GAAAC,CAAA;IACZiB,QAAA,CAASyB,OAAA;IAET;IAAA;IAAA3C,cAAA,GAAAC,CAAA;IACA,IAAIkC,MAAM,CAACO,KAAA,CAAM,EAAE;MAAA;MAAA1C,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAC,CAAA;MACjBmC,SAAA,CAAWQ,IAAA;QAAA;QAAA5C,cAAA,GAAAoB,CAAA;QACT,MAAMyB,SAAA;QAAA;QAAA,CAAA7C,cAAA,GAAAC,CAAA,QAAY;UAAE,GAAG2C;QAAK;QAAA;QAAA5C,cAAA,GAAAC,CAAA;QAC5B,OAAO4C,SAAS,CAACH,KAAA,CAAM;QAAA;QAAA1C,cAAA,GAAAC,CAAA;QACvB,OAAO4C,SAAA;MACT;IACF;IAAA;IAAA;MAAA7C,cAAA,GAAAyB,CAAA;IAAA;EACF;EAAA;EAAAzB,cAAA,GAAAC,CAAA;EAEA,MAAM6C,eAAA,GAAkBA,CAACC,KAAA,EAAeL,KAAA,EAAsB7B,KAAA;IAAA;IAAAb,cAAA,GAAAoB,CAAA;IAC5D,MAAM4B,OAAA;IAAA;IAAA,CAAAhD,cAAA,GAAAC,CAAA,QAAU,C,GAAIoB,QAAA,CAASK,IAAI,CAAC;IAAA;IAAA1B,cAAA,GAAAC,CAAA;IAClC+C,OAAO,CAACD,KAAA,CAAM,GAAG;MAAE,GAAGC,OAAO,CAACD,KAAA,CAAM;MAAE,CAACL,KAAA,GAAQ7B;IAAM;IAAA;IAAAb,cAAA,GAAAC,CAAA;IACrDwC,iBAAA,CAAkB,QAAQO,OAAA;EAC5B;EAAA;EAAAhD,cAAA,GAAAC,CAAA;EAEA,MAAMgD,MAAA,GAASA,CAAA;IAAA;IAAAjD,cAAA,GAAAoB,CAAA;IACb,MAAM8B,MAAA;IAAA;IAAA,CAAAlD,cAAA,GAAAC,CAAA,QAAkB;MACtBkD,EAAA,EAAI,OAAOC,IAAA,CAAKC,GAAG,IAAI;MACvBC,IAAA,EAAM;MACNC,IAAA,EAAM;MACNC,QAAA,EAAU;MACVC,MAAA,EAAQ;MACRC,MAAA,EAAQ;MACRC,UAAA,EAAY;IACd;IAAA;IAAA3D,cAAA,GAAAC,CAAA;IACAwC,iBAAA,CAAkB,QAAQ,C,GAAIpB,QAAA,CAASK,IAAI,EAAEwB,MAAA,CAAO;EACtD;EAAA;EAAAlD,cAAA,GAAAC,CAAA;EAEA,MAAM2D,SAAA,GAAab,KAAA;IAAA;IAAA/C,cAAA,GAAAoB,CAAA;IACjB,MAAM4B,OAAA;IAAA;IAAA,CAAAhD,cAAA,GAAAC,CAAA,QAAUoB,QAAA,CAASK,IAAI,CAACmC,MAAM,CAAC,CAACC,CAAA,EAAGC,CAAA,KAAM;MAAA;MAAA/D,cAAA,GAAAoB,CAAA;MAAApB,cAAA,GAAAC,CAAA;MAAA,OAAA8D,CAAA,KAAMhB,KAAA;IAAA;IAAA;IAAA/C,cAAA,GAAAC,CAAA;IACrDwC,iBAAA,CAAkB,QAAQO,OAAA;EAC5B;EAAA;EAAAhD,cAAA,GAAAC,CAAA;EAEA,MAAM+D,kBAAA,GAAqB,MAAAA,CAAA;IAAA;IAAAhE,cAAA,GAAAoB,CAAA;IAAApB,cAAA,GAAAC,CAAA;IACzB6B,eAAA,CAAgB;IAAA;IAAA9B,cAAA,GAAAC,CAAA;IAChB+B,qBAAA,CAAsB;IAAA;IAAAhC,cAAA,GAAAC,CAAA;IAEtB,IAAI;MAAA;MAAAD,cAAA,GAAAC,CAAA;MACF;MACA+B,qBAAA,CAAsB;MACtB,MAAMiC,QAAA;MAAA;MAAA,CAAAjE,cAAA,GAAAC,CAAA,QAAW,MAAMiE,OAAA,CAAAC,SAAS,CAACC,IAAI,CAAmB,kBAAkB;QACxEC,cAAA,EAAgBrD;MAClB;MAAA;MAAAhB,cAAA,GAAAC,CAAA;MAEA+B,qBAAA,CAAsB;MAEtB;MACA,MAAMsC,aAAA;MAAA;MAAA,CAAAtE,cAAA,GAAAC,CAAA,QAAgBsE,kBAAA,CAAmBN,QAAA,CAASO,OAAO;MAAA;MAAAxE,cAAA,GAAAC,CAAA;MAEzD+B,qBAAA,CAAsB;MAEtB;MACA,MAAMW,OAAA;MAAA;MAAA,CAAA3C,cAAA,GAAAC,CAAA,QAAmB;QACvB,GAAGoB,QAAQ;QACXK,IAAA,EAAM4C;MACR;MAAA;MAAAtE,cAAA,GAAAC,CAAA;MAEAqB,WAAA,CAAYqB,OAAA;MAAA;MAAA3C,cAAA,GAAAC,CAAA;MACZiB,QAAA,CAASyB,OAAA;MAAA;MAAA3C,cAAA,GAAAC,CAAA;MACT+B,qBAAA,CAAsB;MAAA;MAAAhC,cAAA,GAAAC,CAAA;MAEtBwE,UAAA,CAAW;QAAA;QAAAzE,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAC,CAAA;QACT+B,qBAAA,CAAsB;QAAA;QAAAhC,cAAA,GAAAC,CAAA;QACtBqC,YAAA,CAAa;MACf,GAAG;IACL,EAAE,OAAOoC,KAAA,EAAY;MAAA;MAAA1E,cAAA,GAAAC,CAAA;MACnBmC,SAAA,CAAU;QAAEuC,UAAA;QAAY;QAAA,CAAA3E,cAAA,GAAAyB,CAAA,WAAAiD,KAAA,CAAME,OAAO;QAAA;QAAA,CAAA5E,cAAA,GAAAyB,CAAA,WAAI;MAAe;IAC1D,UAAU;MAAA;MAAAzB,cAAA,GAAAC,CAAA;MACR6B,eAAA,CAAgB;IAClB;EACF;EAAA;EAAA9B,cAAA,GAAAC,CAAA;EAEA,MAAM4E,cAAA,GAAiB,MAAAA,CAAA;IAAA;IAAA7E,cAAA,GAAAoB,CAAA;IAAApB,cAAA,GAAAC,CAAA;IACrB,IAAI;MACF,MAAM6E,MAAA;MAAA;MAAA,CAAA9E,cAAA,GAAAC,CAAA,QAAS,MAAMiE,OAAA,CAAAC,SAAS,CAACC,IAAI,CAAmB,kBAAkB;QACtE1C,IAAA,EAAML,QAAA,CAASK;MACjB;MAAA;MAAA1B,cAAA,GAAAC,CAAA;MACAiC,mBAAA,CAAoB4C,MAAA;IACtB,EAAE,OAAOJ,KAAA,EAAY;MAAA;MAAA1E,cAAA,GAAAC,CAAA;MACnBmC,SAAA,CAAU;QAAE2C,UAAA;QAAY;QAAA,CAAA/E,cAAA,GAAAyB,CAAA,WAAAiD,KAAA,CAAME,OAAO;QAAA;QAAA,CAAA5E,cAAA,GAAAyB,CAAA,WAAI;MAAY;IACvD;EACF;EAAA;EAAAzB,cAAA,GAAAC,CAAA;EAEA,MAAMsE,kBAAA,GAAsBC,OAAA;IAAA;IAAAxE,cAAA,GAAAoB,CAAA;IAC1B;IACA,MAAMM,IAAA;IAAA;IAAA,CAAA1B,cAAA,GAAAC,CAAA,QAAkB,EAAE;IAC1B,MAAM+E,KAAA;IAAA;IAAA,CAAAhF,cAAA,GAAAC,CAAA,QAAQuE,OAAA,CAAQS,KAAK,CAAC;IAE5B,IAAIC,UAAA;IAAA;IAAA,CAAAlF,cAAA,GAAAC,CAAA,QAAsC;IAAA;IAAAD,cAAA,GAAAC,CAAA;IAE1C,KAAK,MAAMkF,IAAA,IAAQH,KAAA,EAAO;MAAA;MAAAhF,cAAA,GAAAC,CAAA;MACxB,IAAIkF,IAAA,CAAKC,UAAU,CAAC,SAAS;QAAA;QAAApF,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAC,CAAA;QAC3B;QAAI;QAAA,CAAAD,cAAA,GAAAyB,CAAA,WAAAyD,UAAA;QAAA;QAAA,CAAAlF,cAAA,GAAAyB,CAAA,WAAcyD,UAAA,CAAW5B,IAAI,GAAE;UAAA;UAAAtD,cAAA,GAAAyB,CAAA;UAAAzB,cAAA,GAAAC,CAAA;UACjCyB,IAAA,CAAK2D,IAAI,CAAC;YACRlC,EAAA,EAAI,OAAOC,IAAA,CAAKC,GAAG,MAAM3B,IAAA,CAAK4D,MAAM,EAAE;YACtChC,IAAA,EAAM4B,UAAA,CAAW5B,IAAI;YACrBiC,WAAA;YAAa;YAAA,CAAAvF,cAAA,GAAAyB,CAAA,WAAAyD,UAAA,CAAWK,WAAW;YAAA;YAAA,CAAAvF,cAAA,GAAAyB,CAAA,WAAI;YACvC8B,IAAA;YAAM;YAAA,CAAAvD,cAAA,GAAAyB,CAAA,WAAAyD,UAAA,CAAW3B,IAAI;YAAA;YAAA,CAAAvD,cAAA,GAAAyB,CAAA,WAAI;YACzB+B,QAAA;YAAU;YAAA,CAAAxD,cAAA,GAAAyB,CAAA,WAAAyD,UAAA,CAAW1B,QAAQ;YAAA;YAAA,CAAAxD,cAAA,GAAAyB,CAAA,WAAI;YACjCgC,MAAA;YAAQ;YAAA,CAAAzD,cAAA,GAAAyB,CAAA,WAAAyD,UAAA,CAAWzB,MAAM;YAAA;YAAA,CAAAzD,cAAA,GAAAyB,CAAA,WAAI;YAC7BiC,MAAA;YAAQ;YAAA,CAAA1D,cAAA,GAAAyB,CAAA,WAAAyD,UAAA,CAAWxB,MAAM;YAAA;YAAA,CAAA1D,cAAA,GAAAyB,CAAA,WAAI;YAC7B+D,iBAAA,EAAmBN,UAAA,CAAWM,iBAAiB;YAC/C7B,UAAA;YAAY;YAAA,CAAA3D,cAAA,GAAAyB,CAAA,WAAAyD,UAAA,CAAWvB,UAAU;YAAA;YAAA,CAAA3D,cAAA,GAAAyB,CAAA,WAAI;UACvC;QACF;QAAA;QAAA;UAAAzB,cAAA,GAAAyB,CAAA;QAAA;QAAAzB,cAAA,GAAAC,CAAA;QACAiF,UAAA,GAAa;UAAE5B,IAAA,EAAM6B,IAAA,CAAKM,SAAS,CAAC,GAAGC,IAAI;QAAG;MAChD,OAAO;QAAA;QAAA1F,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAC,CAAA;QAAA,IAAIiF,UAAA,EAAY;UAAA;UAAAlF,cAAA,GAAAyB,CAAA;UAAAzB,cAAA,GAAAC,CAAA;UACrB,IAAIkF,IAAA,CAAKQ,QAAQ,CAAC,QAAQ;YAAA;YAAA3F,cAAA,GAAAyB,CAAA;YAAAzB,cAAA,GAAAC,CAAA;YACxBiF,UAAA,CAAWK,WAAW,GAAGJ,IAAA,CAAKF,KAAK,CAAC,MAAM,CAAC,EAAE,CAACS,IAAI;UACpD,OAAO;YAAA;YAAA1F,cAAA,GAAAyB,CAAA;YAAAzB,cAAA,GAAAC,CAAA;YAAA,IAAIkF,IAAA,CAAKQ,QAAQ,CAAC,QAAQ;cAAA;cAAA3F,cAAA,GAAAyB,CAAA;cAAAzB,cAAA,GAAAC,CAAA;cAC/BiF,UAAA,CAAW3B,IAAI,GAAG4B,IAAA,CAAKF,KAAK,CAAC,MAAM,CAAC,EAAE,CAACS,IAAI;YAC7C,OAAO;cAAA;cAAA1F,cAAA,GAAAyB,CAAA;cAAAzB,cAAA,GAAAC,CAAA;cAAA,IAAIkF,IAAA,CAAKQ,QAAQ,CAAC,QAAQ;gBAAA;gBAAA3F,cAAA,GAAAyB,CAAA;gBAAAzB,cAAA,GAAAC,CAAA;gBAC/BiF,UAAA,CAAW1B,QAAQ;gBAAG;gBAAA,CAAAxD,cAAA,GAAAyB,CAAA,WAAAmE,UAAA,CAAWT,IAAA,CAAKF,KAAK,CAAC,MAAM,CAAC,EAAE;gBAAA;gBAAA,CAAAjF,cAAA,GAAAyB,CAAA,WAAK;cAC5D,OAAO;gBAAA;gBAAAzB,cAAA,GAAAyB,CAAA;gBAAAzB,cAAA,GAAAC,CAAA;gBAAA,IAAIkF,IAAA,CAAKQ,QAAQ,CAAC,QAAQ;kBAAA;kBAAA3F,cAAA,GAAAyB,CAAA;kBAAAzB,cAAA,GAAAC,CAAA;kBAC/BiF,UAAA,CAAWzB,MAAM;kBAAG;kBAAA,CAAAzD,cAAA,GAAAyB,CAAA,WAAAmE,UAAA,CAAWT,IAAA,CAAKF,KAAK,CAAC,MAAM,CAAC,EAAE;kBAAA;kBAAA,CAAAjF,cAAA,GAAAyB,CAAA,WAAK;gBAC1D,OAAO;kBAAA;kBAAAzB,cAAA,GAAAyB,CAAA;kBAAAzB,cAAA,GAAAC,CAAA;kBAAA,IAAIkF,IAAA,CAAKQ,QAAQ,CAAC,QAAQ;oBAAA;oBAAA3F,cAAA,GAAAyB,CAAA;oBAC/B,MAAMoE,UAAA;oBAAA;oBAAA,CAAA7F,cAAA,GAAAC,CAAA,SAAakF,IAAA,CAAKF,KAAK,CAAC,MAAM,CAAC,EAAE,CAACS,IAAI;oBAAA;oBAAA1F,cAAA,GAAAC,CAAA;oBAC5CiF,UAAA,CAAWxB,MAAM,GAAGoC,aAAA,CAAcD,UAAA;kBACpC,OAAO;oBAAA;oBAAA7F,cAAA,GAAAyB,CAAA;oBAAAzB,cAAA,GAAAC,CAAA;oBAAA,IAAIkF,IAAA,CAAKQ,QAAQ,CAAC,UAAU;sBAAA;sBAAA3F,cAAA,GAAAyB,CAAA;sBAAAzB,cAAA,GAAAC,CAAA;sBACjCiF,UAAA,CAAWM,iBAAiB,GAAGL,IAAA,CAAKF,KAAK,CAAC,QAAQ,CAAC,EAAE,CAACS,IAAI;oBAC5D,OAAO;sBAAA;sBAAA1F,cAAA,GAAAyB,CAAA;sBAAAzB,cAAA,GAAAC,CAAA;sBAAA,IAAIkF,IAAA,CAAKQ,QAAQ,CAAC,SAAS;wBAAA;wBAAA3F,cAAA,GAAAyB,CAAA;wBAChC,MAAMkC,UAAA;wBAAA;wBAAA,CAAA3D,cAAA,GAAAC,CAAA,SAAakF,IAAA,CAAKF,KAAK,CAAC,OAAO,CAAC,EAAE,CAACS,IAAI;wBAAA;wBAAA1F,cAAA,GAAAC,CAAA;wBAC7CiF,UAAA,CAAWvB,UAAU,GAAGoC,aAAA,CAAcpC,UAAA;sBACxC;sBAAA;sBAAA;wBAAA3D,cAAA,GAAAyB,CAAA;sBAAA;oBAAA;kBAAA;gBAAA;cAAA;YAAA;UAAA;QACF;QAAA;QAAA;UAAAzB,cAAA,GAAAyB,CAAA;QAAA;MAAA;IACF;IAEA;IAAA;IAAAzB,cAAA,GAAAC,CAAA;IACA;IAAI;IAAA,CAAAD,cAAA,GAAAyB,CAAA,WAAAyD,UAAA;IAAA;IAAA,CAAAlF,cAAA,GAAAyB,CAAA,WAAcyD,UAAA,CAAW5B,IAAI,GAAE;MAAA;MAAAtD,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAC,CAAA;MACjCyB,IAAA,CAAK2D,IAAI,CAAC;QACRlC,EAAA,EAAI,OAAOC,IAAA,CAAKC,GAAG,MAAM3B,IAAA,CAAK4D,MAAM,EAAE;QACtChC,IAAA,EAAM4B,UAAA,CAAW5B,IAAI;QACrBiC,WAAA;QAAa;QAAA,CAAAvF,cAAA,GAAAyB,CAAA,WAAAyD,UAAA,CAAWK,WAAW;QAAA;QAAA,CAAAvF,cAAA,GAAAyB,CAAA,WAAI;QACvC8B,IAAA;QAAM;QAAA,CAAAvD,cAAA,GAAAyB,CAAA,WAAAyD,UAAA,CAAW3B,IAAI;QAAA;QAAA,CAAAvD,cAAA,GAAAyB,CAAA,WAAI;QACzB+B,QAAA;QAAU;QAAA,CAAAxD,cAAA,GAAAyB,CAAA,WAAAyD,UAAA,CAAW1B,QAAQ;QAAA;QAAA,CAAAxD,cAAA,GAAAyB,CAAA,WAAI;QACjCgC,MAAA;QAAQ;QAAA,CAAAzD,cAAA,GAAAyB,CAAA,WAAAyD,UAAA,CAAWzB,MAAM;QAAA;QAAA,CAAAzD,cAAA,GAAAyB,CAAA,WAAI;QAC7BiC,MAAA;QAAQ;QAAA,CAAA1D,cAAA,GAAAyB,CAAA,WAAAyD,UAAA,CAAWxB,MAAM;QAAA;QAAA,CAAA1D,cAAA,GAAAyB,CAAA,WAAI;QAC7B+D,iBAAA,EAAmBN,UAAA,CAAWM,iBAAiB;QAC/C7B,UAAA;QAAY;QAAA,CAAA3D,cAAA,GAAAyB,CAAA,WAAAyD,UAAA,CAAWvB,UAAU;QAAA;QAAA,CAAA3D,cAAA,GAAAyB,CAAA,WAAI;MACvC;IACF;IAAA;IAAA;MAAAzB,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAC,CAAA;IAEA,OAAOyB,IAAA,CAAKsE,KAAK,CAAC,GAAG,IAAI;EAC3B;EAAA;EAAAhG,cAAA,GAAAC,CAAA;EAEA,MAAM6F,aAAA,GAAiBG,IAAA;IAAA;IAAAjG,cAAA,GAAAoB,CAAA;IAAApB,cAAA,GAAAC,CAAA;IACrB,IAAIgG,IAAA,CAAKN,QAAQ,CAAC,QAAQ;MAAA;MAAA3F,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAC,CAAA;MAAA,OAAO;IAAA;IAAA;IAAA;MAAAD,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAC,CAAA;IACjC,IAAIgG,IAAA,CAAKN,QAAQ,CAAC,QAAQ;MAAA;MAAA3F,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAC,CAAA;MAAA,OAAO;IAAA;IAAA;IAAA;MAAAD,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAC,CAAA;IACjC;IAAI;IAAA,CAAAD,cAAA,GAAAyB,CAAA,WAAAwE,IAAA,CAAKN,QAAQ,CAAC;IAAA;IAAA,CAAA3F,cAAA,GAAAyB,CAAA,WAAUwE,IAAA,CAAKN,QAAQ,CAAC,QAAO;MAAA;MAAA3F,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAC,CAAA;MAAA,OAAO;IAAA;IAAA;IAAA;MAAAD,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAC,CAAA;IACxD,IAAIgG,IAAA,CAAKN,QAAQ,CAAC,OAAO;MAAA;MAAA3F,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAC,CAAA;MAAA,OAAO;IAAA;IAAA;IAAA;MAAAD,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAC,CAAA;IAChC,IAAIgG,IAAA,CAAKN,QAAQ,CAAC,OAAO;MAAA;MAAA3F,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAC,CAAA;MAAA,OAAO;IAAA;IAAA;IAAA;MAAAD,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAC,CAAA;IAChC,OAAO;EACT;EAAA;EAAAD,cAAA,GAAAC,CAAA;EAEA,MAAM8F,aAAA,GAAiBE,IAAA;IAAA;IAAAjG,cAAA,GAAAoB,CAAA;IAAApB,cAAA,GAAAC,CAAA;IACrB;IAAI;IAAA,CAAAD,cAAA,GAAAyB,CAAA,WAAAwE,IAAA,CAAKN,QAAQ,CAAC;IAAA;IAAA,CAAA3F,cAAA,GAAAyB,CAAA,WAAQwE,IAAA,CAAKN,QAAQ,CAAC,QAAO;MAAA;MAAA3F,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAC,CAAA;MAAA,OAAO;IAAA;IAAA;IAAA;MAAAD,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAC,CAAA;IACtD,IAAIgG,IAAA,CAAKN,QAAQ,CAAC,MAAM;MAAA;MAAA3F,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAC,CAAA;MAAA,OAAO;IAAA;IAAA;IAAA;MAAAD,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAC,CAAA;IAC/B,OAAO;EACT;EAAA;EAAAD,cAAA,GAAAC,CAAA;EAEA,MAAMiG,oBAAA,GAAuBA,CAAC1C,QAAA,EAAkBC,MAAA;IAAA;IAAAzD,cAAA,GAAAoB,CAAA;IAAApB,cAAA,GAAAC,CAAA;IAC9C,IAAIuD,QAAA,KAAa,GAAG;MAAA;MAAAxD,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAC,CAAA;MAAA,OAAOwD,MAAA,GAAS;MAAA;MAAA,CAAAzD,cAAA,GAAAyB,CAAA,WAAI;MAAA;MAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAO;IAAA;IAAA;IAAA;MAAAzB,cAAA,GAAAyB,CAAA;IAAA;IAC/C,MAAM0E,WAAA;IAAA;IAAA,CAAAnG,cAAA,GAAAC,CAAA,SAAc,CAAEwD,MAAA,GAASD,QAAO,IAAKA,QAAA,GAAY;IAAA;IAAAxD,cAAA,GAAAC,CAAA;IACvD,OAAO,GAAGkG,WAAA,GAAc;IAAA;IAAA,CAAAnG,cAAA,GAAAyB,CAAA,WAAI;IAAA;IAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAM,MAAK0E,WAAA,CAAYC,OAAO,CAAC,KAAK;EAClE;EAAA;EAAApG,cAAA,GAAAC,CAAA;EAEA,MAAMoG,YAAA,GAAeA,CAAA;IAAA;IAAArG,cAAA,GAAAoB,CAAA;IACnB,MAAMyB,SAAA;IAAA;IAAA,CAAA7C,cAAA,GAAAC,CAAA,SAAoC,CAAC;IAAA;IAAAD,cAAA,GAAAC,CAAA;IAE3C;IAAI;IAAA,CAAAD,cAAA,GAAAyB,CAAA,YAACJ,QAAA,CAASK,IAAI;IAAA;IAAA,CAAA1B,cAAA,GAAAyB,CAAA,WAAIJ,QAAA,CAASK,IAAI,CAAC4D,MAAM,KAAK,IAAG;MAAA;MAAAtF,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAC,CAAA;MAChD4C,SAAA,CAAUnB,IAAI,GAAG;IACnB,OAAO;MAAA;MAAA1B,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAC,CAAA;MAAA,IAAIoB,QAAA,CAASK,IAAI,CAAC4D,MAAM,GAAG,GAAG;QAAA;QAAAtF,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAC,CAAA;QACnC4C,SAAA,CAAUnB,IAAI,GAAG;MACnB,OAAO;QAAA;QAAA1B,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAC,CAAA;QAAA,IAAIoB,QAAA,CAASK,IAAI,CAAC4D,MAAM,GAAG,GAAG;UAAA;UAAAtF,cAAA,GAAAyB,CAAA;UAAAzB,cAAA,GAAAC,CAAA;UACnC4C,SAAA,CAAUnB,IAAI,GAAG;QACnB;QAAA;QAAA;UAAA1B,cAAA,GAAAyB,CAAA;QAAA;MAAA;IAAA;IAAA;IAAAzB,cAAA,GAAAC,CAAA;IAEAoB,QAAA,CAASK,IAAI,CAAC4E,OAAO,CAAC,CAACC,GAAA,EAAKxD,KAAA;MAAA;MAAA/C,cAAA,GAAAoB,CAAA;MAAApB,cAAA,GAAAC,CAAA;MAC1B,IAAI,CAACsG,GAAA,CAAIjD,IAAI,EAAE;QAAA;QAAAtD,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAC,CAAA;QACb4C,SAAS,CAAC,OAAOE,KAAA,OAAY,CAAC,GAAG;MACnC;MAAA;MAAA;QAAA/C,cAAA,GAAAyB,CAAA;MAAA;MAAAzB,cAAA,GAAAC,CAAA;MACA,IAAIsG,GAAA,CAAI9C,MAAM,IAAI8C,GAAA,CAAI/C,QAAQ,EAAE;QAAA;QAAAxD,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAC,CAAA;QAC9B4C,SAAS,CAAC,OAAOE,KAAA,SAAc,CAAC,GAAG;MACrC;MAAA;MAAA;QAAA/C,cAAA,GAAAyB,CAAA;MAAA;IACF;IAAA;IAAAzB,cAAA,GAAAC,CAAA;IAEAmC,SAAA,CAAUS,SAAA;IAAA;IAAA7C,cAAA,GAAAC,CAAA;IACV,OAAOuG,MAAA,CAAOC,IAAI,CAAC5D,SAAA,EAAWyC,MAAM,KAAK;EAC3C;EAAA;EAAAtF,cAAA,GAAAC,CAAA;EAEA,oBACE,IAAAyG,WAAA,CAAAC,IAAA,EAACC,KAAA,CAAAC,IAAI;4BACH,IAAAH,WAAA,CAAAC,IAAA,EAACC,KAAA,CAAAE,UAAU;8BACT,IAAAJ,WAAA,CAAAC,IAAA,EAACC,KAAA,CAAAG,SAAS;QAACC,SAAA,EAAU;gCACnB,IAAAN,WAAA,CAAAO,GAAA,EAACC,YAAA,CAAAC,MAAM;UAACH,SAAA,EAAU;YAAY;uBAGhC,IAAAN,WAAA,CAAAO,GAAA,EAACL,KAAA,CAAAQ,eAAe;kBAAC;;qBAInB,IAAAV,WAAA,CAAAO,GAAA,EAACL,KAAA,CAAAS,WAAW;gBACV,iBAAAX,WAAA,CAAAC,IAAA,EAACW,KAAA,CAAAC,IAAI;QAAC1G,KAAA,EAAOwB,SAAA;QAAWmF,aAAA,EAAelF,YAAA;gCACrC,IAAAoE,WAAA,CAAAC,IAAA,EAACW,KAAA,CAAAG,QAAQ;UAACT,SAAA,EAAU;kCAClB,IAAAN,WAAA,CAAAO,GAAA,EAACK,KAAA,CAAAI,WAAW;YAAC7G,KAAA,EAAM;sBAAS;2BAC5B,IAAA6F,WAAA,CAAAO,GAAA,EAACK,KAAA,CAAAI,WAAW;YAAC7G,KAAA,EAAM;sBAAW;;yBAGhC,IAAA6F,WAAA,CAAAC,IAAA,EAACW,KAAA,CAAAK,WAAW;UAAC9G,KAAA,EAAM;UAASmG,SAAA,EAAU;kCAEpC,IAAAN,WAAA,CAAAC,IAAA,EAAC;YAAIK,SAAA,EAAU;uBACZ3F,QAAA,CAASK,IAAI,CAACkG,GAAG,CAAC,CAACrB,GAAA,EAAKxD,KAAA,KACvB;cAAA;cAAA/C,cAAA,GAAAoB,CAAA;cAAApB,cAAA,GAAAC,CAAA;cAAA,OADuB,aACvB,IAAAyG,WAAA,CAAAC,IAAA,EAAC;gBAAiBK,SAAA,EAAU;wCAC1B,IAAAN,WAAA,CAAAC,IAAA,EAAC;kBAAIK,SAAA,EAAU;0CACb,IAAAN,WAAA,CAAAC,IAAA,EAAC;oBAAIK,SAAA,EAAU;4CACb,IAAAN,WAAA,CAAAC,IAAA,EAACkB,MAAA,CAAAC,KAAK;sBAACC,OAAA,EAAQ;iCAAU,QAAKhF,KAAA,GAAQ;qCACtC,IAAA2D,WAAA,CAAAO,GAAA,EAACY,MAAA,CAAAC,KAAK;sBACJC,OAAA,EACExB,GAAA,CAAI5C,UAAU,KAAK;sBAAA;sBAAA,CAAA3D,cAAA,GAAAyB,CAAA,WACf;sBAAA;sBAAA,CAAAzB,cAAA,GAAAyB,CAAA,WACA8E,GAAA,CAAI5C,UAAU,KAAK;sBAAA;sBAAA,CAAA3D,cAAA,GAAAyB,CAAA,WACnB;sBAAA;sBAAA,CAAAzB,cAAA,GAAAyB,CAAA,WACA;gCAGL8E,GAAA,CAAI5C,UAAU,KAAK;sBAAA;sBAAA,CAAA3D,cAAA,GAAAyB,CAAA,WAAS;sBAAA;sBAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAM8E,GAAA,CAAI5C,UAAU,KAAK;sBAAA;sBAAA,CAAA3D,cAAA,GAAAyB,CAAA,WAAQ;sBAAA;sBAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAM;;mCAGxE,IAAAiF,WAAA,CAAAO,GAAA,EAACe,OAAA,CAAAC,MAAM;oBACLC,IAAA,EAAK;oBACLH,OAAA,EAAQ;oBACRI,IAAA,EAAK;oBACLC,OAAA,EAASA,CAAA,KAAM;sBAAA;sBAAApI,cAAA,GAAAoB,CAAA;sBAAApB,cAAA,GAAAC,CAAA;sBAAA,OAAA2D,SAAA,CAAUb,KAAA;oBAAA;8BAEzB,iBAAA2D,WAAA,CAAAO,GAAA,EAACC,YAAA,CAAAmB,MAAM;sBAACrB,SAAA,EAAU;;;iCAItB,IAAAN,WAAA,CAAAC,IAAA,EAAC;kBAAIK,SAAA,EAAU;0CACb,IAAAN,WAAA,CAAAC,IAAA,EAAC;oBAAIK,SAAA,EAAU;4CACb,IAAAN,WAAA,CAAAC,IAAA,EAAC2B,MAAA,CAAAC,KAAK;sBAACC,OAAA,EAAS,YAAYzF,KAAA,EAAO;iCAAE,Q,aAC/B,IAAA2D,WAAA,CAAAO,GAAA,EAAC;wBAAKD,SAAA,EAAU;kCAAmB;;qCAEzC,IAAAN,WAAA,CAAAO,GAAA,EAACwB,MAAA,CAAAC,KAAK;sBACJvF,EAAA,EAAI,YAAYJ,KAAA,EAAO;sBACvBlC,KAAA,EAAO0F,GAAA,CAAIjD,IAAI;sBACfpC,QAAA,EAAWyH,CAAA,IAAM;wBAAA;wBAAA3I,cAAA,GAAAoB,CAAA;wBAAApB,cAAA,GAAAC,CAAA;wBAAA,OAAA6C,eAAA,CAAgBC,KAAA,EAAO,QAAQ4F,CAAA,CAAElF,MAAM,CAAC5C,KAAK;sBAAA;sBAC9D+H,WAAA,EAAY;sBACZ5B,SAAA,EAAW7E,MAAM,CAAC,OAAOY,KAAA,OAAY,CAAC;sBAAA;sBAAA,CAAA/C,cAAA,GAAAyB,CAAA,WAAG;sBAAA;sBAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAuB;;oBAEjE;oBAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAAU,MAAM,CAAC,OAAOY,KAAA,OAAY,CAAC;oBAAA;oBAAA,CAAA/C,cAAA,GAAAyB,CAAA,wBAC1B,IAAAiF,WAAA,CAAAO,GAAA,EAAC;sBAAED,SAAA,EAAU;gCACV7E,MAAM,CAAC,OAAOY,KAAA,OAAY;;mCAKjC,IAAA2D,WAAA,CAAAC,IAAA,EAAC;4CACC,IAAAD,WAAA,CAAAO,GAAA,EAACqB,MAAA,CAAAC,KAAK;gCAAC;qCACP,IAAA7B,WAAA,CAAAC,IAAA,EAACkC,OAAA,CAAAC,MAAM;sBACLjI,KAAA,EAAO0B,oBAAA;sBACPiF,aAAA,EAAehF,uBAAA;8CAEf,IAAAkE,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAE,aAAa;kCACZ,iBAAArC,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAG,WAAW;uCAEd,IAAAtC,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAI,aAAa;kCACXzC,MAAA,CAAOC,IAAI,CAAC1G,eAAA,EAAiB6H,GAAG,CAAEsB,QAAA,IACjC;0BAAA;0BAAAlJ,cAAA,GAAAoB,CAAA;0BAAApB,cAAA,GAAAC,CAAA;0BAAA,OADiC,aACjC,IAAAyG,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAM,UAAU;4BAAgBtI,KAAA,EAAOqI,QAAA;sCAC/BA;6BADcA,QAAA;wBAAA;;;mCAQzB,IAAAxC,WAAA,CAAAC,IAAA,EAAC;4CACC,IAAAD,WAAA,CAAAO,GAAA,EAACqB,MAAA,CAAAC,KAAK;sBAACC,OAAA,EAAS,YAAYzF,KAAA,EAAO;gCAAE;qCACrC,IAAA2D,WAAA,CAAAC,IAAA,EAACkC,OAAA,CAAAC,MAAM;sBACLjI,KAAA,EAAO0F,GAAA,CAAIhD,IAAI;sBACfiE,aAAA,EAAgB3G,KAAA,IAAU;wBAAA;wBAAAb,cAAA,GAAAoB,CAAA;wBAAApB,cAAA,GAAAC,CAAA;wBAAA,OAAA6C,eAAA,CAAgBC,KAAA,EAAO,QAAQlC,KAAA;sBAAA;8CAEzD,IAAA6F,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAE,aAAa;kCACZ,iBAAArC,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAG,WAAW;uCAEd,IAAAtC,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAI,aAAa;kCACXlJ,eAAe,CAACwC,oBAAA,CAAqB,CAACqF,GAAG,CAAErE,IAAA,IAC1C;0BAAA;0BAAAvD,cAAA,GAAAoB,CAAA;0BAAApB,cAAA,GAAAC,CAAA;0BAAA,OAD0C,aAC1C,IAAAyG,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAM,UAAU;4BAAYtI,KAAA,EAAO0C,IAAA;sCAC3BA;6BADcA,IAAA;wBAAA;;;mCAQzB,IAAAmD,WAAA,CAAAC,IAAA,EAAC;4CACC,IAAAD,WAAA,CAAAO,GAAA,EAACqB,MAAA,CAAAC,KAAK;sBAACC,OAAA,EAAS,gBAAgBzF,KAAA,EAAO;gCAAE;qCACzC,IAAA2D,WAAA,CAAAO,GAAA,EAACwB,MAAA,CAAAC,KAAK;sBACJvF,EAAA,EAAI,gBAAgBJ,KAAA,EAAO;sBAC3BmF,IAAA,EAAK;sBACLrH,KAAA,EAAO0F,GAAA,CAAI/C,QAAQ;sBACnBtC,QAAA,EAAWyH,CAAA,IACT;wBAAA;wBAAA3I,cAAA,GAAAoB,CAAA;wBAAApB,cAAA,GAAAC,CAAA;wBAAA,OAAA6C,eAAA,CAAgBC,KAAA,EAAO;wBAAY;wBAAA,CAAA/C,cAAA,GAAAyB,CAAA,WAAAmE,UAAA,CAAW+C,CAAA,CAAElF,MAAM,CAAC5C,KAAK;wBAAA;wBAAA,CAAAb,cAAA,GAAAyB,CAAA,WAAK;sBAAA;sBAEnEmH,WAAA,EAAY;;mCAIhB,IAAAlC,WAAA,CAAAC,IAAA,EAAC;4CACC,IAAAD,WAAA,CAAAC,IAAA,EAAC2B,MAAA,CAAAC,KAAK;sBAACC,OAAA,EAAS,cAAczF,KAAA,EAAO;iCAAE,Q,aACjC,IAAA2D,WAAA,CAAAO,GAAA,EAAC;wBAAKD,SAAA,EAAU;kCAAmB;;qCAEzC,IAAAN,WAAA,CAAAO,GAAA,EAACwB,MAAA,CAAAC,KAAK;sBACJvF,EAAA,EAAI,cAAcJ,KAAA,EAAO;sBACzBmF,IAAA,EAAK;sBACLrH,KAAA,EAAO0F,GAAA,CAAI9C,MAAM;sBACjBvC,QAAA,EAAWyH,CAAA,IACT;wBAAA;wBAAA3I,cAAA,GAAAoB,CAAA;wBAAApB,cAAA,GAAAC,CAAA;wBAAA,OAAA6C,eAAA,CAAgBC,KAAA,EAAO;wBAAU;wBAAA,CAAA/C,cAAA,GAAAyB,CAAA,WAAAmE,UAAA,CAAW+C,CAAA,CAAElF,MAAM,CAAC5C,KAAK;wBAAA;wBAAA,CAAAb,cAAA,GAAAyB,CAAA,WAAK;sBAAA;sBAEjEmH,WAAA,EAAY;sBACZ5B,SAAA,EAAW7E,MAAM,CAAC,OAAOY,KAAA,SAAc,CAAC;sBAAA;sBAAA,CAAA/C,cAAA,GAAAyB,CAAA,WAAG;sBAAA;sBAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAuB;;oBAEnE;oBAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAAU,MAAM,CAAC,OAAOY,KAAA,SAAc,CAAC;oBAAA;oBAAA,CAAA/C,cAAA,GAAAyB,CAAA,wBAC5B,IAAAiF,WAAA,CAAAO,GAAA,EAAC;sBAAED,SAAA,EAAU;gCACV7E,MAAM,CAAC,OAAOY,KAAA,SAAc;;mCAKnC,IAAA2D,WAAA,CAAAC,IAAA,EAAC;4CACC,IAAAD,WAAA,CAAAO,GAAA,EAACqB,MAAA,CAAAC,KAAK;sBAACC,OAAA,EAAS,cAAczF,KAAA,EAAO;gCAAE;qCACvC,IAAA2D,WAAA,CAAAC,IAAA,EAACkC,OAAA,CAAAC,MAAM;sBACLjI,KAAA,EAAO0F,GAAA,CAAI7C,MAAM;sBACjB8D,aAAA,EAAgB3G,KAAA,IAAU;wBAAA;wBAAAb,cAAA,GAAAoB,CAAA;wBAAApB,cAAA,GAAAC,CAAA;wBAAA,OAAA6C,eAAA,CAAgBC,KAAA,EAAO,UAAUlC,KAAA;sBAAA;8CAE3D,IAAA6F,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAE,aAAa;kCACZ,iBAAArC,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAG,WAAW;uCAEd,IAAAtC,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAI,aAAa;kCACXrI,cAAA,CAAegH,GAAG,CAAEwB,MAAA,IACnB;0BAAA;0BAAApJ,cAAA,GAAAoB,CAAA;0BAAApB,cAAA,GAAAC,CAAA;0BAAA,OADmB,aACnB,IAAAyG,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAM,UAAU;4BAAoBtI,KAAA,EAAOuI,MAAA,CAAOvI,KAAK;sCAC/CuI,MAAA,CAAOtI;6BADOsI,MAAA,CAAOvI,KAAK;wBAAA;;;mCAQrC,IAAA6F,WAAA,CAAAC,IAAA,EAAC;4CACC,IAAAD,WAAA,CAAAO,GAAA,EAACqB,MAAA,CAAAC,KAAK;sBAACC,OAAA,EAAS,kBAAkBzF,KAAA,EAAO;gCAAE;qCAC3C,IAAA2D,WAAA,CAAAC,IAAA,EAACkC,OAAA,CAAAC,MAAM;sBACLjI,KAAA,EAAO0F,GAAA,CAAI5C,UAAU;sBACrB6D,aAAA,EAAgB3G,KAAA,IACd;wBAAA;wBAAAb,cAAA,GAAAoB,CAAA;wBAAApB,cAAA,GAAAC,CAAA;wBAAA,OAAA6C,eAAA,CAAgBC,KAAA,EAAO,cAAclC,KAAA;sBAAA;8CAGvC,IAAA6F,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAE,aAAa;kCACZ,iBAAArC,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAG,WAAW;uCAEd,IAAAtC,WAAA,CAAAC,IAAA,EAACkC,OAAA,CAAAI,aAAa;gDACZ,IAAAvC,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAM,UAAU;0BAACtI,KAAA,EAAM;oCAAO;yCACzB,IAAA6F,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAM,UAAU;0BAACtI,KAAA,EAAM;oCAAS;yCAC3B,IAAA6F,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAM,UAAU;0BAACtI,KAAA,EAAM;oCAAM;;;;mCAK9B,IAAA6F,WAAA,CAAAC,IAAA,EAAC;oBAAIK,SAAA,EAAU;4CACb,IAAAN,WAAA,CAAAO,GAAA,EAACqB,MAAA,CAAAC,KAAK;sBAACC,OAAA,EAAS,mBAAmBzF,KAAA,EAAO;gCAAE;qCAC5C,IAAA2D,WAAA,CAAAO,GAAA,EAAC;sBACC9D,EAAA,EAAI,mBAAmBJ,KAAA,EAAO;sBAC9BlC,KAAA;sBAAO;sBAAA,CAAAb,cAAA,GAAAyB,CAAA,WAAA8E,GAAA,CAAIhB,WAAW;sBAAA;sBAAA,CAAAvF,cAAA,GAAAyB,CAAA,WAAI;sBAC1BP,QAAA,EAAWyH,CAAA,IAAM;wBAAA;wBAAA3I,cAAA,GAAAoB,CAAA;wBAAApB,cAAA,GAAAC,CAAA;wBAAA,OAAA6C,eAAA,CAAgBC,KAAA,EAAO,eAAe4F,CAAA,CAAElF,MAAM,CAAC5C,KAAK;sBAAA;sBACrE+H,WAAA,EAAY;sBACZ5B,SAAA,EAAU;sBACVqC,IAAA,EAAM;;mCAIV,IAAA3C,WAAA,CAAAC,IAAA,EAAC;oBAAIK,SAAA,EAAU;4CACb,IAAAN,WAAA,CAAAO,GAAA,EAACqB,MAAA,CAAAC,KAAK;sBAACC,OAAA,EAAS,cAAczF,KAAA,EAAO;gCAAE;qCACvC,IAAA2D,WAAA,CAAAO,GAAA,EAACwB,MAAA,CAAAC,KAAK;sBACJvF,EAAA,EAAI,cAAcJ,KAAA,EAAO;sBACzBlC,KAAA;sBAAO;sBAAA,CAAAb,cAAA,GAAAyB,CAAA,WAAA8E,GAAA,CAAIf,iBAAiB;sBAAA;sBAAA,CAAAxF,cAAA,GAAAyB,CAAA,WAAI;sBAChCP,QAAA,EAAWyH,CAAA,IAAM;wBAAA;wBAAA3I,cAAA,GAAAoB,CAAA;wBAAApB,cAAA,GAAAC,CAAA;wBAAA,OAAA6C,eAAA,CAAgBC,KAAA,EAAO,qBAAqB4F,CAAA,CAAElF,MAAM,CAAC5C,KAAK;sBAAA;sBAC3E+H,WAAA,EAAY;;;;gBAMjB;gBAAA,CAAA5I,cAAA,GAAAyB,CAAA,WAAA8E,GAAA,CAAI/C,QAAQ,GAAG;gBAAA;gBAAA,CAAAxD,cAAA,GAAAyB,CAAA,WAAK8E,GAAA,CAAI9C,MAAM,GAAG;gBAAA;gBAAA,CAAAzD,cAAA,GAAAyB,CAAA,wBAChC,IAAAiF,WAAA,CAAAC,IAAA,EAAC;kBAAIK,SAAA,EAAU;0CACb,IAAAN,WAAA,CAAAO,GAAA,EAACC,YAAA,CAAAoC,UAAU;oBAACtC,SAAA,EAAU;mCACtB,IAAAN,WAAA,CAAAC,IAAA,EAAC;oBAAKK,SAAA,EAAU;+BAAU,S,aACnB,IAAAN,WAAA,CAAAO,GAAA,EAAC;gCAAQf,oBAAA,CAAqBK,GAAA,CAAI/C,QAAQ,EAAE+C,GAAA,CAAI9C,MAAM;;;;iBAvLzD8C,GAAA,CAAIpD,EAAE;YAAA;YA8LjB;YAAA,CAAAnD,cAAA,GAAAyB,CAAA,WAAAJ,QAAA,CAASK,IAAI,CAAC4D,MAAM,GAAG;YAAA;YAAA,CAAAtF,cAAA,GAAAyB,CAAA,wBACtB,IAAAiF,WAAA,CAAAC,IAAA,EAACqB,OAAA,CAAAC,MAAM;cACLC,IAAA,EAAK;cACLH,OAAA,EAAQ;cACRK,OAAA,EAASnF,MAAA;cACT+D,SAAA,EAAU;sCAEV,IAAAN,WAAA,CAAAO,GAAA,EAACC,YAAA,CAAAqC,IAAI;gBAACvC,SAAA,EAAU;kBAAY;;YAK/B;YAAA,CAAAhH,cAAA,GAAAyB,CAAA,WAAAU,MAAA,CAAOT,IAAI;YAAA;YAAA,CAAA1B,cAAA,GAAAyB,CAAA,wBACV,IAAAiF,WAAA,CAAAC,IAAA,EAAC6C,MAAA,CAAAC,KAAK;cAAC1B,OAAA,EAAS1G,QAAA,CAASK,IAAI,CAAC4D,MAAM,GAAG;cAAA;cAAA,CAAAtF,cAAA,GAAAyB,CAAA,WAAI;cAAA;cAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAY;sCACrD,IAAAiF,WAAA,CAAAO,GAAA,EAACC,YAAA,CAAAwC,WAAW;gBAAC1C,SAAA,EAAU;+BACvB,IAAAN,WAAA,CAAAO,GAAA,EAACuC,MAAA,CAAAG,gBAAgB;0BAAExH,MAAA,CAAOT;;;2BAMhC,IAAAgF,WAAA,CAAAC,IAAA,EAAC;YAAIK,SAAA,EAAU;oCACb,IAAAN,WAAA,CAAAO,GAAA,EAACqB,MAAA,CAAAC,KAAK;cAACC,OAAA,EAAQ;wBAAqB;6BACpC,IAAA9B,WAAA,CAAAO,GAAA,EAAC;cACC9D,EAAA,EAAG;cACHtC,KAAA;cAAO;cAAA,CAAAb,cAAA,GAAAyB,CAAA,WAAAJ,QAAA,CAASM,kBAAkB;cAAA;cAAA,CAAA3B,cAAA,GAAAyB,CAAA,WAAI;cACtCP,QAAA,EAAWyH,CAAA,IAAM;gBAAA;gBAAA3I,cAAA,GAAAoB,CAAA;gBAAApB,cAAA,GAAAC,CAAA;gBAAA,OAAAwC,iBAAA,CAAkB,sBAAsBkG,CAAA,CAAElF,MAAM,CAAC5C,KAAK;cAAA;cACvE+H,WAAA,EAAY;cACZ5B,SAAA,EAAU;cACVqC,IAAA,EAAM;;2BAKV,IAAA3C,WAAA,CAAAC,IAAA,EAAC;YAAIK,SAAA,EAAU;oCACb,IAAAN,WAAA,CAAAO,GAAA,EAACqB,MAAA,CAAAC,KAAK;cAACC,OAAA,EAAQ;wBAAsB;6BACrC,IAAA9B,WAAA,CAAAC,IAAA,EAACkC,OAAA,CAAAC,MAAM;cACLjI,KAAA,EAAOQ,QAAA,CAASO,mBAAmB;cACnC4F,aAAA,EAAgB3G,KAAA,IAAU;gBAAA;gBAAAb,cAAA,GAAAoB,CAAA;gBAAApB,cAAA,GAAAC,CAAA;gBAAA,OAAAwC,iBAAA,CAAkB,uBAAuB5B,KAAA;cAAA;sCAEnE,IAAA6F,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAE,aAAa;0BACZ,iBAAArC,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAG,WAAW;+BAEd,IAAAtC,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAI,aAAa;0BACXlI,iBAAA,CAAkB6G,GAAG,CAAEwB,MAAA,IACtB;kBAAA;kBAAApJ,cAAA,GAAAoB,CAAA;kBAAApB,cAAA,GAAAC,CAAA;kBAAA,OADsB,aACtB,IAAAyG,WAAA,CAAAO,GAAA,EAAC4B,OAAA,CAAAM,UAAU;oBAAoBtI,KAAA,EAAOuI,MAAA,CAAOvI,KAAK;8BAC/CuI,MAAA,CAAOtI;qBADOsI,MAAA,CAAOvI,KAAK;gBAAA;;;2BASrC,IAAA6F,WAAA,CAAAO,GAAA,EAAC;YAAID,SAAA,EAAU;sBACb,iBAAAN,WAAA,CAAAC,IAAA,EAACqB,OAAA,CAAAC,MAAM;cACLC,IAAA,EAAK;cACLH,OAAA,EAAQ;cACRK,OAAA,EAASvD,cAAA;cACT+E,QAAA,EAAUvI,QAAA,CAASK,IAAI,CAAC4D,MAAM,KAAK;sCAEnC,IAAAoB,WAAA,CAAAO,GAAA,EAACC,YAAA,CAAA2C,UAAU;gBAAC7C,SAAA,EAAU;kBAAiB;;;UAM1C;UAAA,CAAAhH,cAAA,GAAAyB,CAAA,WAAAQ,gBAAA;UAAA;UAAA,CAAAjC,cAAA,GAAAyB,CAAA,wBACC,IAAAiF,WAAA,CAAAC,IAAA,EAAC6C,MAAA,CAAAC,KAAK;YAAC1B,OAAA,EAAS9F,gBAAA,CAAiB6H,QAAQ;YAAA;YAAA,CAAA9J,cAAA,GAAAyB,CAAA,WAAG;YAAA;YAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAY;oCACtD,IAAAiF,WAAA,CAAAO,GAAA,EAACC,YAAA,CAAA6C,WAAW;cAAC/C,SAAA,EAAU;6BACvB,IAAAN,WAAA,CAAAO,GAAA,EAACuC,MAAA,CAAAG,gBAAgB;wBACf,iBAAAjD,WAAA,CAAAC,IAAA,EAAC;gBAAIK,SAAA,EAAU;wCACb,IAAAN,WAAA,CAAAO,GAAA,EAAC;kBAAED,SAAA,EAAU;4BACV/E,gBAAA,CAAiB6H,QAAQ;kBAAA;kBAAA,CAAA9J,cAAA,GAAAyB,CAAA,WAAG;kBAAA;kBAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAS;oBAEvCQ,gBAAA,CAAiB+H,QAAQ,CAACpC,GAAG,CAAC,CAACqC,GAAA,EAAKlG,CAAA,KACnC;kBAAA;kBAAA/D,cAAA,GAAAoB,CAAA;kBAAApB,cAAA,GAAAC,CAAA;kBAAA,OADmC,aACnC,IAAAyG,WAAA,CAAAO,GAAA,EAAC;oBAAUD,SAAA,EAAU;8BAClBiD;qBADKlG,CAAA;gBAAA;;;;yBAUpB,IAAA2C,WAAA,CAAAC,IAAA,EAACW,KAAA,CAAAK,WAAW;UAAC9G,KAAA,EAAM;UAAWmG,SAAA,EAAU;kCACtC,IAAAN,WAAA,CAAAC,IAAA,EAAC6C,MAAA,CAAAC,KAAK;oCACJ,IAAA/C,WAAA,CAAAO,GAAA,EAACC,YAAA,CAAAgD,QAAQ;cAAClD,SAAA,EAAU;6BACpB,IAAAN,WAAA,CAAAO,GAAA,EAACuC,MAAA,CAAAG,gBAAgB;wBAAC;;2BAMpB,IAAAjD,WAAA,CAAAC,IAAA,EAAC;YAAIK,SAAA,EAAU;;YACZ;YAAA,CAAAhH,cAAA,GAAAyB,CAAA,YAACI,YAAA;YAAA;YAAA,CAAA7B,cAAA,GAAAyB,CAAA,wBACA,IAAAiF,WAAA,CAAAC,IAAA,EAACqB,OAAA,CAAAC,MAAM;cAACG,OAAA,EAASpE,kBAAA;cAAoBgD,SAAA,EAAU;cAAemB,IAAA,EAAK;sCACjE,IAAAzB,WAAA,CAAAO,GAAA,EAACC,YAAA,CAAAgD,QAAQ;gBAAClD,SAAA,EAAU;kBAAY;;YAKnC;YAAA,CAAAhH,cAAA,GAAAyB,CAAA,WAAAI,YAAA;YAAA;YAAA,CAAA7B,cAAA,GAAAyB,CAAA,wBACC,IAAAiF,WAAA,CAAAC,IAAA,EAAC;cAAIK,SAAA,EAAU;sCACb,IAAAN,WAAA,CAAAO,GAAA,EAAC;gBAAID,SAAA,EAAU;0BACb,iBAAAN,WAAA,CAAAO,GAAA,EAACC,YAAA,CAAAiD,OAAO;kBAACnD,SAAA,EAAU;;+BAErB,IAAAN,WAAA,CAAAO,GAAA,EAACmD,SAAA,CAAAC,QAAQ;gBAACxJ,KAAA,EAAOkB,kBAAA;gBAAoBiF,SAAA,EAAU;+BAC/C,IAAAN,WAAA,CAAAC,IAAA,EAAC;gBAAEK,SAAA,EAAU;;gBACV;gBAAA,CAAAhH,cAAA,GAAAyB,CAAA,WAAAM,kBAAA,GAAqB;gBAAA;gBAAA,CAAA/B,cAAA,GAAAyB,CAAA,WAAM;gBAC3B;gBAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAAM,kBAAA,IAAsB;gBAAA;gBAAA,CAAA/B,cAAA,GAAAyB,CAAA,WAAMM,kBAAA,GAAqB;gBAAA;gBAAA,CAAA/B,cAAA,GAAAyB,CAAA,WAAM;gBACvD;gBAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAAM,kBAAA,IAAsB;gBAAA;gBAAA,CAAA/B,cAAA,GAAAyB,CAAA,WAAMM,kBAAA,GAAqB;gBAAA;gBAAA,CAAA/B,cAAA,GAAAyB,CAAA,WAAM;gBACvD;gBAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAAM,kBAAA,IAAsB;gBAAA;gBAAA,CAAA/B,cAAA,GAAAyB,CAAA,WAAM;;;YAKlC;YAAA,CAAAzB,cAAA,GAAAyB,CAAA,WAAAU,MAAA,CAAOwC,UAAU;YAAA;YAAA,CAAA3E,cAAA,GAAAyB,CAAA,wBAChB,IAAAiF,WAAA,CAAAC,IAAA,EAAC6C,MAAA,CAAAC,KAAK;cAAC1B,OAAA,EAAQ;sCACb,IAAArB,WAAA,CAAAO,GAAA,EAACC,YAAA,CAAAwC,WAAW;gBAAC1C,SAAA,EAAU;+BACvB,IAAAN,WAAA,CAAAO,GAAA,EAACuC,MAAA,CAAAG,gBAAgB;0BAAExH,MAAA,CAAOwC;;;2BAKhC,IAAA+B,WAAA,CAAAC,IAAA,EAAC6C,MAAA,CAAAC,KAAK;oCACJ,IAAA/C,WAAA,CAAAO,GAAA,EAACC,YAAA,CAAAoD,IAAI;cAACtD,SAAA,EAAU;6BAChB,IAAAN,WAAA,CAAAO,GAAA,EAACuC,MAAA,CAAAG,gBAAgB;wBACf,iBAAAjD,WAAA,CAAAC,IAAA,EAAC;gBAAIK,SAAA,EAAU;wCACb,IAAAN,WAAA,CAAAO,GAAA,EAAC;kBAAED,SAAA,EAAU;4BAAc;iCAC3B,IAAAN,WAAA,CAAAC,IAAA,EAAC;kBAAGK,SAAA,EAAU;0CACZ,IAAAN,WAAA,CAAAO,GAAA,EAAC;8BAAG;mCACJ,IAAAP,WAAA,CAAAO,GAAA,EAAC;8BAAG;mCACJ,IAAAP,WAAA,CAAAO,GAAA,EAAC;8BAAG;mCACJ,IAAAP,WAAA,CAAAO,GAAA,EAAC;8BAAG;;;;;;;;;;AAUxB","ignoreList":[]}