5e0c74d150b4319272c1d8763b7533cc
'use client';
"use strict";

/* istanbul ignore next */
function cov_25xrn7djb2() {
  var path = "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/forms/schedule-form.tsx";
  var hash = "4e26309363aef5dfe0164d0b6cde627ec6725c92";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/forms/schedule-form.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 35
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "7": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "8": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 37
        }
      },
      "9": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "10": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "11": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 43
        }
      },
      "12": {
        start: {
          line: 21,
          column: 14
        },
        end: {
          line: 21,
          column: 35
        }
      },
      "13": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 39
        }
      },
      "14": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "15": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 47
        }
      },
      "16": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 51
        }
      },
      "17": {
        start: {
          line: 26,
          column: 39
        },
        end: {
          line: 26,
          column: 51
        }
      },
      "18": {
        start: {
          line: 27,
          column: 28
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "19": {
        start: {
          line: 28,
          column: 27
        },
        end: {
          line: 28,
          column: 40
        }
      },
      "20": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 20
        }
      },
      "21": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 66
        }
      },
      "22": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "23": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 19
        }
      },
      "24": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "25": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "26": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 53
        }
      },
      "27": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "28": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 30
        }
      },
      "29": {
        start: {
          line: 46,
          column: 17
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "30": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 49,
          column: 88
        }
      },
      "31": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "32": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "33": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 52,
          column: 95
        }
      },
      "34": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "35": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 57
        }
      },
      "36": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 39
        }
      },
      "37": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 25
        }
      },
      "38": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "39": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 31
        }
      },
      "40": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 18
        }
      },
      "41": {
        start: {
          line: 66,
          column: 25
        },
        end: {
          line: 83,
          column: 1
        }
      },
      "42": {
        start: {
          line: 84,
          column: 26
        },
        end: {
          line: 89,
          column: 1
        }
      },
      "43": {
        start: {
          line: 91,
          column: 36
        },
        end: {
          line: 97,
          column: 6
        }
      },
      "44": {
        start: {
          line: 98,
          column: 44
        },
        end: {
          line: 98,
          column: 71
        }
      },
      "45": {
        start: {
          line: 99,
          column: 56
        },
        end: {
          line: 99,
          column: 79
        }
      },
      "46": {
        start: {
          line: 100,
          column: 52
        },
        end: {
          line: 100,
          column: 78
        }
      },
      "47": {
        start: {
          line: 101,
          column: 32
        },
        end: {
          line: 101,
          column: 56
        }
      },
      "48": {
        start: {
          line: 102,
          column: 38
        },
        end: {
          line: 102,
          column: 65
        }
      },
      "49": {
        start: {
          line: 103,
          column: 48
        },
        end: {
          line: 103,
          column: 74
        }
      },
      "50": {
        start: {
          line: 104,
          column: 46
        },
        end: {
          line: 104,
          column: 77
        }
      },
      "51": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 112,
          column: 7
        }
      },
      "52": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "53": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 36
        }
      },
      "54": {
        start: {
          line: 113,
          column: 34
        },
        end: {
          line: 210,
          column: 5
        }
      },
      "55": {
        start: {
          line: 114,
          column: 22
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "56": {
        start: {
          line: 117,
          column: 24
        },
        end: {
          line: 120,
          column: 15
        }
      },
      "57": {
        start: {
          line: 117,
          column: 47
        },
        end: {
          line: 120,
          column: 13
        }
      },
      "58": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 125,
          column: 11
        }
      },
      "59": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 38
        }
      },
      "60": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 27
        }
      },
      "61": {
        start: {
          line: 127,
          column: 27
        },
        end: {
          line: 127,
          column: 36
        }
      },
      "62": {
        start: {
          line: 128,
          column: 28
        },
        end: {
          line: 128,
          column: 37
        }
      },
      "63": {
        start: {
          line: 129,
          column: 29
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "64": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 72
        }
      },
      "65": {
        start: {
          line: 130,
          column: 41
        },
        end: {
          line: 130,
          column: 72
        }
      },
      "66": {
        start: {
          line: 131,
          column: 32
        },
        end: {
          line: 131,
          column: 33
        }
      },
      "67": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 141,
          column: 15
        }
      },
      "68": {
        start: {
          line: 133,
          column: 33
        },
        end: {
          line: 133,
          column: 56
        }
      },
      "69": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 140,
          column: 17
        }
      },
      "70": {
        start: {
          line: 135,
          column: 39
        },
        end: {
          line: 135,
          column: 62
        }
      },
      "71": {
        start: {
          line: 136,
          column: 20
        },
        end: {
          line: 138,
          column: 21
        }
      },
      "72": {
        start: {
          line: 137,
          column: 24
        },
        end: {
          line: 137,
          column: 86
        }
      },
      "73": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 51
        }
      },
      "74": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 33
        }
      },
      "75": {
        start: {
          line: 145,
          column: 30
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "76": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 74
        }
      },
      "77": {
        start: {
          line: 146,
          column: 42
        },
        end: {
          line: 146,
          column: 74
        }
      },
      "78": {
        start: {
          line: 147,
          column: 26
        },
        end: {
          line: 147,
          column: 44
        }
      },
      "79": {
        start: {
          line: 148,
          column: 27
        },
        end: {
          line: 148,
          column: 48
        }
      },
      "80": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 45
        }
      },
      "81": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 26
        }
      },
      "82": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "83": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 32
        }
      },
      "84": {
        start: {
          line: 157,
          column: 30
        },
        end: {
          line: 157,
          column: 85
        }
      },
      "85": {
        start: {
          line: 157,
          column: 57
        },
        end: {
          line: 157,
          column: 83
        }
      },
      "86": {
        start: {
          line: 159,
          column: 26
        },
        end: {
          line: 159,
          column: 35
        }
      },
      "87": {
        start: {
          line: 160,
          column: 27
        },
        end: {
          line: 160,
          column: 36
        }
      },
      "88": {
        start: {
          line: 162,
          column: 36
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "89": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 72
        }
      },
      "90": {
        start: {
          line: 163,
          column: 41
        },
        end: {
          line: 163,
          column: 72
        }
      },
      "91": {
        start: {
          line: 165,
          column: 31
        },
        end: {
          line: 165,
          column: 96
        }
      },
      "92": {
        start: {
          line: 165,
          column: 49
        },
        end: {
          line: 165,
          column: 95
        }
      },
      "93": {
        start: {
          line: 165,
          column: 74
        },
        end: {
          line: 165,
          column: 94
        }
      },
      "94": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 170,
          column: 13
        }
      },
      "95": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 55
        }
      },
      "96": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 37
        }
      },
      "97": {
        start: {
          line: 171,
          column: 36
        },
        end: {
          line: 171,
          column: 49
        }
      },
      "98": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 178,
          column: 15
        }
      },
      "99": {
        start: {
          line: 173,
          column: 43
        },
        end: {
          line: 173,
          column: 72
        }
      },
      "100": {
        start: {
          line: 174,
          column: 28
        },
        end: {
          line: 174,
          column: 82
        }
      },
      "101": {
        start: {
          line: 174,
          column: 61
        },
        end: {
          line: 174,
          column: 81
        }
      },
      "102": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 177,
          column: 17
        }
      },
      "103": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 98
        }
      },
      "104": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 55
        }
      },
      "105": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 37
        }
      },
      "106": {
        start: {
          line: 182,
          column: 35
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "107": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 70
        }
      },
      "108": {
        start: {
          line: 183,
          column: 40
        },
        end: {
          line: 183,
          column: 70
        }
      },
      "109": {
        start: {
          line: 184,
          column: 27
        },
        end: {
          line: 184,
          column: 52
        }
      },
      "110": {
        start: {
          line: 185,
          column: 26
        },
        end: {
          line: 185,
          column: 48
        }
      },
      "111": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 42
        }
      },
      "112": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 25
        }
      },
      "113": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 192,
          column: 11
        }
      },
      "114": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 37
        }
      },
      "115": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 199,
          column: 11
        }
      },
      "116": {
        start: {
          line: 195,
          column: 23
        },
        end: {
          line: 195,
          column: 51
        }
      },
      "117": {
        start: {
          line: 196,
          column: 23
        },
        end: {
          line: 196,
          column: 50
        }
      },
      "118": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 33
        }
      },
      "119": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 49
        }
      },
      "120": {
        start: {
          line: 201,
          column: 35
        },
        end: {
          line: 201,
          column: 48
        }
      },
      "121": {
        start: {
          line: 202,
          column: 24
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "122": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 29
        }
      },
      "123": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 26
        }
      },
      "124": {
        start: {
          line: 211,
          column: 26
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "125": {
        start: {
          line: 212,
          column: 21
        },
        end: {
          line: 212,
          column: 38
        }
      },
      "126": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 44
        }
      },
      "127": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 48
        }
      },
      "128": {
        start: {
          line: 216,
          column: 30
        },
        end: {
          line: 233,
          column: 5
        }
      },
      "129": {
        start: {
          line: 217,
          column: 24
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "130": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 29
        }
      },
      "131": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 26
        }
      },
      "132": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "133": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 231,
          column: 15
        }
      },
      "134": {
        start: {
          line: 226,
          column: 34
        },
        end: {
          line: 228,
          column: 17
        }
      },
      "135": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 40
        }
      },
      "136": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 33
        }
      },
      "137": {
        start: {
          line: 234,
          column: 29
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "138": {
        start: {
          line: 235,
          column: 25
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "139": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 241,
          column: 10
        }
      },
      "140": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "141": {
        start: {
          line: 244,
          column: 26
        },
        end: {
          line: 244,
          column: 61
        }
      },
      "142": {
        start: {
          line: 245,
          column: 24
        },
        end: {
          line: 245,
          column: 57
        }
      },
      "143": {
        start: {
          line: 246,
          column: 29
        },
        end: {
          line: 246,
          column: 70
        }
      },
      "144": {
        start: {
          line: 247,
          column: 29
        },
        end: {
          line: 247,
          column: 72
        }
      },
      "145": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 48
        }
      },
      "146": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 45
        }
      },
      "147": {
        start: {
          line: 252,
          column: 20
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "148": {
        start: {
          line: 253,
          column: 27
        },
        end: {
          line: 253,
          column: 88
        }
      },
      "149": {
        start: {
          line: 253,
          column: 63
        },
        end: {
          line: 253,
          column: 80
        }
      },
      "150": {
        start: {
          line: 254,
          column: 22
        },
        end: {
          line: 254,
          column: 59
        }
      },
      "151": {
        start: {
          line: 255,
          column: 26
        },
        end: {
          line: 255,
          column: 62
        }
      },
      "152": {
        start: {
          line: 256,
          column: 29
        },
        end: {
          line: 256,
          column: 108
        }
      },
      "153": {
        start: {
          line: 256,
          column: 56
        },
        end: {
          line: 256,
          column: 100
        }
      },
      "154": {
        start: {
          line: 257,
          column: 24
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "155": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 275,
          column: 11
        }
      },
      "156": {
        start: {
          line: 277,
          column: 23
        },
        end: {
          line: 291,
          column: 5
        }
      },
      "157": {
        start: {
          line: 279,
          column: 30
        },
        end: {
          line: 281,
          column: 10
        }
      },
      "158": {
        start: {
          line: 282,
          column: 29
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "159": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 286,
          column: 15
        }
      },
      "160": {
        start: {
          line: 283,
          column: 39
        },
        end: {
          line: 283,
          column: 62
        }
      },
      "161": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 44
        }
      },
      "162": {
        start: {
          line: 285,
          column: 16
        },
        end: {
          line: 285,
          column: 39
        }
      },
      "163": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 29
        }
      },
      "164": {
        start: {
          line: 289,
          column: 25
        },
        end: {
          line: 289,
          column: 77
        }
      },
      "165": {
        start: {
          line: 289,
          column: 52
        },
        end: {
          line: 289,
          column: 76
        }
      },
      "166": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 45
        }
      },
      "167": {
        start: {
          line: 292,
          column: 26
        },
        end: {
          line: 304,
          column: 5
        }
      },
      "168": {
        start: {
          line: 293,
          column: 21
        },
        end: {
          line: 293,
          column: 46
        }
      },
      "169": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 26
        }
      },
      "170": {
        start: {
          line: 294,
          column: 19
        },
        end: {
          line: 294,
          column: 26
        }
      },
      "171": {
        start: {
          line: 295,
          column: 23
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "172": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "173": {
        start: {
          line: 305,
          column: 29
        },
        end: {
          line: 316,
          column: 5
        }
      },
      "174": {
        start: {
          line: 306,
          column: 21
        },
        end: {
          line: 306,
          column: 46
        }
      },
      "175": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 26
        }
      },
      "176": {
        start: {
          line: 307,
          column: 19
        },
        end: {
          line: 307,
          column: 26
        }
      },
      "177": {
        start: {
          line: 308,
          column: 24
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "178": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 314,
          column: 10
        }
      },
      "179": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 61
        }
      },
      "180": {
        start: {
          line: 317,
          column: 29
        },
        end: {
          line: 322,
          column: 5
        }
      },
      "181": {
        start: {
          line: 318,
          column: 21
        },
        end: {
          line: 318,
          column: 46
        }
      },
      "182": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 319,
          column: 26
        }
      },
      "183": {
        start: {
          line: 319,
          column: 19
        },
        end: {
          line: 319,
          column: 26
        }
      },
      "184": {
        start: {
          line: 320,
          column: 24
        },
        end: {
          line: 320,
          column: 72
        }
      },
      "185": {
        start: {
          line: 320,
          column: 57
        },
        end: {
          line: 320,
          column: 71
        }
      },
      "186": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 321,
          column: 61
        }
      },
      "187": {
        start: {
          line: 323,
          column: 29
        },
        end: {
          line: 331,
          column: 5
        }
      },
      "188": {
        start: {
          line: 324,
          column: 28
        },
        end: {
          line: 324,
          column: 50
        }
      },
      "189": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "190": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 39
        }
      },
      "191": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 36
        }
      },
      "192": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 38
        }
      },
      "193": {
        start: {
          line: 332,
          column: 31
        },
        end: {
          line: 364,
          column: 5
        }
      },
      "194": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 30
        }
      },
      "195": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 34
        }
      },
      "196": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 363,
          column: 9
        }
      },
      "197": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 38
        }
      },
      "198": {
        start: {
          line: 338,
          column: 29
        },
        end: {
          line: 340,
          column: 14
        }
      },
      "199": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 38
        }
      },
      "200": {
        start: {
          line: 343,
          column: 35
        },
        end: {
          line: 343,
          column: 75
        }
      },
      "201": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 38
        }
      },
      "202": {
        start: {
          line: 346,
          column: 28
        },
        end: {
          line: 349,
          column: 13
        }
      },
      "203": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 33
        }
      },
      "204": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 30
        }
      },
      "205": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 39
        }
      },
      "206": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 356,
          column: 21
        }
      },
      "207": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 354,
          column: 41
        }
      },
      "208": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 355,
          column: 36
        }
      },
      "209": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 360,
          column: 15
        }
      },
      "210": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 35
        }
      },
      "211": {
        start: {
          line: 365,
          column: 27
        },
        end: {
          line: 378,
          column: 5
        }
      },
      "212": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 377,
          column: 9
        }
      },
      "213": {
        start: {
          line: 367,
          column: 27
        },
        end: {
          line: 371,
          column: 14
        }
      },
      "214": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 40
        }
      },
      "215": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 376,
          column: 15
        }
      },
      "216": {
        start: {
          line: 379,
          column: 35
        },
        end: {
          line: 411,
          column: 5
        }
      },
      "217": {
        start: {
          line: 380,
          column: 22
        },
        end: {
          line: 380,
          column: 24
        }
      },
      "218": {
        start: {
          line: 381,
          column: 22
        },
        end: {
          line: 381,
          column: 41
        }
      },
      "219": {
        start: {
          line: 382,
          column: 26
        },
        end: {
          line: 382,
          column: 35
        }
      },
      "220": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 409,
          column: 9
        }
      },
      "221": {
        start: {
          line: 384,
          column: 29
        },
        end: {
          line: 384,
          column: 59
        }
      },
      "222": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 408,
          column: 13
        }
      },
      "223": {
        start: {
          line: 386,
          column: 32
        },
        end: {
          line: 386,
          column: 43
        }
      },
      "224": {
        start: {
          line: 387,
          column: 29
        },
        end: {
          line: 387,
          column: 40
        }
      },
      "225": {
        start: {
          line: 388,
          column: 30
        },
        end: {
          line: 388,
          column: 65
        }
      },
      "226": {
        start: {
          line: 389,
          column: 34
        },
        end: {
          line: 389,
          column: 75
        }
      },
      "227": {
        start: {
          line: 390,
          column: 33
        },
        end: {
          line: 390,
          column: 81
        }
      },
      "228": {
        start: {
          line: 391,
          column: 31
        },
        end: {
          line: 391,
          column: 67
        }
      },
      "229": {
        start: {
          line: 392,
          column: 16
        },
        end: {
          line: 392,
          column: 47
        }
      },
      "230": {
        start: {
          line: 393,
          column: 16
        },
        end: {
          line: 407,
          column: 19
        }
      },
      "231": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 21
        }
      },
      "232": {
        start: {
          line: 412,
          column: 25
        },
        end: {
          line: 432,
          column: 5
        }
      },
      "233": {
        start: {
          line: 413,
          column: 26
        },
        end: {
          line: 413,
          column: 28
        }
      },
      "234": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 416,
          column: 9
        }
      },
      "235": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 415,
          column: 52
        }
      },
      "236": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 424,
          column: 11
        }
      },
      "237": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 420,
          column: 13
        }
      },
      "238": {
        start: {
          line: 419,
          column: 16
        },
        end: {
          line: 419,
          column: 62
        }
      },
      "239": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 423,
          column: 13
        }
      },
      "240": {
        start: {
          line: 422,
          column: 16
        },
        end: {
          line: 422,
          column: 73
        }
      },
      "241": {
        start: {
          line: 426,
          column: 36
        },
        end: {
          line: 426,
          column: 59
        }
      },
      "242": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 429,
          column: 9
        }
      },
      "243": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 46
        }
      },
      "244": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 29
        }
      },
      "245": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 431,
          column: 51
        }
      },
      "246": {
        start: {
          line: 433,
          column: 34
        },
        end: {
          line: 458,
          column: 5
        }
      },
      "247": {
        start: {
          line: 434,
          column: 24
        },
        end: {
          line: 434,
          column: 33
        }
      },
      "248": {
        start: {
          line: 435,
          column: 31
        },
        end: {
          line: 435,
          column: 40
        }
      },
      "249": {
        start: {
          line: 436,
          column: 25
        },
        end: {
          line: 451,
          column: 9
        }
      },
      "250": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 32
        }
      },
      "251": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 438,
          column: 39
        }
      },
      "252": {
        start: {
          line: 439,
          column: 25
        },
        end: {
          line: 439,
          column: 66
        }
      },
      "253": {
        start: {
          line: 439,
          column: 50
        },
        end: {
          line: 439,
          column: 65
        }
      },
      "254": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 448,
          column: 13
        }
      },
      "255": {
        start: {
          line: 441,
          column: 16
        },
        end: {
          line: 447,
          column: 17
        }
      },
      "256": {
        start: {
          line: 442,
          column: 20
        },
        end: {
          line: 446,
          column: 21
        }
      },
      "257": {
        start: {
          line: 443,
          column: 24
        },
        end: {
          line: 443,
          column: 62
        }
      },
      "258": {
        start: {
          line: 443,
          column: 50
        },
        end: {
          line: 443,
          column: 62
        }
      },
      "259": {
        start: {
          line: 444,
          column: 27
        },
        end: {
          line: 446,
          column: 21
        }
      },
      "260": {
        start: {
          line: 445,
          column: 24
        },
        end: {
          line: 445,
          column: 36
        }
      },
      "261": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 449,
          column: 42
        }
      },
      "262": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 450,
          column: 25
        }
      },
      "263": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 456,
          column: 9
        }
      },
      "264": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 455,
          column: 13
        }
      },
      "265": {
        start: {
          line: 454,
          column: 16
        },
        end: {
          line: 454,
          column: 51
        }
      },
      "266": {
        start: {
          line: 454,
          column: 39
        },
        end: {
          line: 454,
          column: 51
        }
      },
      "267": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 457,
          column: 21
        }
      },
      "268": {
        start: {
          line: 460,
          column: 24
        },
        end: {
          line: 477,
          column: 6
        }
      },
      "269": {
        start: {
          line: 461,
          column: 23
        },
        end: {
          line: 461,
          column: 25
        }
      },
      "270": {
        start: {
          line: 462,
          column: 35
        },
        end: {
          line: 471,
          column: 9
        }
      },
      "271": {
        start: {
          line: 463,
          column: 29
        },
        end: {
          line: 463,
          column: 80
        }
      },
      "272": {
        start: {
          line: 463,
          column: 56
        },
        end: {
          line: 463,
          column: 79
        }
      },
      "273": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 464,
          column: 70
        }
      },
      "274": {
        start: {
          line: 464,
          column: 34
        },
        end: {
          line: 464,
          column: 68
        }
      },
      "275": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 470,
          column: 15
        }
      },
      "276": {
        start: {
          line: 466,
          column: 16
        },
        end: {
          line: 466,
          column: 34
        }
      },
      "277": {
        start: {
          line: 467,
          column: 16
        },
        end: {
          line: 469,
          column: 17
        }
      },
      "278": {
        start: {
          line: 468,
          column: 20
        },
        end: {
          line: 468,
          column: 48
        }
      },
      "279": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 472,
          column: 38
        }
      },
      "280": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 473,
          column: 22
        }
      },
      "281": {
        start: {
          line: 478,
          column: 4
        },
        end: {
          line: 1035,
          column: 7
        }
      },
      "282": {
        start: {
          line: 535,
          column: 67
        },
        end: {
          line: 535,
          column: 120
        }
      },
      "283": {
        start: {
          line: 585,
          column: 65
        },
        end: {
          line: 585,
          column: 74
        }
      },
      "284": {
        start: {
          line: 599,
          column: 70
        },
        end: {
          line: 599,
          column: 117
        }
      },
      "285": {
        start: {
          line: 599,
          column: 100
        },
        end: {
          line: 599,
          column: 116
        }
      },
      "286": {
        start: {
          line: 600,
          column: 68
        },
        end: {
          line: 600,
          column: 116
        }
      },
      "287": {
        start: {
          line: 600,
          column: 93
        },
        end: {
          line: 600,
          column: 115
        }
      },
      "288": {
        start: {
          line: 601,
          column: 67
        },
        end: {
          line: 601,
          column: 93
        }
      },
      "289": {
        start: {
          line: 602,
          column: 48
        },
        end: {
          line: 815,
          column: 60
        }
      },
      "290": {
        start: {
          line: 620,
          column: 93
        },
        end: {
          line: 620,
          column: 118
        }
      },
      "291": {
        start: {
          line: 646,
          column: 99
        },
        end: {
          line: 646,
          column: 154
        }
      },
      "292": {
        start: {
          line: 655,
          column: 99
        },
        end: {
          line: 655,
          column: 159
        }
      },
      "293": {
        start: {
          line: 663,
          column: 99
        },
        end: {
          line: 663,
          column: 157
        }
      },
      "294": {
        start: {
          line: 673,
          column: 103
        },
        end: {
          line: 673,
          column: 177
        }
      },
      "295": {
        start: {
          line: 700,
          column: 101
        },
        end: {
          line: 700,
          column: 117
        }
      },
      "296": {
        start: {
          line: 709,
          column: 101
        },
        end: {
          line: 709,
          column: 120
        }
      },
      "297": {
        start: {
          line: 729,
          column: 125
        },
        end: {
          line: 786,
          column: 88
        }
      },
      "298": {
        start: {
          line: 734,
          column: 112
        },
        end: {
          line: 734,
          column: 170
        }
      },
      "299": {
        start: {
          line: 743,
          column: 133
        },
        end: {
          line: 743,
          column: 149
        }
      },
      "300": {
        start: {
          line: 743,
          column: 174
        },
        end: {
          line: 750,
          column: 108
        }
      },
      "301": {
        start: {
          line: 756,
          column: 112
        },
        end: {
          line: 756,
          column: 168
        }
      },
      "302": {
        start: {
          line: 763,
          column: 149
        },
        end: {
          line: 766,
          column: 114
        }
      },
      "303": {
        start: {
          line: 773,
          column: 103
        },
        end: {
          line: 773,
          column: 182
        }
      },
      "304": {
        start: {
          line: 780,
          column: 101
        },
        end: {
          line: 780,
          column: 142
        }
      },
      "305": {
        start: {
          line: 790,
          column: 89
        },
        end: {
          line: 790,
          column: 117
        }
      },
      "306": {
        start: {
          line: 805,
          column: 77
        },
        end: {
          line: 805,
          column: 139
        }
      },
      "307": {
        start: {
          line: 842,
          column: 57
        },
        end: {
          line: 842,
          column: 71
        }
      },
      "308": {
        start: {
          line: 855,
          column: 89
        },
        end: {
          line: 855,
          column: 103
        }
      },
      "309": {
        start: {
          line: 855,
          column: 128
        },
        end: {
          line: 862,
          column: 64
        }
      },
      "310": {
        start: {
          line: 901,
          column: 106
        },
        end: {
          line: 904,
          column: 61
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 29,
            column: 40
          }
        },
        loc: {
          start: {
            line: 29,
            column: 61
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 33,
            column: 9
          },
          end: {
            line: 33,
            column: 34
          }
        },
        loc: {
          start: {
            line: 33,
            column: 53
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 33
      },
      "4": {
        name: "ScheduleForm",
        decl: {
          start: {
            line: 90,
            column: 9
          },
          end: {
            line: 90,
            column: 21
          }
        },
        loc: {
          start: {
            line: 90,
            column: 69
          },
          end: {
            line: 1036,
            column: 1
          }
        },
        line: 90
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 106,
            column: 26
          },
          end: {
            line: 106,
            column: 27
          }
        },
        loc: {
          start: {
            line: 106,
            column: 30
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 106
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 113,
            column: 34
          },
          end: {
            line: 113,
            column: 35
          }
        },
        loc: {
          start: {
            line: 113,
            column: 38
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 113
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 117,
            column: 42
          },
          end: {
            line: 117,
            column: 43
          }
        },
        loc: {
          start: {
            line: 117,
            column: 47
          },
          end: {
            line: 120,
            column: 13
          }
        },
        line: 117
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 122,
            column: 22
          },
          end: {
            line: 122,
            column: 23
          }
        },
        loc: {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 125,
            column: 9
          }
        },
        line: 122
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 129,
            column: 29
          },
          end: {
            line: 129,
            column: 30
          }
        },
        loc: {
          start: {
            line: 129,
            column: 37
          },
          end: {
            line: 144,
            column: 9
          }
        },
        line: 129
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 132,
            column: 38
          },
          end: {
            line: 132,
            column: 39
          }
        },
        loc: {
          start: {
            line: 132,
            column: 45
          },
          end: {
            line: 141,
            column: 13
          }
        },
        line: 132
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 145,
            column: 30
          },
          end: {
            line: 145,
            column: 31
          }
        },
        loc: {
          start: {
            line: 145,
            column: 38
          },
          end: {
            line: 151,
            column: 9
          }
        },
        line: 145
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 153,
            column: 22
          },
          end: {
            line: 153,
            column: 23
          }
        },
        loc: {
          start: {
            line: 153,
            column: 30
          },
          end: {
            line: 155,
            column: 9
          }
        },
        line: 153
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 157,
            column: 52
          },
          end: {
            line: 157,
            column: 53
          }
        },
        loc: {
          start: {
            line: 157,
            column: 57
          },
          end: {
            line: 157,
            column: 83
          }
        },
        line: 157
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 162,
            column: 36
          },
          end: {
            line: 162,
            column: 37
          }
        },
        loc: {
          start: {
            line: 162,
            column: 44
          },
          end: {
            line: 181,
            column: 9
          }
        },
        line: 162
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 165,
            column: 44
          },
          end: {
            line: 165,
            column: 45
          }
        },
        loc: {
          start: {
            line: 165,
            column: 49
          },
          end: {
            line: 165,
            column: 95
          }
        },
        line: 165
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 165,
            column: 69
          },
          end: {
            line: 165,
            column: 70
          }
        },
        loc: {
          start: {
            line: 165,
            column: 74
          },
          end: {
            line: 165,
            column: 94
          }
        },
        line: 165
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 172,
            column: 31
          },
          end: {
            line: 172,
            column: 32
          }
        },
        loc: {
          start: {
            line: 172,
            column: 44
          },
          end: {
            line: 178,
            column: 13
          }
        },
        line: 172
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 174,
            column: 56
          },
          end: {
            line: 174,
            column: 57
          }
        },
        loc: {
          start: {
            line: 174,
            column: 61
          },
          end: {
            line: 174,
            column: 81
          }
        },
        line: 174
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 182,
            column: 35
          },
          end: {
            line: 182,
            column: 36
          }
        },
        loc: {
          start: {
            line: 182,
            column: 43
          },
          end: {
            line: 188,
            column: 9
          }
        },
        line: 182
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 190,
            column: 22
          },
          end: {
            line: 190,
            column: 23
          }
        },
        loc: {
          start: {
            line: 190,
            column: 30
          },
          end: {
            line: 192,
            column: 9
          }
        },
        line: 190
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 194,
            column: 22
          },
          end: {
            line: 194,
            column: 23
          }
        },
        loc: {
          start: {
            line: 194,
            column: 30
          },
          end: {
            line: 199,
            column: 9
          }
        },
        line: 194
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 211,
            column: 26
          },
          end: {
            line: 211,
            column: 27
          }
        },
        loc: {
          start: {
            line: 211,
            column: 43
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 211
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 216,
            column: 30
          },
          end: {
            line: 216,
            column: 31
          }
        },
        loc: {
          start: {
            line: 216,
            column: 46
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 216
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 225,
            column: 22
          },
          end: {
            line: 225,
            column: 23
          }
        },
        loc: {
          start: {
            line: 225,
            column: 30
          },
          end: {
            line: 231,
            column: 13
          }
        },
        line: 225
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 234,
            column: 29
          },
          end: {
            line: 234,
            column: 30
          }
        },
        loc: {
          start: {
            line: 234,
            column: 52
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 234
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 252,
            column: 20
          },
          end: {
            line: 252,
            column: 21
          }
        },
        loc: {
          start: {
            line: 252,
            column: 32
          },
          end: {
            line: 276,
            column: 5
          }
        },
        line: 252
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 253,
            column: 58
          },
          end: {
            line: 253,
            column: 59
          }
        },
        loc: {
          start: {
            line: 253,
            column: 63
          },
          end: {
            line: 253,
            column: 80
          }
        },
        line: 253
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 256,
            column: 51
          },
          end: {
            line: 256,
            column: 52
          }
        },
        loc: {
          start: {
            line: 256,
            column: 56
          },
          end: {
            line: 256,
            column: 100
          }
        },
        line: 256
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 277,
            column: 23
          },
          end: {
            line: 277,
            column: 24
          }
        },
        loc: {
          start: {
            line: 277,
            column: 33
          },
          end: {
            line: 291,
            column: 5
          }
        },
        line: 277
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 282,
            column: 29
          },
          end: {
            line: 282,
            column: 30
          }
        },
        loc: {
          start: {
            line: 282,
            column: 41
          },
          end: {
            line: 287,
            column: 9
          }
        },
        line: 282
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 283,
            column: 34
          },
          end: {
            line: 283,
            column: 35
          }
        },
        loc: {
          start: {
            line: 283,
            column: 39
          },
          end: {
            line: 283,
            column: 62
          }
        },
        line: 283
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 283,
            column: 72
          },
          end: {
            line: 283,
            column: 73
          }
        },
        loc: {
          start: {
            line: 283,
            column: 81
          },
          end: {
            line: 286,
            column: 13
          }
        },
        line: 283
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 289,
            column: 47
          },
          end: {
            line: 289,
            column: 48
          }
        },
        loc: {
          start: {
            line: 289,
            column: 52
          },
          end: {
            line: 289,
            column: 76
          }
        },
        line: 289
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 292,
            column: 26
          },
          end: {
            line: 292,
            column: 27
          }
        },
        loc: {
          start: {
            line: 292,
            column: 39
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 292
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 305,
            column: 29
          },
          end: {
            line: 305,
            column: 30
          }
        },
        loc: {
          start: {
            line: 305,
            column: 66
          },
          end: {
            line: 316,
            column: 5
          }
        },
        line: 305
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 317,
            column: 29
          },
          end: {
            line: 317,
            column: 30
          }
        },
        loc: {
          start: {
            line: 317,
            column: 52
          },
          end: {
            line: 322,
            column: 5
          }
        },
        line: 317
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 320,
            column: 49
          },
          end: {
            line: 320,
            column: 50
          }
        },
        loc: {
          start: {
            line: 320,
            column: 57
          },
          end: {
            line: 320,
            column: 71
          }
        },
        line: 320
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 323,
            column: 29
          },
          end: {
            line: 323,
            column: 30
          }
        },
        loc: {
          start: {
            line: 323,
            column: 39
          },
          end: {
            line: 331,
            column: 5
          }
        },
        line: 323
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 332,
            column: 31
          },
          end: {
            line: 332,
            column: 32
          }
        },
        loc: {
          start: {
            line: 332,
            column: 41
          },
          end: {
            line: 364,
            column: 5
          }
        },
        line: 332
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 353,
            column: 23
          },
          end: {
            line: 353,
            column: 24
          }
        },
        loc: {
          start: {
            line: 353,
            column: 27
          },
          end: {
            line: 356,
            column: 13
          }
        },
        line: 353
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 365,
            column: 27
          },
          end: {
            line: 365,
            column: 28
          }
        },
        loc: {
          start: {
            line: 365,
            column: 37
          },
          end: {
            line: 378,
            column: 5
          }
        },
        line: 365
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 379,
            column: 35
          },
          end: {
            line: 379,
            column: 36
          }
        },
        loc: {
          start: {
            line: 379,
            column: 46
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 379
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 412,
            column: 25
          },
          end: {
            line: 412,
            column: 26
          }
        },
        loc: {
          start: {
            line: 412,
            column: 29
          },
          end: {
            line: 432,
            column: 5
          }
        },
        line: 412
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 417,
            column: 31
          },
          end: {
            line: 417,
            column: 32
          }
        },
        loc: {
          start: {
            line: 417,
            column: 46
          },
          end: {
            line: 424,
            column: 9
          }
        },
        line: 417
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 433,
            column: 34
          },
          end: {
            line: 433,
            column: 35
          }
        },
        loc: {
          start: {
            line: 433,
            column: 38
          },
          end: {
            line: 458,
            column: 5
          }
        },
        line: 433
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 436,
            column: 25
          },
          end: {
            line: 436,
            column: 26
          }
        },
        loc: {
          start: {
            line: 436,
            column: 35
          },
          end: {
            line: 451,
            column: 9
          }
        },
        line: 436
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 439,
            column: 45
          },
          end: {
            line: 439,
            column: 46
          }
        },
        loc: {
          start: {
            line: 439,
            column: 50
          },
          end: {
            line: 439,
            column: 65
          }
        },
        line: 439
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 460,
            column: 44
          },
          end: {
            line: 460,
            column: 45
          }
        },
        loc: {
          start: {
            line: 460,
            column: 48
          },
          end: {
            line: 474,
            column: 5
          }
        },
        line: 460
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 462,
            column: 35
          },
          end: {
            line: 462,
            column: 36
          }
        },
        loc: {
          start: {
            line: 462,
            column: 47
          },
          end: {
            line: 471,
            column: 9
          }
        },
        line: 462
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 463,
            column: 51
          },
          end: {
            line: 463,
            column: 52
          }
        },
        loc: {
          start: {
            line: 463,
            column: 56
          },
          end: {
            line: 463,
            column: 79
          }
        },
        line: 463
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 464,
            column: 26
          },
          end: {
            line: 464,
            column: 27
          }
        },
        loc: {
          start: {
            line: 464,
            column: 34
          },
          end: {
            line: 464,
            column: 68
          }
        },
        line: 464
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 465,
            column: 29
          },
          end: {
            line: 465,
            column: 30
          }
        },
        loc: {
          start: {
            line: 465,
            column: 37
          },
          end: {
            line: 470,
            column: 13
          }
        },
        line: 465
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 535,
            column: 62
          },
          end: {
            line: 535,
            column: 63
          }
        },
        loc: {
          start: {
            line: 535,
            column: 67
          },
          end: {
            line: 535,
            column: 120
          }
        },
        line: 535
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 585,
            column: 61
          },
          end: {
            line: 585,
            column: 62
          }
        },
        loc: {
          start: {
            line: 585,
            column: 65
          },
          end: {
            line: 585,
            column: 74
          }
        },
        line: 585
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 598,
            column: 70
          },
          end: {
            line: 598,
            column: 71
          }
        },
        loc: {
          start: {
            line: 598,
            column: 85
          },
          end: {
            line: 816,
            column: 45
          }
        },
        line: 598
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 599,
            column: 95
          },
          end: {
            line: 599,
            column: 96
          }
        },
        loc: {
          start: {
            line: 599,
            column: 100
          },
          end: {
            line: 599,
            column: 116
          }
        },
        line: 599
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 600,
            column: 88
          },
          end: {
            line: 600,
            column: 89
          }
        },
        loc: {
          start: {
            line: 600,
            column: 93
          },
          end: {
            line: 600,
            column: 115
          }
        },
        line: 600
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 620,
            column: 89
          },
          end: {
            line: 620,
            column: 90
          }
        },
        loc: {
          start: {
            line: 620,
            column: 93
          },
          end: {
            line: 620,
            column: 118
          }
        },
        line: 620
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 646,
            column: 94
          },
          end: {
            line: 646,
            column: 95
          }
        },
        loc: {
          start: {
            line: 646,
            column: 99
          },
          end: {
            line: 646,
            column: 154
          }
        },
        line: 646
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 655,
            column: 94
          },
          end: {
            line: 655,
            column: 95
          }
        },
        loc: {
          start: {
            line: 655,
            column: 99
          },
          end: {
            line: 655,
            column: 159
          }
        },
        line: 655
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 663,
            column: 94
          },
          end: {
            line: 663,
            column: 95
          }
        },
        loc: {
          start: {
            line: 663,
            column: 99
          },
          end: {
            line: 663,
            column: 157
          }
        },
        line: 663
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 673,
            column: 98
          },
          end: {
            line: 673,
            column: 99
          }
        },
        loc: {
          start: {
            line: 673,
            column: 103
          },
          end: {
            line: 673,
            column: 177
          }
        },
        line: 673
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 700,
            column: 97
          },
          end: {
            line: 700,
            column: 98
          }
        },
        loc: {
          start: {
            line: 700,
            column: 101
          },
          end: {
            line: 700,
            column: 117
          }
        },
        line: 700
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 709,
            column: 97
          },
          end: {
            line: 709,
            column: 98
          }
        },
        loc: {
          start: {
            line: 709,
            column: 101
          },
          end: {
            line: 709,
            column: 120
          }
        },
        line: 709
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 729,
            column: 94
          },
          end: {
            line: 729,
            column: 95
          }
        },
        loc: {
          start: {
            line: 729,
            column: 125
          },
          end: {
            line: 786,
            column: 88
          }
        },
        line: 729
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 734,
            column: 103
          },
          end: {
            line: 734,
            column: 104
          }
        },
        loc: {
          start: {
            line: 734,
            column: 112
          },
          end: {
            line: 734,
            column: 170
          }
        },
        line: 734
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 743,
            column: 128
          },
          end: {
            line: 743,
            column: 129
          }
        },
        loc: {
          start: {
            line: 743,
            column: 133
          },
          end: {
            line: 743,
            column: 149
          }
        },
        line: 743
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 743,
            column: 155
          },
          end: {
            line: 743,
            column: 156
          }
        },
        loc: {
          start: {
            line: 743,
            column: 174
          },
          end: {
            line: 750,
            column: 108
          }
        },
        line: 743
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 756,
            column: 103
          },
          end: {
            line: 756,
            column: 104
          }
        },
        loc: {
          start: {
            line: 756,
            column: 112
          },
          end: {
            line: 756,
            column: 168
          }
        },
        line: 756
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 763,
            column: 127
          },
          end: {
            line: 763,
            column: 128
          }
        },
        loc: {
          start: {
            line: 763,
            column: 149
          },
          end: {
            line: 766,
            column: 114
          }
        },
        line: 763
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 773,
            column: 98
          },
          end: {
            line: 773,
            column: 99
          }
        },
        loc: {
          start: {
            line: 773,
            column: 103
          },
          end: {
            line: 773,
            column: 182
          }
        },
        line: 773
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 780,
            column: 97
          },
          end: {
            line: 780,
            column: 98
          }
        },
        loc: {
          start: {
            line: 780,
            column: 101
          },
          end: {
            line: 780,
            column: 142
          }
        },
        line: 780
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 790,
            column: 85
          },
          end: {
            line: 790,
            column: 86
          }
        },
        loc: {
          start: {
            line: 790,
            column: 89
          },
          end: {
            line: 790,
            column: 117
          }
        },
        line: 790
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 805,
            column: 73
          },
          end: {
            line: 805,
            column: 74
          }
        },
        loc: {
          start: {
            line: 805,
            column: 77
          },
          end: {
            line: 805,
            column: 139
          }
        },
        line: 805
      },
      "75": {
        name: "(anonymous_75)",
        decl: {
          start: {
            line: 842,
            column: 52
          },
          end: {
            line: 842,
            column: 53
          }
        },
        loc: {
          start: {
            line: 842,
            column: 57
          },
          end: {
            line: 842,
            column: 71
          }
        },
        line: 842
      },
      "76": {
        name: "(anonymous_76)",
        decl: {
          start: {
            line: 855,
            column: 84
          },
          end: {
            line: 855,
            column: 85
          }
        },
        loc: {
          start: {
            line: 855,
            column: 89
          },
          end: {
            line: 855,
            column: 103
          }
        },
        line: 855
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 855,
            column: 109
          },
          end: {
            line: 855,
            column: 110
          }
        },
        loc: {
          start: {
            line: 855,
            column: 128
          },
          end: {
            line: 862,
            column: 64
          }
        },
        line: 855
      },
      "78": {
        name: "(anonymous_78)",
        decl: {
          start: {
            line: 901,
            column: 82
          },
          end: {
            line: 901,
            column: 83
          }
        },
        loc: {
          start: {
            line: 901,
            column: 106
          },
          end: {
            line: 904,
            column: 61
          }
        },
        line: 901
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 30,
            column: 45
          }
        }, {
          start: {
            line: 30,
            column: 48
          },
          end: {
            line: 30,
            column: 65
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 20
          }
        }, {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 27
          }
        }, {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 34,
            column: 45
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 20
          }
        }, {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 47
          }
        }, {
          start: {
            line: 37,
            column: 51
          },
          end: {
            line: 37,
            column: 76
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "7": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 31
          }
        }],
        line: 43
      },
      "8": {
        loc: {
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 53
          }
        }, {
          start: {
            line: 49,
            column: 57
          },
          end: {
            line: 49,
            column: 88
          }
        }],
        line: 49
      },
      "9": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "10": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 29
          }
        }, {
          start: {
            line: 51,
            column: 33
          },
          end: {
            line: 51,
            column: 79
          }
        }],
        line: 51
      },
      "11": {
        loc: {
          start: {
            line: 52,
            column: 23
          },
          end: {
            line: 52,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 47
          },
          end: {
            line: 52,
            column: 88
          }
        }, {
          start: {
            line: 52,
            column: 91
          },
          end: {
            line: 52,
            column: 95
          }
        }],
        line: 52
      },
      "12": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: 55,
            column: 19
          },
          end: {
            line: 57,
            column: 13
          }
        }],
        line: 53
      },
      "13": {
        loc: {
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 20
          }
        }, {
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 53,
            column: 33
          }
        }, {
          start: {
            line: 53,
            column: 37
          },
          end: {
            line: 53,
            column: 45
          }
        }],
        line: 53
      },
      "14": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "15": {
        loc: {
          start: {
            line: 91,
            column: 57
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 57
          },
          end: {
            line: 91,
            column: 61
          }
        }, {
          start: {
            line: 91,
            column: 65
          },
          end: {
            line: 97,
            column: 5
          }
        }],
        line: 91
      },
      "16": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "17": {
        loc: {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 130,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 130,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "18": {
        loc: {
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 140,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 140,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "19": {
        loc: {
          start: {
            line: 136,
            column: 20
          },
          end: {
            line: 138,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 20
          },
          end: {
            line: 138,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "20": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 146,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 146,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "21": {
        loc: {
          start: {
            line: 157,
            column: 57
          },
          end: {
            line: 157,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 57
          },
          end: {
            line: 157,
            column: 78
          }
        }, {
          start: {
            line: 157,
            column: 82
          },
          end: {
            line: 157,
            column: 83
          }
        }],
        line: 157
      },
      "22": {
        loc: {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 163,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 163,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "23": {
        loc: {
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "24": {
        loc: {
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 177,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 177,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "25": {
        loc: {
          start: {
            line: 175,
            column: 20
          },
          end: {
            line: 175,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 20
          },
          end: {
            line: 175,
            column: 23
          }
        }, {
          start: {
            line: 175,
            column: 27
          },
          end: {
            line: 175,
            column: 44
          }
        }],
        line: 175
      },
      "26": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "27": {
        loc: {
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 195,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 195,
            column: 46
          }
        }, {
          start: {
            line: 195,
            column: 50
          },
          end: {
            line: 195,
            column: 51
          }
        }],
        line: 195
      },
      "28": {
        loc: {
          start: {
            line: 196,
            column: 23
          },
          end: {
            line: 196,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 23
          },
          end: {
            line: 196,
            column: 45
          }
        }, {
          start: {
            line: 196,
            column: 49
          },
          end: {
            line: 196,
            column: 50
          }
        }],
        line: 196
      },
      "29": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "30": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "31": {
        loc: {
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 243,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 243,
            column: 33
          }
        }, {
          start: {
            line: 243,
            column: 37
          },
          end: {
            line: 243,
            column: 56
          }
        }],
        line: 243
      },
      "32": {
        loc: {
          start: {
            line: 253,
            column: 27
          },
          end: {
            line: 253,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 253,
            column: 38
          },
          end: {
            line: 253,
            column: 81
          }
        }, {
          start: {
            line: 253,
            column: 84
          },
          end: {
            line: 253,
            column: 88
          }
        }],
        line: 253
      },
      "33": {
        loc: {
          start: {
            line: 254,
            column: 22
          },
          end: {
            line: 254,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 254,
            column: 35
          },
          end: {
            line: 254,
            column: 55
          }
        }, {
          start: {
            line: 254,
            column: 58
          },
          end: {
            line: 254,
            column: 59
          }
        }],
        line: 254
      },
      "34": {
        loc: {
          start: {
            line: 255,
            column: 26
          },
          end: {
            line: 255,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 255,
            column: 39
          },
          end: {
            line: 255,
            column: 57
          }
        }, {
          start: {
            line: 255,
            column: 60
          },
          end: {
            line: 255,
            column: 62
          }
        }],
        line: 255
      },
      "35": {
        loc: {
          start: {
            line: 256,
            column: 56
          },
          end: {
            line: 256,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 56
          },
          end: {
            line: 256,
            column: 79
          }
        }, {
          start: {
            line: 256,
            column: 83
          },
          end: {
            line: 256,
            column: 100
          }
        }],
        line: 256
      },
      "36": {
        loc: {
          start: {
            line: 259,
            column: 21
          },
          end: {
            line: 259,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 259,
            column: 33
          },
          end: {
            line: 259,
            column: 67
          }
        }, {
          start: {
            line: 259,
            column: 70
          },
          end: {
            line: 259,
            column: 91
          }
        }],
        line: 259
      },
      "37": {
        loc: {
          start: {
            line: 261,
            column: 23
          },
          end: {
            line: 261,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 23
          },
          end: {
            line: 261,
            column: 48
          }
        }, {
          start: {
            line: 261,
            column: 52
          },
          end: {
            line: 261,
            column: 90
          }
        }],
        line: 261
      },
      "38": {
        loc: {
          start: {
            line: 262,
            column: 35
          },
          end: {
            line: 262,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 35
          },
          end: {
            line: 262,
            column: 60
          }
        }, {
          start: {
            line: 262,
            column: 64
          },
          end: {
            line: 262,
            column: 102
          }
        }],
        line: 262
      },
      "39": {
        loc: {
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 294,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 294,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "40": {
        loc: {
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 307,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 307,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "41": {
        loc: {
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 319,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 319,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      },
      "42": {
        loc: {
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        }, {
          start: {
            line: 327,
            column: 15
          },
          end: {
            line: 329,
            column: 9
          }
        }],
        line: 325
      },
      "43": {
        loc: {
          start: {
            line: 359,
            column: 28
          },
          end: {
            line: 359,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 359,
            column: 28
          },
          end: {
            line: 359,
            column: 41
          }
        }, {
          start: {
            line: 359,
            column: 45
          },
          end: {
            line: 359,
            column: 62
          }
        }],
        line: 359
      },
      "44": {
        loc: {
          start: {
            line: 375,
            column: 28
          },
          end: {
            line: 375,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 375,
            column: 28
          },
          end: {
            line: 375,
            column: 41
          }
        }, {
          start: {
            line: 375,
            column: 45
          },
          end: {
            line: 375,
            column: 56
          }
        }],
        line: 375
      },
      "45": {
        loc: {
          start: {
            line: 385,
            column: 12
          },
          end: {
            line: 408,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 385,
            column: 12
          },
          end: {
            line: 408,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 385
      },
      "46": {
        loc: {
          start: {
            line: 388,
            column: 31
          },
          end: {
            line: 388,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 388,
            column: 31
          },
          end: {
            line: 388,
            column: 51
          }
        }, {
          start: {
            line: 388,
            column: 55
          },
          end: {
            line: 388,
            column: 57
          }
        }],
        line: 388
      },
      "47": {
        loc: {
          start: {
            line: 390,
            column: 33
          },
          end: {
            line: 390,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 390,
            column: 45
          },
          end: {
            line: 390,
            column: 69
          }
        }, {
          start: {
            line: 390,
            column: 72
          },
          end: {
            line: 390,
            column: 81
          }
        }],
        line: 390
      },
      "48": {
        loc: {
          start: {
            line: 397,
            column: 31
          },
          end: {
            line: 397,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 397,
            column: 31
          },
          end: {
            line: 397,
            column: 56
          }
        }, {
          start: {
            line: 397,
            column: 60
          },
          end: {
            line: 397,
            column: 98
          }
        }],
        line: 397
      },
      "49": {
        loc: {
          start: {
            line: 398,
            column: 43
          },
          end: {
            line: 398,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 398,
            column: 43
          },
          end: {
            line: 398,
            column: 68
          }
        }, {
          start: {
            line: 398,
            column: 72
          },
          end: {
            line: 398,
            column: 110
          }
        }],
        line: 398
      },
      "50": {
        loc: {
          start: {
            line: 402,
            column: 31
          },
          end: {
            line: 402,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 402,
            column: 31
          },
          end: {
            line: 402,
            column: 55
          }
        }, {
          start: {
            line: 402,
            column: 59
          },
          end: {
            line: 402,
            column: 82
          }
        }],
        line: 402
      },
      "51": {
        loc: {
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 416,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 416,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 414
      },
      "52": {
        loc: {
          start: {
            line: 414,
            column: 12
          },
          end: {
            line: 414,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 414,
            column: 12
          },
          end: {
            line: 414,
            column: 27
          }
        }, {
          start: {
            line: 414,
            column: 31
          },
          end: {
            line: 414,
            column: 58
          }
        }],
        line: 414
      },
      "53": {
        loc: {
          start: {
            line: 418,
            column: 12
          },
          end: {
            line: 420,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 12
          },
          end: {
            line: 420,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "54": {
        loc: {
          start: {
            line: 421,
            column: 12
          },
          end: {
            line: 423,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 12
          },
          end: {
            line: 423,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "55": {
        loc: {
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 429,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 429,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "56": {
        loc: {
          start: {
            line: 440,
            column: 12
          },
          end: {
            line: 448,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 12
          },
          end: {
            line: 448,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "57": {
        loc: {
          start: {
            line: 442,
            column: 20
          },
          end: {
            line: 446,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 20
          },
          end: {
            line: 446,
            column: 21
          }
        }, {
          start: {
            line: 444,
            column: 27
          },
          end: {
            line: 446,
            column: 21
          }
        }],
        line: 442
      },
      "58": {
        loc: {
          start: {
            line: 443,
            column: 24
          },
          end: {
            line: 443,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 443,
            column: 24
          },
          end: {
            line: 443,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 443
      },
      "59": {
        loc: {
          start: {
            line: 444,
            column: 27
          },
          end: {
            line: 446,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 444,
            column: 27
          },
          end: {
            line: 446,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 444
      },
      "60": {
        loc: {
          start: {
            line: 453,
            column: 12
          },
          end: {
            line: 455,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 453,
            column: 12
          },
          end: {
            line: 455,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 453
      },
      "61": {
        loc: {
          start: {
            line: 454,
            column: 16
          },
          end: {
            line: 454,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 454,
            column: 16
          },
          end: {
            line: 454,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 454
      },
      "62": {
        loc: {
          start: {
            line: 467,
            column: 16
          },
          end: {
            line: 469,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 467,
            column: 16
          },
          end: {
            line: 469,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 467
      },
      "63": {
        loc: {
          start: {
            line: 603,
            column: 91
          },
          end: {
            line: 603,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 603,
            column: 111
          },
          end: {
            line: 603,
            column: 129
          }
        }, {
          start: {
            line: 603,
            column: 132
          },
          end: {
            line: 603,
            column: 134
          }
        }],
        line: 603
      },
      "64": {
        loc: {
          start: {
            line: 616,
            column: 76
          },
          end: {
            line: 622,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 616,
            column: 76
          },
          end: {
            line: 616,
            column: 87
          }
        }, {
          start: {
            line: 616,
            column: 105
          },
          end: {
            line: 622,
            column: 78
          }
        }],
        line: 616
      },
      "65": {
        loc: {
          start: {
            line: 621,
            column: 90
          },
          end: {
            line: 621,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 621,
            column: 103
          },
          end: {
            line: 621,
            column: 106
          }
        }, {
          start: {
            line: 621,
            column: 109
          },
          end: {
            line: 621,
            column: 112
          }
        }],
        line: 621
      },
      "66": {
        loc: {
          start: {
            line: 628,
            column: 76
          },
          end: {
            line: 631,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 628,
            column: 76
          },
          end: {
            line: 628,
            column: 90
          }
        }, {
          start: {
            line: 628,
            column: 108
          },
          end: {
            line: 631,
            column: 78
          }
        }],
        line: 628
      },
      "67": {
        loc: {
          start: {
            line: 632,
            column: 76
          },
          end: {
            line: 636,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 632,
            column: 76
          },
          end: {
            line: 632,
            column: 93
          }
        }, {
          start: {
            line: 632,
            column: 111
          },
          end: {
            line: 636,
            column: 78
          }
        }],
        line: 632
      },
      "68": {
        loc: {
          start: {
            line: 648,
            column: 102
          },
          end: {
            line: 648,
            column: 166
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 648,
            column: 141
          },
          end: {
            line: 648,
            column: 161
          }
        }, {
          start: {
            line: 648,
            column: 164
          },
          end: {
            line: 648,
            column: 166
          }
        }],
        line: 648
      },
      "69": {
        loc: {
          start: {
            line: 664,
            column: 102
          },
          end: {
            line: 664,
            column: 167
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 664,
            column: 142
          },
          end: {
            line: 664,
            column: 162
          }
        }, {
          start: {
            line: 664,
            column: 165
          },
          end: {
            line: 664,
            column: 167
          }
        }],
        line: 664
      },
      "70": {
        loc: {
          start: {
            line: 673,
            column: 147
          },
          end: {
            line: 673,
            column: 176
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 673,
            column: 147
          },
          end: {
            line: 673,
            column: 171
          }
        }, {
          start: {
            line: 673,
            column: 175
          },
          end: {
            line: 673,
            column: 176
          }
        }],
        line: 673
      },
      "71": {
        loc: {
          start: {
            line: 687,
            column: 84
          },
          end: {
            line: 695,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 687,
            column: 84
          },
          end: {
            line: 687,
            column: 98
          }
        }, {
          start: {
            line: 687,
            column: 116
          },
          end: {
            line: 695,
            column: 86
          }
        }],
        line: 687
      },
      "72": {
        loc: {
          start: {
            line: 720,
            column: 60
          },
          end: {
            line: 800,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 720,
            column: 60
          },
          end: {
            line: 720,
            column: 86
          }
        }, {
          start: {
            line: 720,
            column: 104
          },
          end: {
            line: 800,
            column: 62
          }
        }],
        line: 720
      },
      "73": {
        loc: {
          start: {
            line: 773,
            column: 152
          },
          end: {
            line: 773,
            column: 181
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 773,
            column: 152
          },
          end: {
            line: 773,
            column: 176
          }
        }, {
          start: {
            line: 773,
            column: 180
          },
          end: {
            line: 773,
            column: 181
          }
        }],
        line: 773
      },
      "74": {
        loc: {
          start: {
            line: 805,
            column: 95
          },
          end: {
            line: 805,
            column: 138
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 805,
            column: 124
          },
          end: {
            line: 805,
            column: 128
          }
        }, {
          start: {
            line: 805,
            column: 131
          },
          end: {
            line: 805,
            column: 138
          }
        }],
        line: 805
      },
      "75": {
        loc: {
          start: {
            line: 818,
            column: 40
          },
          end: {
            line: 828,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 818,
            column: 40
          },
          end: {
            line: 818,
            column: 52
          }
        }, {
          start: {
            line: 818,
            column: 70
          },
          end: {
            line: 828,
            column: 42
          }
        }],
        line: 818
      },
      "76": {
        loc: {
          start: {
            line: 829,
            column: 40
          },
          end: {
            line: 839,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 829,
            column: 40
          },
          end: {
            line: 829,
            column: 53
          }
        }, {
          start: {
            line: 829,
            column: 71
          },
          end: {
            line: 839,
            column: 42
          }
        }],
        line: 829
      },
      "77": {
        loc: {
          start: {
            line: 842,
            column: 32
          },
          end: {
            line: 871,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 842,
            column: 32
          },
          end: {
            line: 842,
            column: 72
          }
        }, {
          start: {
            line: 842,
            column: 90
          },
          end: {
            line: 871,
            column: 34
          }
        }],
        line: 842
      },
      "78": {
        loc: {
          start: {
            line: 887,
            column: 32
          },
          end: {
            line: 909,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 887,
            column: 32
          },
          end: {
            line: 887,
            column: 48
          }
        }, {
          start: {
            line: 887,
            column: 66
          },
          end: {
            line: 909,
            column: 34
          }
        }],
        line: 887
      },
      "79": {
        loc: {
          start: {
            line: 888,
            column: 45
          },
          end: {
            line: 888,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 888,
            column: 73
          },
          end: {
            line: 888,
            column: 82
          }
        }, {
          start: {
            line: 888,
            column: 85
          },
          end: {
            line: 888,
            column: 98
          }
        }],
        line: 888
      },
      "80": {
        loc: {
          start: {
            line: 899,
            column: 66
          },
          end: {
            line: 899,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 899,
            column: 94
          },
          end: {
            line: 899,
            column: 100
          }
        }, {
          start: {
            line: 899,
            column: 103
          },
          end: {
            line: 899,
            column: 110
          }
        }],
        line: 899
      },
      "81": {
        loc: {
          start: {
            line: 943,
            column: 40
          },
          end: {
            line: 953,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 943,
            column: 40
          },
          end: {
            line: 943,
            column: 53
          }
        }, {
          start: {
            line: 943,
            column: 71
          },
          end: {
            line: 953,
            column: 42
          }
        }],
        line: 943
      },
      "82": {
        loc: {
          start: {
            line: 954,
            column: 40
          },
          end: {
            line: 977,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 954,
            column: 40
          },
          end: {
            line: 954,
            column: 52
          }
        }, {
          start: {
            line: 954,
            column: 70
          },
          end: {
            line: 977,
            column: 42
          }
        }],
        line: 954
      },
      "83": {
        loc: {
          start: {
            line: 970,
            column: 56
          },
          end: {
            line: 970,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 970,
            column: 56
          },
          end: {
            line: 970,
            column: 79
          }
        }, {
          start: {
            line: 970,
            column: 83
          },
          end: {
            line: 970,
            column: 96
          }
        }],
        line: 970
      },
      "84": {
        loc: {
          start: {
            line: 971,
            column: 56
          },
          end: {
            line: 971,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 971,
            column: 56
          },
          end: {
            line: 971,
            column: 80
          }
        }, {
          start: {
            line: 971,
            column: 84
          },
          end: {
            line: 971,
            column: 107
          }
        }, {
          start: {
            line: 971,
            column: 111
          },
          end: {
            line: 971,
            column: 123
          }
        }],
        line: 971
      },
      "85": {
        loc: {
          start: {
            line: 972,
            column: 56
          },
          end: {
            line: 972,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 972,
            column: 56
          },
          end: {
            line: 972,
            column: 80
          }
        }, {
          start: {
            line: 972,
            column: 84
          },
          end: {
            line: 972,
            column: 107
          }
        }, {
          start: {
            line: 972,
            column: 111
          },
          end: {
            line: 972,
            column: 127
          }
        }],
        line: 972
      },
      "86": {
        loc: {
          start: {
            line: 973,
            column: 56
          },
          end: {
            line: 973,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 973,
            column: 56
          },
          end: {
            line: 973,
            column: 80
          }
        }, {
          start: {
            line: 973,
            column: 84
          },
          end: {
            line: 973,
            column: 94
          }
        }],
        line: 973
      },
      "87": {
        loc: {
          start: {
            line: 978,
            column: 40
          },
          end: {
            line: 988,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 978,
            column: 40
          },
          end: {
            line: 978,
            column: 57
          }
        }, {
          start: {
            line: 978,
            column: 75
          },
          end: {
            line: 988,
            column: 42
          }
        }],
        line: 978
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0, 0],
      "85": [0, 0, 0],
      "86": [0, 0],
      "87": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/forms/schedule-form.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Calendar,\n  Sparkles,\n  AlertCircle,\n  CheckCircle,\n  Info,\n  Loader2,\n  Plus,\n  Trash2,\n  GitBranch,\n  Clock,\n  AlertTriangle,\n} from 'lucide-react';\nimport { apiClient } from '@/lib/api/client';\nimport { GenerateResponse, ValidationResult } from '@/lib/api/types';\n\ninterface TaskDependency {\n  taskId: string;\n  type: 'FS' | 'SS' | 'FF' | 'SF'; // Finish-Start, Start-Start, Finish-Finish, Start-Finish\n  lag: number; // \u9045\u5EF6\u65E5\u6570\uFF08\u8CA0\u306E\u5024\u3067\u30EA\u30FC\u30C9\uFF09\n}\n\ninterface WBSTask {\n  id: string;\n  wbsCode: string;\n  name: string;\n  description?: string;\n  startDate: string;\n  endDate: string;\n  duration: number;\n  responsible?: string;\n  resources?: string[];\n  dependencies: TaskDependency[];\n  progress: number;\n  milestone: boolean;\n  criticalPath: boolean;\n  slack: number; // \u4F59\u88D5\u65E5\u6570\n  level: number; // WBS\u968E\u5C64\n  parentId?: string;\n}\n\ninterface ScheduleData {\n  tasks: WBSTask[];\n  projectStartDate: string;\n  projectEndDate: string;\n  criticalPathLength: number;\n  milestones: string[];\n}\n\ninterface ScheduleFormProps {\n  applicationId: string;\n  data?: ScheduleData;\n  onChange: (data: ScheduleData) => void;\n  onValidate?: () => Promise<boolean>;\n}\n\nconst DEPENDENCY_TYPES = [\n  { value: 'FS', label: '\u7D42\u4E86-\u958B\u59CB (FS)' },\n  { value: 'SS', label: '\u540C\u6642\u958B\u59CB (SS)' },\n  { value: 'FF', label: '\u540C\u6642\u7D42\u4E86 (FF)' },\n  { value: 'SF', label: '\u958B\u59CB-\u7D42\u4E86 (SF)' },\n];\n\nconst DEFAULT_RESOURCES = ['\u958B\u767A\u8005', '\u30C7\u30B6\u30A4\u30CA\u30FC', '\u30DE\u30CD\u30FC\u30B8\u30E3\u30FC', '\u5916\u90E8\u59D4\u8A17'];\n\nexport function ScheduleForm({ applicationId, data, onChange, onValidate }: ScheduleFormProps) {\n  const [formData, setFormData] = useState<ScheduleData>(\n    data || {\n      tasks: [],\n      projectStartDate: new Date().toISOString().split('T')[0],\n      projectEndDate: '',\n      criticalPathLength: 0,\n      milestones: [],\n    }\n  );\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generationProgress, setGenerationProgress] = useState(0);\n  const [validationResult, setValidationResult] = useState<ValidationResult | null>(null);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [activeTab, setActiveTab] = useState('wbs');\n  const [selectedTaskId, setSelectedTaskId] = useState<string | null>(null);\n  const [expandedTasks, setExpandedTasks] = useState<Set<string>>(new Set());\n\n  // \u30AF\u30EA\u30C6\u30A3\u30AB\u30EB\u30D1\u30B9\u8A08\u7B97 (CPM)\n  useEffect(() => {\n    if (formData.tasks.length > 0) {\n      calculateCriticalPath();\n    }\n  }, [formData.tasks]);\n\n  const calculateCriticalPath = () => {\n    const tasks = [...formData.tasks];\n    const taskMap = new Map(tasks.map((t) => [t.id, t]));\n\n    // \u521D\u671F\u5316\n    tasks.forEach((task) => {\n      task.criticalPath = false;\n      task.slack = 0;\n    });\n\n    // \u30D5\u30A9\u30EF\u30FC\u30C9\u30D1\u30B9\uFF08\u6700\u65E9\u958B\u59CB\u30FB\u6700\u65E9\u7D42\u4E86\u6642\u523B\uFF09\n    const earlyStart = new Map<string, number>();\n    const earlyFinish = new Map<string, number>();\n\n    const getTaskStart = (task: WBSTask): number => {\n      if (earlyStart.has(task.id)) return earlyStart.get(task.id)!;\n\n      let maxPrevFinish = 0;\n      task.dependencies.forEach((dep) => {\n        const prevTask = taskMap.get(dep.taskId);\n        if (prevTask) {\n          const prevFinish = getTaskFinish(prevTask);\n          if (dep.type === 'FS') {\n            maxPrevFinish = Math.max(maxPrevFinish, prevFinish + dep.lag);\n          }\n          // \u4ED6\u306E\u4F9D\u5B58\u30BF\u30A4\u30D7\u306E\u51E6\u7406\u3082\u8FFD\u52A0\u53EF\u80FD\n        }\n      });\n\n      earlyStart.set(task.id, maxPrevFinish);\n      return maxPrevFinish;\n    };\n\n    const getTaskFinish = (task: WBSTask): number => {\n      if (earlyFinish.has(task.id)) return earlyFinish.get(task.id)!;\n\n      const start = getTaskStart(task);\n      const finish = start + task.duration;\n      earlyFinish.set(task.id, finish);\n      return finish;\n    };\n\n    // \u5168\u30BF\u30B9\u30AF\u306E\u6700\u65E9\u958B\u59CB\u30FB\u7D42\u4E86\u3092\u8A08\u7B97\n    tasks.forEach((task) => {\n      getTaskFinish(task);\n    });\n\n    // \u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u5168\u4F53\u306E\u6700\u7D42\u65E5\n    const projectFinish = Math.max(...tasks.map((t) => earlyFinish.get(t.id) || 0));\n\n    // \u30D0\u30C3\u30AF\u30EF\u30FC\u30C9\u30D1\u30B9\uFF08\u6700\u9045\u958B\u59CB\u30FB\u6700\u9045\u7D42\u4E86\u6642\u523B\uFF09\n    const lateStart = new Map<string, number>();\n    const lateFinish = new Map<string, number>();\n\n    // \u672B\u7AEF\u30BF\u30B9\u30AF\u304B\u3089\u9006\u7B97\n    const calculateLateFinish = (task: WBSTask): number => {\n      if (lateFinish.has(task.id)) return lateFinish.get(task.id)!;\n\n      // \u5F8C\u7D9A\u30BF\u30B9\u30AF\u3092\u63A2\u3059\n      const successors = tasks.filter((t) =>\n        t.dependencies.some((d) => d.taskId === task.id)\n      );\n\n      if (successors.length === 0) {\n        // \u672B\u7AEF\u30BF\u30B9\u30AF\n        lateFinish.set(task.id, projectFinish);\n        return projectFinish;\n      }\n\n      let minSuccessorStart = projectFinish;\n      successors.forEach((successor) => {\n        const successorLateStart = calculateLateStart(successor);\n        const dep = successor.dependencies.find((d) => d.taskId === task.id);\n        if (dep && dep.type === 'FS') {\n          minSuccessorStart = Math.min(minSuccessorStart, successorLateStart - dep.lag);\n        }\n      });\n\n      lateFinish.set(task.id, minSuccessorStart);\n      return minSuccessorStart;\n    };\n\n    const calculateLateStart = (task: WBSTask): number => {\n      if (lateStart.has(task.id)) return lateStart.get(task.id)!;\n\n      const finish = calculateLateFinish(task);\n      const start = finish - task.duration;\n      lateStart.set(task.id, start);\n      return start;\n    };\n\n    // \u5168\u30BF\u30B9\u30AF\u306E\u6700\u9045\u958B\u59CB\u30FB\u7D42\u4E86\u3092\u8A08\u7B97\n    tasks.forEach((task) => {\n      calculateLateStart(task);\n    });\n\n    // \u30B9\u30E9\u30C3\u30AF\uFF08\u4F59\u88D5\uFF09\u3068\u30AF\u30EA\u30C6\u30A3\u30AB\u30EB\u30D1\u30B9\u306E\u5224\u5B9A\n    tasks.forEach((task) => {\n      const es = earlyStart.get(task.id) || 0;\n      const ls = lateStart.get(task.id) || 0;\n      task.slack = ls - es;\n      task.criticalPath = task.slack === 0;\n    });\n\n    // \u30AF\u30EA\u30C6\u30A3\u30AB\u30EB\u30D1\u30B9\u9577\u3092\u8A08\u7B97\n    const criticalPathLength = projectFinish;\n\n    const newData = {\n      ...formData,\n      tasks,\n      criticalPathLength,\n      projectEndDate: addDaysToDate(formData.projectStartDate, criticalPathLength),\n    };\n    setFormData(newData);\n    onChange(newData);\n  };\n\n  const addDaysToDate = (dateStr: string, days: number): string => {\n    const date = new Date(dateStr);\n    date.setDate(date.getDate() + days);\n    return date.toISOString().split('T')[0];\n  };\n\n  const handleFieldChange = (field: string, value: any) => {\n    const newData = { ...formData, [field]: value };\n    setFormData(newData);\n    onChange(newData);\n\n    // \u30A8\u30E9\u30FC\u30AF\u30EA\u30A2\n    if (errors[field]) {\n      setErrors((prev) => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  const handleTaskChange = (index: number, field: keyof WBSTask, value: any) => {\n    const newTasks = [...formData.tasks];\n    newTasks[index] = { ...newTasks[index], [field]: value };\n\n    // \u671F\u9593\u306E\u81EA\u52D5\u8A08\u7B97\n    if (field === 'startDate' || field === 'endDate') {\n      const start = new Date(newTasks[index].startDate);\n      const end = new Date(newTasks[index].endDate);\n      const diffTime = Math.abs(end.getTime() - start.getTime());\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      newTasks[index].duration = diffDays;\n    }\n\n    handleFieldChange('tasks', newTasks);\n  };\n\n  const addTask = (parentId?: string) => {\n    const parentTask = parentId ? formData.tasks.find((t) => t.id === parentId) : null;\n    const level = parentTask ? parentTask.level + 1 : 0;\n    const parentWbs = parentTask ? parentTask.wbsCode : '';\n    const siblingCount = formData.tasks.filter(\n      (t) => t.parentId === parentId && t.level === level\n    ).length;\n\n    const newTask: WBSTask = {\n      id: `task-${Date.now()}`,\n      wbsCode: parentWbs ? `${parentWbs}.${siblingCount + 1}` : `${siblingCount + 1}`,\n      name: '',\n      startDate: formData.projectStartDate || new Date().toISOString().split('T')[0],\n      endDate: addDaysToDate(formData.projectStartDate || new Date().toISOString().split('T')[0], 7),\n      duration: 7,\n      dependencies: [],\n      progress: 0,\n      milestone: false,\n      criticalPath: false,\n      slack: 0,\n      level,\n      parentId,\n    };\n    handleFieldChange('tasks', [...formData.tasks, newTask]);\n  };\n\n  const removeTask = (taskId: string) => {\n    // \u5B50\u30BF\u30B9\u30AF\u3082\u540C\u6642\u306B\u524A\u9664\n    const tasksToRemove = new Set([taskId]);\n    const findChildren = (parentId: string) => {\n      formData.tasks\n        .filter((t) => t.parentId === parentId)\n        .forEach((child) => {\n          tasksToRemove.add(child.id);\n          findChildren(child.id);\n        });\n    };\n    findChildren(taskId);\n\n    const newTasks = formData.tasks.filter((t) => !tasksToRemove.has(t.id));\n    handleFieldChange('tasks', newTasks);\n  };\n\n  const addDependency = (taskIndex: number) => {\n    const task = formData.tasks[taskIndex];\n    if (!task) return;\n\n    const newDep: TaskDependency = {\n      taskId: '',\n      type: 'FS',\n      lag: 0,\n    };\n\n    handleTaskChange(taskIndex, 'dependencies', [...task.dependencies, newDep]);\n  };\n\n  const updateDependency = (taskIndex: number, depIndex: number, field: keyof TaskDependency, value: any) => {\n    const task = formData.tasks[taskIndex];\n    if (!task) return;\n\n    const newDeps = [...task.dependencies];\n    newDeps[depIndex] = { ...newDeps[depIndex], [field]: value };\n    handleTaskChange(taskIndex, 'dependencies', newDeps);\n  };\n\n  const removeDependency = (taskIndex: number, depIndex: number) => {\n    const task = formData.tasks[taskIndex];\n    if (!task) return;\n\n    const newDeps = task.dependencies.filter((_, i) => i !== depIndex);\n    handleTaskChange(taskIndex, 'dependencies', newDeps);\n  };\n\n  const toggleTaskExpand = (taskId: string) => {\n    const newExpanded = new Set(expandedTasks);\n    if (newExpanded.has(taskId)) {\n      newExpanded.delete(taskId);\n    } else {\n      newExpanded.add(taskId);\n    }\n    setExpandedTasks(newExpanded);\n  };\n\n  const handleAutoGenerate = async () => {\n    setIsGenerating(true);\n    setGenerationProgress(10);\n\n    try {\n      // \u30B9\u30B1\u30B8\u30E5\u30FC\u30EB\u751F\u6210API\u3092\u547C\u3073\u51FA\u3057\n      setGenerationProgress(30);\n      const response = await apiClient.post<GenerateResponse>('/generate/schedule', {\n        application_id: applicationId,\n      });\n\n      setGenerationProgress(70);\n\n      // \u30EC\u30B9\u30DD\u30F3\u30B9\u3092\u30D1\u30FC\u30B9\n      const generatedTasks = parseGeneratedSchedule(response.content);\n\n      setGenerationProgress(90);\n\n      // \u30D5\u30A9\u30FC\u30E0\u30C7\u30FC\u30BF\u3092\u66F4\u65B0\n      const newData: ScheduleData = {\n        ...formData,\n        tasks: generatedTasks,\n      };\n\n      setFormData(newData);\n      onChange(newData);\n      setGenerationProgress(100);\n\n      setTimeout(() => {\n        setGenerationProgress(0);\n        setActiveTab('wbs');\n      }, 1000);\n    } catch (error: any) {\n      setErrors({ generation: error.message || '\u30B9\u30B1\u30B8\u30E5\u30FC\u30EB\u751F\u6210\u306B\u5931\u6557\u3057\u307E\u3057\u305F' });\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const handleValidate = async () => {\n    try {\n      const result = await apiClient.post<ValidationResult>('/validate/schedule', {\n        tasks: formData.tasks,\n        project_start: formData.projectStartDate,\n        project_end: formData.projectEndDate,\n      });\n      setValidationResult(result);\n    } catch (error: any) {\n      setErrors({ validation: error.message || '\u691C\u8A3C\u306B\u5931\u6557\u3057\u307E\u3057\u305F' });\n    }\n  };\n\n  const parseGeneratedSchedule = (content: string): WBSTask[] => {\n    const tasks: WBSTask[] = [];\n    const lines = content.split('\\n');\n    const taskIdMap = new Map<string, string>();\n    \n    for (const line of lines) {\n      const wbsMatch = line.match(/^([\\d.]+)\\s+(.+)/);\n      if (wbsMatch) {\n        const wbsCode = wbsMatch[1];\n        const name = wbsMatch[2];\n        const level = (wbsCode.match(/\\./g) || []).length;\n        const parentWbs = wbsCode.split('.').slice(0, -1).join('.');\n        const parentId = parentWbs ? taskIdMap.get(parentWbs) : undefined;\n        \n        const taskId = `task-${Date.now()}-${tasks.length}`;\n        taskIdMap.set(wbsCode, taskId);\n        \n        tasks.push({\n          id: taskId,\n          wbsCode,\n          name: name.replace(/[\\[\\]\\uff3b\\uff3d]/g, '').trim(),\n          startDate: formData.projectStartDate || new Date().toISOString().split('T')[0],\n          endDate: addDaysToDate(formData.projectStartDate || new Date().toISOString().split('T')[0], 7),\n          duration: 7,\n          dependencies: [],\n          progress: 0,\n          milestone: name.includes('\u30DE\u30A4\u30EB\u30B9\u30C8\u30FC\u30F3') || name.includes('\\u25c7'),\n          criticalPath: false,\n          slack: 0,\n          level,\n          parentId,\n        });\n      }\n    }\n    \n    return tasks;\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.tasks || formData.tasks.length === 0) {\n      newErrors.tasks = '\u30BF\u30B9\u30AF\u3092\u5C11\u306A\u304F\u3068\u30821\u3064\u8FFD\u52A0\u3057\u3066\u304F\u3060\u3055\u3044';\n    }\n\n    formData.tasks.forEach((task, index) => {\n      if (!task.name) {\n        newErrors[`task-${index}-name`] = '\u30BF\u30B9\u30AF\u540D\u306F\u5FC5\u9808\u3067\u3059';\n      }\n      if (new Date(task.endDate) < new Date(task.startDate)) {\n        newErrors[`task-${index}-dates`] = '\u7D42\u4E86\u65E5\u306F\u958B\u59CB\u65E5\u3088\u308A\u5F8C\u306B\u8A2D\u5B9A\u3057\u3066\u304F\u3060\u3055\u3044';\n      }\n    });\n\n    // \u5FAA\u74B0\u4F9D\u5B58\u306E\u30C1\u30A7\u30C3\u30AF\n    const hasCyclicDependency = checkCyclicDependency();\n    if (hasCyclicDependency) {\n      newErrors.cyclic = '\u5FAA\u74B0\u4F9D\u5B58\u304C\u691C\u51FA\u3055\u308C\u307E\u3057\u305F';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const checkCyclicDependency = (): boolean => {\n    const visited = new Set<string>();\n    const recursionStack = new Set<string>();\n\n    const hasCycle = (taskId: string): boolean => {\n      visited.add(taskId);\n      recursionStack.add(taskId);\n\n      const task = formData.tasks.find((t) => t.id === taskId);\n      if (task) {\n        for (const dep of task.dependencies) {\n          if (!visited.has(dep.taskId)) {\n            if (hasCycle(dep.taskId)) return true;\n          } else if (recursionStack.has(dep.taskId)) {\n            return true;\n          }\n        }\n      }\n\n      recursionStack.delete(taskId);\n      return false;\n    };\n\n    for (const task of formData.tasks) {\n      if (!visited.has(task.id)) {\n        if (hasCycle(task.id)) return true;\n      }\n    }\n\n    return false;\n  };\n\n  // \u30BF\u30B9\u30AF\u306E\u30C4\u30EA\u30FC\u8868\u793A\u7528\u306B\u30BD\u30FC\u30C8\n  const sortedTasks = useMemo(() => {\n    const sorted: WBSTask[] = [];\n    const addTaskAndChildren = (parentId?: string) => {\n      const children = formData.tasks.filter((t) => t.parentId === parentId);\n      children.sort((a, b) => a.wbsCode.localeCompare(b.wbsCode));\n      children.forEach((task) => {\n        sorted.push(task);\n        if (expandedTasks.has(task.id)) {\n          addTaskAndChildren(task.id);\n        }\n      });\n    };\n    addTaskAndChildren(undefined);\n    return sorted;\n  }, [formData.tasks, expandedTasks]);\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Calendar className=\"h-5 w-5\" />\n          \u5B9F\u65BD\u30B9\u30B1\u30B8\u30E5\u30FC\u30EB\n        </CardTitle>\n        <CardDescription>\n          \u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u306EWBS\uFF08\u4F5C\u696D\u5206\u89E3\u69CB\u9020\uFF09\u3068\u30B9\u30B1\u30B8\u30E5\u30FC\u30EB\u3092\u4F5C\u6210\u3057\u307E\u3059\u3002\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Tabs value={activeTab} onValueChange={setActiveTab}>\n          <TabsList className=\"grid w-full grid-cols-3\">\n            <TabsTrigger value=\"wbs\">WBS\u7DE8\u96C6</TabsTrigger>\n            <TabsTrigger value=\"gantt\">\u30AC\u30F3\u30C8\u30C1\u30E3\u30FC\u30C8</TabsTrigger>\n            <TabsTrigger value=\"generate\">AI\u751F\u6210</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"wbs\" className=\"space-y-6 mt-6\">\n            {/* \u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u57FA\u672C\u60C5\u5831 */}\n            <div className=\"grid grid-cols-3 gap-4\">\n              <div>\n                <Label htmlFor=\"projectStartDate\">\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u958B\u59CB\u65E5</Label>\n                <Input\n                  id=\"projectStartDate\"\n                  type=\"date\"\n                  value={formData.projectStartDate}\n                  onChange={(e) => handleFieldChange('projectStartDate', e.target.value)}\n                />\n              </div>\n              <div>\n                <Label>\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u7D42\u4E86\u65E5\uFF08\u81EA\u52D5\u8A08\u7B97\uFF09</Label>\n                <Input value={formData.projectEndDate} disabled />\n              </div>\n              <div>\n                <Label>\u30AF\u30EA\u30C6\u30A3\u30AB\u30EB\u30D1\u30B9\u9577</Label>\n                <div className=\"flex items-center gap-2\">\n                  <Input value={`${formData.criticalPathLength}\u65E5`} disabled />\n                  <Badge variant=\"destructive\">\u91CD\u8981</Badge>\n                </div>\n              </div>\n            </div>\n\n            {/* WBS\u30BF\u30B9\u30AF\u30EA\u30B9\u30C8 */}\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center\">\n                <Label>WBS\u30BF\u30B9\u30AF</Label>\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => addTask()}\n                  className=\"gap-2\"\n                >\n                  <Plus className=\"h-4 w-4\" />\n                  \u30EB\u30FC\u30C8\u30BF\u30B9\u30AF\u8FFD\u52A0\n                </Button>\n              </div>\n\n              <div className=\"border rounded-lg\">\n                {sortedTasks.map((task, index) => {\n                  const originalIndex = formData.tasks.findIndex((t) => t.id === task.id);\n                  const hasChildren = formData.tasks.some((t) => t.parentId === task.id);\n                  const isExpanded = expandedTasks.has(task.id);\n\n                  return (\n                    <div\n                      key={task.id}\n                      className={`border-b last:border-b-0 ${\n                        task.criticalPath ? 'bg-destructive/5' : ''\n                      }`}\n                      style={{ paddingLeft: `${task.level * 24 + 16}px` }}\n                    >\n                      <div className=\"py-3 pr-4\">\n                        <div className=\"flex items-start gap-4\">\n                          <div className=\"flex items-center gap-2 min-w-[100px]\">\n                            {hasChildren && (\n                              <Button\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                className=\"h-6 w-6 p-0\"\n                                onClick={() => toggleTaskExpand(task.id)}\n                              >\n                                {isExpanded ? '\u25BC' : '\u25B6'}\n                              </Button>\n                            )}\n                            <Badge variant=\"outline\" className=\"font-mono\">\n                              {task.wbsCode}\n                            </Badge>\n                            {task.milestone && <Badge variant=\"secondary\">\u25C7</Badge>}\n                            {task.criticalPath && (\n                              <Badge variant=\"destructive\" className=\"text-xs\">\n                                CP\n                              </Badge>\n                            )}\n                          </div>\n\n                          <div className=\"flex-1 grid grid-cols-6 gap-2\">\n                            <div className=\"col-span-2\">\n                              <Input\n                                value={task.name}\n                                onChange={(e) => handleTaskChange(originalIndex, 'name', e.target.value)}\n                                placeholder=\"\u30BF\u30B9\u30AF\u540D\"\n                                className={`h-8 ${errors[`task-${originalIndex}-name`] ? 'border-destructive' : ''}`}\n                              />\n                            </div>\n                            <div>\n                              <Input\n                                type=\"date\"\n                                value={task.startDate}\n                                onChange={(e) => handleTaskChange(originalIndex, 'startDate', e.target.value)}\n                                className=\"h-8\"\n                              />\n                            </div>\n                            <div>\n                              <Input\n                                type=\"date\"\n                                value={task.endDate}\n                                onChange={(e) => handleTaskChange(originalIndex, 'endDate', e.target.value)}\n                                className={`h-8 ${errors[`task-${originalIndex}-dates`] ? 'border-destructive' : ''}`}\n                              />\n                            </div>\n                            <div className=\"flex items-center gap-1\">\n                              <Input\n                                type=\"number\"\n                                value={task.progress}\n                                onChange={(e) =>\n                                  handleTaskChange(originalIndex, 'progress', parseInt(e.target.value) || 0)\n                                }\n                                className=\"h-8\"\n                                min=\"0\"\n                                max=\"100\"\n                              />\n                              <span className=\"text-sm\">%</span>\n                            </div>\n                            <div className=\"flex items-center gap-2\">\n                              {task.slack > 0 && (\n                                <Badge variant=\"outline\" className=\"text-xs\">\n                                  \u4F59\u88D5{task.slack}\u65E5\n                                </Badge>\n                              )}\n                              <Button\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                className=\"h-8 px-2\"\n                                onClick={() => addTask(task.id)}\n                              >\n                                <Plus className=\"h-3 w-3\" />\n                              </Button>\n                              <Button\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                className=\"h-8 px-2\"\n                                onClick={() => removeTask(task.id)}\n                              >\n                                <Trash2 className=\"h-3 w-3\" />\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* \u4F9D\u5B58\u95A2\u4FC2 */}\n                        {selectedTaskId === task.id && (\n                          <div className=\"mt-3 p-3 bg-muted rounded-lg\">\n                            <div className=\"space-y-2\">\n                              <Label className=\"text-xs\">\u4F9D\u5B58\u95A2\u4FC2</Label>\n                              {task.dependencies.map((dep, depIndex) => (\n                                <div key={depIndex} className=\"flex items-center gap-2\">\n                                  <Select\n                                    value={dep.taskId}\n                                    onValueChange={(value) =>\n                                      updateDependency(originalIndex, depIndex, 'taskId', value)\n                                    }\n                                  >\n                                    <SelectTrigger className=\"h-8\">\n                                      <SelectValue placeholder=\"\u5148\u884C\u30BF\u30B9\u30AF\" />\n                                    </SelectTrigger>\n                                    <SelectContent>\n                                      {formData.tasks\n                                        .filter((t) => t.id !== task.id)\n                                        .map((t) => (\n                                          <SelectItem key={t.id} value={t.id}>\n                                            {t.wbsCode} {t.name}\n                                          </SelectItem>\n                                        ))}\n                                    </SelectContent>\n                                  </Select>\n                                  <Select\n                                    value={dep.type}\n                                    onValueChange={(value) =>\n                                      updateDependency(originalIndex, depIndex, 'type', value)\n                                    }\n                                  >\n                                    <SelectTrigger className=\"h-8 w-24\">\n                                      <SelectValue />\n                                    </SelectTrigger>\n                                    <SelectContent>\n                                      {DEPENDENCY_TYPES.map((type) => (\n                                        <SelectItem key={type.value} value={type.value}>\n                                          {type.label}\n                                        </SelectItem>\n                                      ))}\n                                    </SelectContent>\n                                  </Select>\n                                  <Input\n                                    type=\"number\"\n                                    value={dep.lag}\n                                    onChange={(e) =>\n                                      updateDependency(\n                                        originalIndex,\n                                        depIndex,\n                                        'lag',\n                                        parseInt(e.target.value) || 0\n                                      )\n                                    }\n                                    placeholder=\"\u9045\u5EF6\"\n                                    className=\"h-8 w-20\"\n                                  />\n                                  <Button\n                                    variant=\"ghost\"\n                                    size=\"sm\"\n                                    onClick={() => removeDependency(originalIndex, depIndex)}\n                                  >\n                                    <Trash2 className=\"h-3 w-3\" />\n                                  </Button>\n                                </div>\n                              ))}\n                              <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => addDependency(originalIndex)}\n                              >\n                                <Plus className=\"h-3 w-3 mr-1\" />\n                                \u4F9D\u5B58\u8FFD\u52A0\n                              </Button>\n                            </div>\n                          </div>\n                        )}\n\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"mt-2 text-xs\"\n                          onClick={() => setSelectedTaskId(task.id === selectedTaskId ? null : task.id)}\n                        >\n                          <GitBranch className=\"h-3 w-3 mr-1\" />\n                          \u4F9D\u5B58\u95A2\u4FC2\n                        </Button>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n\n              {errors.tasks && (\n                <Alert variant=\"destructive\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>{errors.tasks}</AlertDescription>\n                </Alert>\n              )}\n\n              {errors.cyclic && (\n                <Alert variant=\"destructive\">\n                  <AlertTriangle className=\"h-4 w-4\" />\n                  <AlertDescription>{errors.cyclic}</AlertDescription>\n                </Alert>\n              )}\n            </div>\n\n            {/* \u30AF\u30EA\u30C6\u30A3\u30AB\u30EB\u30D1\u30B9\u60C5\u5831 */}\n            {formData.tasks.some((t) => t.criticalPath) && (\n              <Alert>\n                <AlertTriangle className=\"h-4 w-4\" />\n                <AlertDescription>\n                  <p className=\"font-medium mb-2\">\u30AF\u30EA\u30C6\u30A3\u30AB\u30EB\u30D1\u30B9\uFF1A</p>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {formData.tasks\n                      .filter((t) => t.criticalPath)\n                      .map((t) => (\n                        <Badge key={t.id} variant=\"destructive\">\n                          {t.wbsCode} {t.name}\n                        </Badge>\n                      ))}\n                  </div>\n                  <p className=\"text-xs mt-2\">\n                    \u3053\u308C\u3089\u306E\u30BF\u30B9\u30AF\u304C\u9045\u5EF6\u3059\u308B\u3068\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u5168\u4F53\u304C\u9045\u5EF6\u3057\u307E\u3059\n                  </p>\n                </AlertDescription>\n              </Alert>\n            )}\n\n            {/* \u691C\u8A3C\u30DC\u30BF\u30F3 */}\n            <div className=\"flex justify-end gap-2\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={handleValidate}\n                disabled={formData.tasks.length === 0}\n              >\n                <Clock className=\"h-4 w-4 mr-2\" />\n                \u30B9\u30B1\u30B8\u30E5\u30FC\u30EB\u3092\u691C\u8A3C\n              </Button>\n            </div>\n\n            {/* \u691C\u8A3C\u7D50\u679C */}\n            {validationResult && (\n              <Alert variant={validationResult.is_valid ? 'default' : 'destructive'}>\n                <CheckCircle className=\"h-4 w-4\" />\n                <AlertDescription>\n                  <div className=\"space-y-1\">\n                    <p className=\"font-medium\">\n                      {validationResult.is_valid ? '\u691C\u8A3C\u6210\u529F' : '\u691C\u8A3C\u30A8\u30E9\u30FC'}\n                    </p>\n                    {validationResult.messages.map((msg, i) => (\n                      <p key={i} className=\"text-sm\">\n                        {msg}\n                      </p>\n                    ))}\n                  </div>\n                </AlertDescription>\n              </Alert>\n            )}\n          </TabsContent>\n\n          <TabsContent value=\"gantt\" className=\"mt-6\">\n            <Alert>\n              <Info className=\"h-4 w-4\" />\n              <AlertDescription>\n                \u30AC\u30F3\u30C8\u30C1\u30E3\u30FC\u30C8\u8868\u793A\u6A5F\u80FD\u306F\u5225\u30B3\u30F3\u30DD\u30FC\u30CD\u30F3\u30C8\u3067\u5B9F\u88C5\u4E88\u5B9A\u3067\u3059\u3002\n                WBS\u7DE8\u96C6\u753B\u9762\u3067\u30BF\u30B9\u30AF\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002\n              </AlertDescription>\n            </Alert>\n          </TabsContent>\n\n          <TabsContent value=\"generate\" className=\"space-y-6 mt-6\">\n            <Alert>\n              <Sparkles className=\"h-4 w-4\" />\n              <AlertDescription>\n                AI\u304C\u4E8B\u696D\u5185\u5BB9\u306B\u57FA\u3065\u3044\u3066\u9069\u5207\u306AWBS\u3068\u30B9\u30B1\u30B8\u30E5\u30FC\u30EB\u3092\u81EA\u52D5\u751F\u6210\u3057\u307E\u3059\u3002\n                \u751F\u6210\u5F8C\u306F\u624B\u52D5\u3067\u7DE8\u96C6\u53EF\u80FD\u3067\u3059\u3002\n              </AlertDescription>\n            </Alert>\n\n            <div className=\"space-y-4\">\n              {!isGenerating && (\n                <Button onClick={handleAutoGenerate} className=\"w-full gap-2\" size=\"lg\">\n                  <Sparkles className=\"h-4 w-4\" />\n                  WBS\u30FB\u30B9\u30B1\u30B8\u30E5\u30FC\u30EB\u3092\u81EA\u52D5\u751F\u6210\n                </Button>\n              )}\n\n              {isGenerating && (\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-center py-8\">\n                    <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n                  </div>\n                  <Progress value={generationProgress} className=\"h-2\" />\n                  <p className=\"text-center text-sm text-muted-foreground\">\n                    {generationProgress < 30 && '\u4E8B\u696D\u5185\u5BB9\u3092\u5206\u6790\u4E2D...'}\n                    {generationProgress >= 30 && generationProgress < 70 && 'WBS\u3092\u69CB\u7BC9\u4E2D...'}\n                    {generationProgress >= 70 && generationProgress < 90 && '\u30B9\u30B1\u30B8\u30E5\u30FC\u30EB\u3092\u6700\u9069\u5316\u4E2D...'}\n                    {generationProgress >= 90 && '\u6700\u7D42\u8ABF\u6574\u4E2D...'}\n                  </p>\n                </div>\n              )}\n\n              {errors.generation && (\n                <Alert variant=\"destructive\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>{errors.generation}</AlertDescription>\n                </Alert>\n              )}\n            </div>\n\n            <Alert>\n              <Info className=\"h-4 w-4\" />\n              <AlertDescription>\n                <div className=\"space-y-2\">\n                  <p className=\"font-medium\">\u751F\u6210\u3055\u308C\u308B\u30B9\u30B1\u30B8\u30E5\u30FC\u30EB\u306E\u7279\u5FB4\uFF1A</p>\n                  <ul className=\"list-disc list-inside space-y-1 text-sm\">\n                    <li>\u9069\u5207\u306AWBS\u968E\u5C64\u69CB\u9020\uFF08\u30EC\u30D9\u30EB2-3\uFF09</li>\n                    <li>\u4F9D\u5B58\u95A2\u4FC2\u306E\u81EA\u52D5\u8A2D\u5B9A</li>\n                    <li>\u30AF\u30EA\u30C6\u30A3\u30AB\u30EB\u30D1\u30B9\u306E\u7279\u5B9A</li>\n                    <li>\u30DE\u30A4\u30EB\u30B9\u30C8\u30FC\u30F3\u306E\u9069\u5207\u306A\u914D\u7F6E</li>\n                    <li>\u73FE\u5B9F\u7684\u306A\u671F\u9593\u8A2D\u5B9A</li>\n                  </ul>\n                </div>\n              </AlertDescription>\n            </Alert>\n          </TabsContent>\n        </Tabs>\n      </CardContent>\n    </Card>\n  );\n}"],
      names: ["ScheduleForm", "DEPENDENCY_TYPES", "value", "label", "DEFAULT_RESOURCES", "applicationId", "data", "onChange", "onValidate", "formData", "setFormData", "useState", "tasks", "projectStartDate", "Date", "toISOString", "split", "projectEndDate", "criticalPathLength", "milestones", "isGenerating", "setIsGenerating", "generationProgress", "setGenerationProgress", "validationResult", "setValidationResult", "errors", "setErrors", "activeTab", "setActiveTab", "selectedTaskId", "setSelectedTaskId", "expandedTasks", "setExpandedTasks", "Set", "useEffect", "length", "calculateCriticalPath", "taskMap", "Map", "map", "t", "id", "forEach", "task", "criticalPath", "slack", "earlyStart", "earlyFinish", "getTaskStart", "has", "get", "maxPrevFinish", "dependencies", "dep", "prevTask", "taskId", "prevFinish", "getTaskFinish", "type", "Math", "max", "lag", "set", "start", "finish", "duration", "projectFinish", "lateStart", "lateFinish", "calculateLateFinish", "successors", "filter", "some", "d", "minSuccessorStart", "successor", "successorLateStart", "calculateLateStart", "find", "min", "es", "ls", "newData", "addDaysToDate", "dateStr", "days", "date", "setDate", "getDate", "handleFieldChange", "field", "prev", "newErrors", "handleTaskChange", "index", "newTasks", "startDate", "end", "endDate", "diffTime", "abs", "getTime", "diffDays", "ceil", "addTask", "parentId", "parentTask", "level", "parentWbs", "wbsCode", "siblingCount", "newTask", "now", "name", "progress", "milestone", "removeTask", "tasksToRemove", "findChildren", "child", "add", "addDependency", "taskIndex", "newDep", "updateDependency", "depIndex", "newDeps", "removeDependency", "_", "i", "toggleTaskExpand", "newExpanded", "delete", "handleAutoGenerate", "response", "apiClient", "post", "application_id", "generatedTasks", "parseGeneratedSchedule", "content", "setTimeout", "error", "generation", "message", "handleValidate", "result", "project_start", "project_end", "validation", "lines", "taskIdMap", "line", "wbsMatch", "match", "slice", "join", "undefined", "push", "replace", "trim", "includes", "validateForm", "hasCyclicDependency", "checkCyclicDependency", "cyclic", "Object", "keys", "visited", "recursionStack", "hasCycle", "sortedTasks", "useMemo", "sorted", "addTaskAndChildren", "children", "sort", "a", "b", "localeCompare", "Card", "CardHeader", "CardTitle", "className", "Calendar", "CardDescription", "CardContent", "Tabs", "onValueChange", "TabsList", "TabsTrigger", "TabsContent", "div", "Label", "htmlFor", "Input", "e", "target", "disabled", "Badge", "variant", "Button", "size", "onClick", "Plus", "originalIndex", "findIndex", "hasChildren", "isExpanded", "style", "paddingLeft", "placeholder", "parseInt", "span", "Trash2", "Select", "SelectTrigger", "SelectValue", "SelectContent", "SelectItem", "GitBranch", "Alert", "AlertCircle", "AlertDescription", "AlertTriangle", "p", "Clock", "is_valid", "CheckCircle", "messages", "msg", "Info", "Sparkles", "Loader2", "Progress", "ul", "li"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4e26309363aef5dfe0164d0b6cde627ec6725c92"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25xrn7djb2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25xrn7djb2();
cov_25xrn7djb2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_25xrn7djb2().s[1]++;
Object.defineProperty(exports, "ScheduleForm", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[0]++;
    cov_25xrn7djb2().s[2]++;
    return ScheduleForm;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_25xrn7djb2().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_25xrn7djb2().s[4]++, _interop_require_wildcard(require("react")));
const _card =
/* istanbul ignore next */
(cov_25xrn7djb2().s[5]++, require("../ui/card"));
const _button =
/* istanbul ignore next */
(cov_25xrn7djb2().s[6]++, require("../ui/button"));
const _label =
/* istanbul ignore next */
(cov_25xrn7djb2().s[7]++, require("../ui/label"));
const _input =
/* istanbul ignore next */
(cov_25xrn7djb2().s[8]++, require("../ui/input"));
const _alert =
/* istanbul ignore next */
(cov_25xrn7djb2().s[9]++, require("../ui/alert"));
const _badge =
/* istanbul ignore next */
(cov_25xrn7djb2().s[10]++, require("../ui/badge"));
const _progress =
/* istanbul ignore next */
(cov_25xrn7djb2().s[11]++, require("../ui/progress"));
const _tabs =
/* istanbul ignore next */
(cov_25xrn7djb2().s[12]++, require("../ui/tabs"));
const _select =
/* istanbul ignore next */
(cov_25xrn7djb2().s[13]++, require("../ui/select"));
const _lucidereact =
/* istanbul ignore next */
(cov_25xrn7djb2().s[14]++, require("lucide-react"));
const _client =
/* istanbul ignore next */
(cov_25xrn7djb2().s[15]++, require("../../lib/api/client"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_25xrn7djb2().f[1]++;
  cov_25xrn7djb2().s[16]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_25xrn7djb2().b[0][0]++;
    cov_25xrn7djb2().s[17]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_25xrn7djb2().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_25xrn7djb2().s[18]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_25xrn7djb2().s[19]++, new WeakMap());
  /* istanbul ignore next */
  cov_25xrn7djb2().s[20]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[2]++;
    cov_25xrn7djb2().s[21]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_25xrn7djb2().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_25xrn7djb2().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_25xrn7djb2().f[3]++;
  cov_25xrn7djb2().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_25xrn7djb2().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_25xrn7djb2().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_25xrn7djb2().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_25xrn7djb2().b[2][0]++;
    cov_25xrn7djb2().s[23]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_25xrn7djb2().b[2][1]++;
  }
  cov_25xrn7djb2().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_25xrn7djb2().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_25xrn7djb2().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_25xrn7djb2().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_25xrn7djb2().b[4][0]++;
    cov_25xrn7djb2().s[25]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_25xrn7djb2().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_25xrn7djb2().s[26]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_25xrn7djb2().s[27]++;
  if (
  /* istanbul ignore next */
  (cov_25xrn7djb2().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_25xrn7djb2().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_25xrn7djb2().b[6][0]++;
    cov_25xrn7djb2().s[28]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_25xrn7djb2().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_25xrn7djb2().s[29]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_25xrn7djb2().s[30]++,
  /* istanbul ignore next */
  (cov_25xrn7djb2().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_25xrn7djb2().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_25xrn7djb2().s[31]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_25xrn7djb2().s[32]++;
    if (
    /* istanbul ignore next */
    (cov_25xrn7djb2().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_25xrn7djb2().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_25xrn7djb2().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[33]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[11][1]++, null));
      /* istanbul ignore next */
      cov_25xrn7djb2().s[34]++;
      if (
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_25xrn7djb2().b[12][0]++;
        cov_25xrn7djb2().s[35]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_25xrn7djb2().b[12][1]++;
        cov_25xrn7djb2().s[36]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_25xrn7djb2().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_25xrn7djb2().s[37]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_25xrn7djb2().s[38]++;
  if (cache) {
    /* istanbul ignore next */
    cov_25xrn7djb2().b[14][0]++;
    cov_25xrn7djb2().s[39]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_25xrn7djb2().b[14][1]++;
  }
  cov_25xrn7djb2().s[40]++;
  return newObj;
}
const DEPENDENCY_TYPES =
/* istanbul ignore next */
(cov_25xrn7djb2().s[41]++, [{
  value: 'FS',
  label: '終了-開始 (FS)'
}, {
  value: 'SS',
  label: '同時開始 (SS)'
}, {
  value: 'FF',
  label: '同時終了 (FF)'
}, {
  value: 'SF',
  label: '開始-終了 (SF)'
}]);
const DEFAULT_RESOURCES =
/* istanbul ignore next */
(cov_25xrn7djb2().s[42]++, ['開発者', 'デザイナー', 'マネージャー', '外部委託']);
function ScheduleForm({
  applicationId,
  data,
  onChange,
  onValidate
}) {
  /* istanbul ignore next */
  cov_25xrn7djb2().f[4]++;
  const [formData, setFormData] =
  /* istanbul ignore next */
  (cov_25xrn7djb2().s[43]++, (0, _react.useState)(
  /* istanbul ignore next */
  (cov_25xrn7djb2().b[15][0]++, data) ||
  /* istanbul ignore next */
  (cov_25xrn7djb2().b[15][1]++, {
    tasks: [],
    projectStartDate: new Date().toISOString().split('T')[0],
    projectEndDate: '',
    criticalPathLength: 0,
    milestones: []
  })));
  const [isGenerating, setIsGenerating] =
  /* istanbul ignore next */
  (cov_25xrn7djb2().s[44]++, (0, _react.useState)(false));
  const [generationProgress, setGenerationProgress] =
  /* istanbul ignore next */
  (cov_25xrn7djb2().s[45]++, (0, _react.useState)(0));
  const [validationResult, setValidationResult] =
  /* istanbul ignore next */
  (cov_25xrn7djb2().s[46]++, (0, _react.useState)(null));
  const [errors, setErrors] =
  /* istanbul ignore next */
  (cov_25xrn7djb2().s[47]++, (0, _react.useState)({}));
  const [activeTab, setActiveTab] =
  /* istanbul ignore next */
  (cov_25xrn7djb2().s[48]++, (0, _react.useState)('wbs'));
  const [selectedTaskId, setSelectedTaskId] =
  /* istanbul ignore next */
  (cov_25xrn7djb2().s[49]++, (0, _react.useState)(null));
  const [expandedTasks, setExpandedTasks] =
  /* istanbul ignore next */
  (cov_25xrn7djb2().s[50]++, (0, _react.useState)(new Set()));
  // クリティカルパス計算 (CPM)
  /* istanbul ignore next */
  cov_25xrn7djb2().s[51]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[5]++;
    cov_25xrn7djb2().s[52]++;
    if (formData.tasks.length > 0) {
      /* istanbul ignore next */
      cov_25xrn7djb2().b[16][0]++;
      cov_25xrn7djb2().s[53]++;
      calculateCriticalPath();
    } else
    /* istanbul ignore next */
    {
      cov_25xrn7djb2().b[16][1]++;
    }
  }, [formData.tasks]);
  /* istanbul ignore next */
  cov_25xrn7djb2().s[54]++;
  const calculateCriticalPath = () => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[6]++;
    const tasks =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[55]++, [...formData.tasks]);
    const taskMap =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[56]++, new Map(tasks.map(t => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[7]++;
      cov_25xrn7djb2().s[57]++;
      return [t.id, t];
    })));
    // 初期化
    /* istanbul ignore next */
    cov_25xrn7djb2().s[58]++;
    tasks.forEach(task => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[8]++;
      cov_25xrn7djb2().s[59]++;
      task.criticalPath = false;
      /* istanbul ignore next */
      cov_25xrn7djb2().s[60]++;
      task.slack = 0;
    });
    // フォワードパス（最早開始・最早終了時刻）
    const earlyStart =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[61]++, new Map());
    const earlyFinish =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[62]++, new Map());
    /* istanbul ignore next */
    cov_25xrn7djb2().s[63]++;
    const getTaskStart = task => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[9]++;
      cov_25xrn7djb2().s[64]++;
      if (earlyStart.has(task.id)) {
        /* istanbul ignore next */
        cov_25xrn7djb2().b[17][0]++;
        cov_25xrn7djb2().s[65]++;
        return earlyStart.get(task.id);
      } else
      /* istanbul ignore next */
      {
        cov_25xrn7djb2().b[17][1]++;
      }
      let maxPrevFinish =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[66]++, 0);
      /* istanbul ignore next */
      cov_25xrn7djb2().s[67]++;
      task.dependencies.forEach(dep => {
        /* istanbul ignore next */
        cov_25xrn7djb2().f[10]++;
        const prevTask =
        /* istanbul ignore next */
        (cov_25xrn7djb2().s[68]++, taskMap.get(dep.taskId));
        /* istanbul ignore next */
        cov_25xrn7djb2().s[69]++;
        if (prevTask) {
          /* istanbul ignore next */
          cov_25xrn7djb2().b[18][0]++;
          const prevFinish =
          /* istanbul ignore next */
          (cov_25xrn7djb2().s[70]++, getTaskFinish(prevTask));
          /* istanbul ignore next */
          cov_25xrn7djb2().s[71]++;
          if (dep.type === 'FS') {
            /* istanbul ignore next */
            cov_25xrn7djb2().b[19][0]++;
            cov_25xrn7djb2().s[72]++;
            maxPrevFinish = Math.max(maxPrevFinish, prevFinish + dep.lag);
          } else
          /* istanbul ignore next */
          {
            cov_25xrn7djb2().b[19][1]++;
          }
          // 他の依存タイプの処理も追加可能
        } else
        /* istanbul ignore next */
        {
          cov_25xrn7djb2().b[18][1]++;
        }
      });
      /* istanbul ignore next */
      cov_25xrn7djb2().s[73]++;
      earlyStart.set(task.id, maxPrevFinish);
      /* istanbul ignore next */
      cov_25xrn7djb2().s[74]++;
      return maxPrevFinish;
    };
    /* istanbul ignore next */
    cov_25xrn7djb2().s[75]++;
    const getTaskFinish = task => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[11]++;
      cov_25xrn7djb2().s[76]++;
      if (earlyFinish.has(task.id)) {
        /* istanbul ignore next */
        cov_25xrn7djb2().b[20][0]++;
        cov_25xrn7djb2().s[77]++;
        return earlyFinish.get(task.id);
      } else
      /* istanbul ignore next */
      {
        cov_25xrn7djb2().b[20][1]++;
      }
      const start =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[78]++, getTaskStart(task));
      const finish =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[79]++, start + task.duration);
      /* istanbul ignore next */
      cov_25xrn7djb2().s[80]++;
      earlyFinish.set(task.id, finish);
      /* istanbul ignore next */
      cov_25xrn7djb2().s[81]++;
      return finish;
    };
    // 全タスクの最早開始・終了を計算
    /* istanbul ignore next */
    cov_25xrn7djb2().s[82]++;
    tasks.forEach(task => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[12]++;
      cov_25xrn7djb2().s[83]++;
      getTaskFinish(task);
    });
    // プロジェクト全体の最終日
    const projectFinish =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[84]++, Math.max(...tasks.map(t => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[13]++;
      cov_25xrn7djb2().s[85]++;
      return /* istanbul ignore next */(cov_25xrn7djb2().b[21][0]++, earlyFinish.get(t.id)) ||
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[21][1]++, 0);
    })));
    // バックワードパス（最遅開始・最遅終了時刻）
    const lateStart =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[86]++, new Map());
    const lateFinish =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[87]++, new Map());
    // 末端タスクから逆算
    /* istanbul ignore next */
    cov_25xrn7djb2().s[88]++;
    const calculateLateFinish = task => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[14]++;
      cov_25xrn7djb2().s[89]++;
      if (lateFinish.has(task.id)) {
        /* istanbul ignore next */
        cov_25xrn7djb2().b[22][0]++;
        cov_25xrn7djb2().s[90]++;
        return lateFinish.get(task.id);
      } else
      /* istanbul ignore next */
      {
        cov_25xrn7djb2().b[22][1]++;
      }
      // 後続タスクを探す
      const successors =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[91]++, tasks.filter(t => {
        /* istanbul ignore next */
        cov_25xrn7djb2().f[15]++;
        cov_25xrn7djb2().s[92]++;
        return t.dependencies.some(d => {
          /* istanbul ignore next */
          cov_25xrn7djb2().f[16]++;
          cov_25xrn7djb2().s[93]++;
          return d.taskId === task.id;
        });
      }));
      /* istanbul ignore next */
      cov_25xrn7djb2().s[94]++;
      if (successors.length === 0) {
        /* istanbul ignore next */
        cov_25xrn7djb2().b[23][0]++;
        cov_25xrn7djb2().s[95]++;
        // 末端タスク
        lateFinish.set(task.id, projectFinish);
        /* istanbul ignore next */
        cov_25xrn7djb2().s[96]++;
        return projectFinish;
      } else
      /* istanbul ignore next */
      {
        cov_25xrn7djb2().b[23][1]++;
      }
      let minSuccessorStart =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[97]++, projectFinish);
      /* istanbul ignore next */
      cov_25xrn7djb2().s[98]++;
      successors.forEach(successor => {
        /* istanbul ignore next */
        cov_25xrn7djb2().f[17]++;
        const successorLateStart =
        /* istanbul ignore next */
        (cov_25xrn7djb2().s[99]++, calculateLateStart(successor));
        const dep =
        /* istanbul ignore next */
        (cov_25xrn7djb2().s[100]++, successor.dependencies.find(d => {
          /* istanbul ignore next */
          cov_25xrn7djb2().f[18]++;
          cov_25xrn7djb2().s[101]++;
          return d.taskId === task.id;
        }));
        /* istanbul ignore next */
        cov_25xrn7djb2().s[102]++;
        if (
        /* istanbul ignore next */
        (cov_25xrn7djb2().b[25][0]++, dep) &&
        /* istanbul ignore next */
        (cov_25xrn7djb2().b[25][1]++, dep.type === 'FS')) {
          /* istanbul ignore next */
          cov_25xrn7djb2().b[24][0]++;
          cov_25xrn7djb2().s[103]++;
          minSuccessorStart = Math.min(minSuccessorStart, successorLateStart - dep.lag);
        } else
        /* istanbul ignore next */
        {
          cov_25xrn7djb2().b[24][1]++;
        }
      });
      /* istanbul ignore next */
      cov_25xrn7djb2().s[104]++;
      lateFinish.set(task.id, minSuccessorStart);
      /* istanbul ignore next */
      cov_25xrn7djb2().s[105]++;
      return minSuccessorStart;
    };
    /* istanbul ignore next */
    cov_25xrn7djb2().s[106]++;
    const calculateLateStart = task => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[19]++;
      cov_25xrn7djb2().s[107]++;
      if (lateStart.has(task.id)) {
        /* istanbul ignore next */
        cov_25xrn7djb2().b[26][0]++;
        cov_25xrn7djb2().s[108]++;
        return lateStart.get(task.id);
      } else
      /* istanbul ignore next */
      {
        cov_25xrn7djb2().b[26][1]++;
      }
      const finish =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[109]++, calculateLateFinish(task));
      const start =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[110]++, finish - task.duration);
      /* istanbul ignore next */
      cov_25xrn7djb2().s[111]++;
      lateStart.set(task.id, start);
      /* istanbul ignore next */
      cov_25xrn7djb2().s[112]++;
      return start;
    };
    // 全タスクの最遅開始・終了を計算
    /* istanbul ignore next */
    cov_25xrn7djb2().s[113]++;
    tasks.forEach(task => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[20]++;
      cov_25xrn7djb2().s[114]++;
      calculateLateStart(task);
    });
    // スラック（余裕）とクリティカルパスの判定
    /* istanbul ignore next */
    cov_25xrn7djb2().s[115]++;
    tasks.forEach(task => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[21]++;
      const es =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[116]++,
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[27][0]++, earlyStart.get(task.id)) ||
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[27][1]++, 0));
      const ls =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[117]++,
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[28][0]++, lateStart.get(task.id)) ||
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[28][1]++, 0));
      /* istanbul ignore next */
      cov_25xrn7djb2().s[118]++;
      task.slack = ls - es;
      /* istanbul ignore next */
      cov_25xrn7djb2().s[119]++;
      task.criticalPath = task.slack === 0;
    });
    // クリティカルパス長を計算
    const criticalPathLength =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[120]++, projectFinish);
    const newData =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[121]++, {
      ...formData,
      tasks,
      criticalPathLength,
      projectEndDate: addDaysToDate(formData.projectStartDate, criticalPathLength)
    });
    /* istanbul ignore next */
    cov_25xrn7djb2().s[122]++;
    setFormData(newData);
    /* istanbul ignore next */
    cov_25xrn7djb2().s[123]++;
    onChange(newData);
  };
  /* istanbul ignore next */
  cov_25xrn7djb2().s[124]++;
  const addDaysToDate = (dateStr, days) => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[22]++;
    const date =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[125]++, new Date(dateStr));
    /* istanbul ignore next */
    cov_25xrn7djb2().s[126]++;
    date.setDate(date.getDate() + days);
    /* istanbul ignore next */
    cov_25xrn7djb2().s[127]++;
    return date.toISOString().split('T')[0];
  };
  /* istanbul ignore next */
  cov_25xrn7djb2().s[128]++;
  const handleFieldChange = (field, value) => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[23]++;
    const newData =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[129]++, {
      ...formData,
      [field]: value
    });
    /* istanbul ignore next */
    cov_25xrn7djb2().s[130]++;
    setFormData(newData);
    /* istanbul ignore next */
    cov_25xrn7djb2().s[131]++;
    onChange(newData);
    // エラークリア
    /* istanbul ignore next */
    cov_25xrn7djb2().s[132]++;
    if (errors[field]) {
      /* istanbul ignore next */
      cov_25xrn7djb2().b[29][0]++;
      cov_25xrn7djb2().s[133]++;
      setErrors(prev => {
        /* istanbul ignore next */
        cov_25xrn7djb2().f[24]++;
        const newErrors =
        /* istanbul ignore next */
        (cov_25xrn7djb2().s[134]++, {
          ...prev
        });
        /* istanbul ignore next */
        cov_25xrn7djb2().s[135]++;
        delete newErrors[field];
        /* istanbul ignore next */
        cov_25xrn7djb2().s[136]++;
        return newErrors;
      });
    } else
    /* istanbul ignore next */
    {
      cov_25xrn7djb2().b[29][1]++;
    }
  };
  /* istanbul ignore next */
  cov_25xrn7djb2().s[137]++;
  const handleTaskChange = (index, field, value) => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[25]++;
    const newTasks =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[138]++, [...formData.tasks]);
    /* istanbul ignore next */
    cov_25xrn7djb2().s[139]++;
    newTasks[index] = {
      ...newTasks[index],
      [field]: value
    };
    // 期間の自動計算
    /* istanbul ignore next */
    cov_25xrn7djb2().s[140]++;
    if (
    /* istanbul ignore next */
    (cov_25xrn7djb2().b[31][0]++, field === 'startDate') ||
    /* istanbul ignore next */
    (cov_25xrn7djb2().b[31][1]++, field === 'endDate')) {
      /* istanbul ignore next */
      cov_25xrn7djb2().b[30][0]++;
      const start =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[141]++, new Date(newTasks[index].startDate));
      const end =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[142]++, new Date(newTasks[index].endDate));
      const diffTime =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[143]++, Math.abs(end.getTime() - start.getTime()));
      const diffDays =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[144]++, Math.ceil(diffTime / (1000 * 60 * 60 * 24)));
      /* istanbul ignore next */
      cov_25xrn7djb2().s[145]++;
      newTasks[index].duration = diffDays;
    } else
    /* istanbul ignore next */
    {
      cov_25xrn7djb2().b[30][1]++;
    }
    cov_25xrn7djb2().s[146]++;
    handleFieldChange('tasks', newTasks);
  };
  /* istanbul ignore next */
  cov_25xrn7djb2().s[147]++;
  const addTask = parentId => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[26]++;
    const parentTask =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[148]++, parentId ?
    /* istanbul ignore next */
    (cov_25xrn7djb2().b[32][0]++, formData.tasks.find(t => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[27]++;
      cov_25xrn7djb2().s[149]++;
      return t.id === parentId;
    })) :
    /* istanbul ignore next */
    (cov_25xrn7djb2().b[32][1]++, null));
    const level =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[150]++, parentTask ?
    /* istanbul ignore next */
    (cov_25xrn7djb2().b[33][0]++, parentTask.level + 1) :
    /* istanbul ignore next */
    (cov_25xrn7djb2().b[33][1]++, 0));
    const parentWbs =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[151]++, parentTask ?
    /* istanbul ignore next */
    (cov_25xrn7djb2().b[34][0]++, parentTask.wbsCode) :
    /* istanbul ignore next */
    (cov_25xrn7djb2().b[34][1]++, ''));
    const siblingCount =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[152]++, formData.tasks.filter(t => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[28]++;
      cov_25xrn7djb2().s[153]++;
      return /* istanbul ignore next */(cov_25xrn7djb2().b[35][0]++, t.parentId === parentId) &&
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[35][1]++, t.level === level);
    }).length);
    const newTask =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[154]++, {
      id: `task-${Date.now()}`,
      wbsCode: parentWbs ?
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[36][0]++, `${parentWbs}.${siblingCount + 1}`) :
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[36][1]++, `${siblingCount + 1}`),
      name: '',
      startDate:
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[37][0]++, formData.projectStartDate) ||
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[37][1]++, new Date().toISOString().split('T')[0]),
      endDate: addDaysToDate(
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[38][0]++, formData.projectStartDate) ||
      /* istanbul ignore next */
      (cov_25xrn7djb2().b[38][1]++, new Date().toISOString().split('T')[0]), 7),
      duration: 7,
      dependencies: [],
      progress: 0,
      milestone: false,
      criticalPath: false,
      slack: 0,
      level,
      parentId
    });
    /* istanbul ignore next */
    cov_25xrn7djb2().s[155]++;
    handleFieldChange('tasks', [...formData.tasks, newTask]);
  };
  /* istanbul ignore next */
  cov_25xrn7djb2().s[156]++;
  const removeTask = taskId => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[29]++;
    // 子タスクも同時に削除
    const tasksToRemove =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[157]++, new Set([taskId]));
    /* istanbul ignore next */
    cov_25xrn7djb2().s[158]++;
    const findChildren = parentId => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[30]++;
      cov_25xrn7djb2().s[159]++;
      formData.tasks.filter(t => {
        /* istanbul ignore next */
        cov_25xrn7djb2().f[31]++;
        cov_25xrn7djb2().s[160]++;
        return t.parentId === parentId;
      }).forEach(child => {
        /* istanbul ignore next */
        cov_25xrn7djb2().f[32]++;
        cov_25xrn7djb2().s[161]++;
        tasksToRemove.add(child.id);
        /* istanbul ignore next */
        cov_25xrn7djb2().s[162]++;
        findChildren(child.id);
      });
    };
    /* istanbul ignore next */
    cov_25xrn7djb2().s[163]++;
    findChildren(taskId);
    const newTasks =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[164]++, formData.tasks.filter(t => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[33]++;
      cov_25xrn7djb2().s[165]++;
      return !tasksToRemove.has(t.id);
    }));
    /* istanbul ignore next */
    cov_25xrn7djb2().s[166]++;
    handleFieldChange('tasks', newTasks);
  };
  /* istanbul ignore next */
  cov_25xrn7djb2().s[167]++;
  const addDependency = taskIndex => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[34]++;
    const task =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[168]++, formData.tasks[taskIndex]);
    /* istanbul ignore next */
    cov_25xrn7djb2().s[169]++;
    if (!task) {
      /* istanbul ignore next */
      cov_25xrn7djb2().b[39][0]++;
      cov_25xrn7djb2().s[170]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_25xrn7djb2().b[39][1]++;
    }
    const newDep =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[171]++, {
      taskId: '',
      type: 'FS',
      lag: 0
    });
    /* istanbul ignore next */
    cov_25xrn7djb2().s[172]++;
    handleTaskChange(taskIndex, 'dependencies', [...task.dependencies, newDep]);
  };
  /* istanbul ignore next */
  cov_25xrn7djb2().s[173]++;
  const updateDependency = (taskIndex, depIndex, field, value) => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[35]++;
    const task =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[174]++, formData.tasks[taskIndex]);
    /* istanbul ignore next */
    cov_25xrn7djb2().s[175]++;
    if (!task) {
      /* istanbul ignore next */
      cov_25xrn7djb2().b[40][0]++;
      cov_25xrn7djb2().s[176]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_25xrn7djb2().b[40][1]++;
    }
    const newDeps =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[177]++, [...task.dependencies]);
    /* istanbul ignore next */
    cov_25xrn7djb2().s[178]++;
    newDeps[depIndex] = {
      ...newDeps[depIndex],
      [field]: value
    };
    /* istanbul ignore next */
    cov_25xrn7djb2().s[179]++;
    handleTaskChange(taskIndex, 'dependencies', newDeps);
  };
  /* istanbul ignore next */
  cov_25xrn7djb2().s[180]++;
  const removeDependency = (taskIndex, depIndex) => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[36]++;
    const task =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[181]++, formData.tasks[taskIndex]);
    /* istanbul ignore next */
    cov_25xrn7djb2().s[182]++;
    if (!task) {
      /* istanbul ignore next */
      cov_25xrn7djb2().b[41][0]++;
      cov_25xrn7djb2().s[183]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_25xrn7djb2().b[41][1]++;
    }
    const newDeps =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[184]++, task.dependencies.filter((_, i) => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[37]++;
      cov_25xrn7djb2().s[185]++;
      return i !== depIndex;
    }));
    /* istanbul ignore next */
    cov_25xrn7djb2().s[186]++;
    handleTaskChange(taskIndex, 'dependencies', newDeps);
  };
  /* istanbul ignore next */
  cov_25xrn7djb2().s[187]++;
  const toggleTaskExpand = taskId => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[38]++;
    const newExpanded =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[188]++, new Set(expandedTasks));
    /* istanbul ignore next */
    cov_25xrn7djb2().s[189]++;
    if (newExpanded.has(taskId)) {
      /* istanbul ignore next */
      cov_25xrn7djb2().b[42][0]++;
      cov_25xrn7djb2().s[190]++;
      newExpanded.delete(taskId);
    } else {
      /* istanbul ignore next */
      cov_25xrn7djb2().b[42][1]++;
      cov_25xrn7djb2().s[191]++;
      newExpanded.add(taskId);
    }
    /* istanbul ignore next */
    cov_25xrn7djb2().s[192]++;
    setExpandedTasks(newExpanded);
  };
  /* istanbul ignore next */
  cov_25xrn7djb2().s[193]++;
  const handleAutoGenerate = async () => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[39]++;
    cov_25xrn7djb2().s[194]++;
    setIsGenerating(true);
    /* istanbul ignore next */
    cov_25xrn7djb2().s[195]++;
    setGenerationProgress(10);
    /* istanbul ignore next */
    cov_25xrn7djb2().s[196]++;
    try {
      /* istanbul ignore next */
      cov_25xrn7djb2().s[197]++;
      // スケジュール生成APIを呼び出し
      setGenerationProgress(30);
      const response =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[198]++, await _client.apiClient.post('/generate/schedule', {
        application_id: applicationId
      }));
      /* istanbul ignore next */
      cov_25xrn7djb2().s[199]++;
      setGenerationProgress(70);
      // レスポンスをパース
      const generatedTasks =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[200]++, parseGeneratedSchedule(response.content));
      /* istanbul ignore next */
      cov_25xrn7djb2().s[201]++;
      setGenerationProgress(90);
      // フォームデータを更新
      const newData =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[202]++, {
        ...formData,
        tasks: generatedTasks
      });
      /* istanbul ignore next */
      cov_25xrn7djb2().s[203]++;
      setFormData(newData);
      /* istanbul ignore next */
      cov_25xrn7djb2().s[204]++;
      onChange(newData);
      /* istanbul ignore next */
      cov_25xrn7djb2().s[205]++;
      setGenerationProgress(100);
      /* istanbul ignore next */
      cov_25xrn7djb2().s[206]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_25xrn7djb2().f[40]++;
        cov_25xrn7djb2().s[207]++;
        setGenerationProgress(0);
        /* istanbul ignore next */
        cov_25xrn7djb2().s[208]++;
        setActiveTab('wbs');
      }, 1000);
    } catch (error) {
      /* istanbul ignore next */
      cov_25xrn7djb2().s[209]++;
      setErrors({
        generation:
        /* istanbul ignore next */
        (cov_25xrn7djb2().b[43][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_25xrn7djb2().b[43][1]++, 'スケジュール生成に失敗しました')
      });
    } finally {
      /* istanbul ignore next */
      cov_25xrn7djb2().s[210]++;
      setIsGenerating(false);
    }
  };
  /* istanbul ignore next */
  cov_25xrn7djb2().s[211]++;
  const handleValidate = async () => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[41]++;
    cov_25xrn7djb2().s[212]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[213]++, await _client.apiClient.post('/validate/schedule', {
        tasks: formData.tasks,
        project_start: formData.projectStartDate,
        project_end: formData.projectEndDate
      }));
      /* istanbul ignore next */
      cov_25xrn7djb2().s[214]++;
      setValidationResult(result);
    } catch (error) {
      /* istanbul ignore next */
      cov_25xrn7djb2().s[215]++;
      setErrors({
        validation:
        /* istanbul ignore next */
        (cov_25xrn7djb2().b[44][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_25xrn7djb2().b[44][1]++, '検証に失敗しました')
      });
    }
  };
  /* istanbul ignore next */
  cov_25xrn7djb2().s[216]++;
  const parseGeneratedSchedule = content => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[42]++;
    const tasks =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[217]++, []);
    const lines =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[218]++, content.split('\n'));
    const taskIdMap =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[219]++, new Map());
    /* istanbul ignore next */
    cov_25xrn7djb2().s[220]++;
    for (const line of lines) {
      const wbsMatch =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[221]++, line.match(/^([\d.]+)\s+(.+)/));
      /* istanbul ignore next */
      cov_25xrn7djb2().s[222]++;
      if (wbsMatch) {
        /* istanbul ignore next */
        cov_25xrn7djb2().b[45][0]++;
        const wbsCode =
        /* istanbul ignore next */
        (cov_25xrn7djb2().s[223]++, wbsMatch[1]);
        const name =
        /* istanbul ignore next */
        (cov_25xrn7djb2().s[224]++, wbsMatch[2]);
        const level =
        /* istanbul ignore next */
        (cov_25xrn7djb2().s[225]++, (
        /* istanbul ignore next */
        (cov_25xrn7djb2().b[46][0]++, wbsCode.match(/\./g)) ||
        /* istanbul ignore next */
        (cov_25xrn7djb2().b[46][1]++, [])).length);
        const parentWbs =
        /* istanbul ignore next */
        (cov_25xrn7djb2().s[226]++, wbsCode.split('.').slice(0, -1).join('.'));
        const parentId =
        /* istanbul ignore next */
        (cov_25xrn7djb2().s[227]++, parentWbs ?
        /* istanbul ignore next */
        (cov_25xrn7djb2().b[47][0]++, taskIdMap.get(parentWbs)) :
        /* istanbul ignore next */
        (cov_25xrn7djb2().b[47][1]++, undefined));
        const taskId =
        /* istanbul ignore next */
        (cov_25xrn7djb2().s[228]++, `task-${Date.now()}-${tasks.length}`);
        /* istanbul ignore next */
        cov_25xrn7djb2().s[229]++;
        taskIdMap.set(wbsCode, taskId);
        /* istanbul ignore next */
        cov_25xrn7djb2().s[230]++;
        tasks.push({
          id: taskId,
          wbsCode,
          name: name.replace(/[\[\]\uff3b\uff3d]/g, '').trim(),
          startDate:
          /* istanbul ignore next */
          (cov_25xrn7djb2().b[48][0]++, formData.projectStartDate) ||
          /* istanbul ignore next */
          (cov_25xrn7djb2().b[48][1]++, new Date().toISOString().split('T')[0]),
          endDate: addDaysToDate(
          /* istanbul ignore next */
          (cov_25xrn7djb2().b[49][0]++, formData.projectStartDate) ||
          /* istanbul ignore next */
          (cov_25xrn7djb2().b[49][1]++, new Date().toISOString().split('T')[0]), 7),
          duration: 7,
          dependencies: [],
          progress: 0,
          milestone:
          /* istanbul ignore next */
          (cov_25xrn7djb2().b[50][0]++, name.includes('マイルストーン')) ||
          /* istanbul ignore next */
          (cov_25xrn7djb2().b[50][1]++, name.includes('\u25c7')),
          criticalPath: false,
          slack: 0,
          level,
          parentId
        });
      } else
      /* istanbul ignore next */
      {
        cov_25xrn7djb2().b[45][1]++;
      }
    }
    /* istanbul ignore next */
    cov_25xrn7djb2().s[231]++;
    return tasks;
  };
  /* istanbul ignore next */
  cov_25xrn7djb2().s[232]++;
  const validateForm = () => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[43]++;
    const newErrors =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[233]++, {});
    /* istanbul ignore next */
    cov_25xrn7djb2().s[234]++;
    if (
    /* istanbul ignore next */
    (cov_25xrn7djb2().b[52][0]++, !formData.tasks) ||
    /* istanbul ignore next */
    (cov_25xrn7djb2().b[52][1]++, formData.tasks.length === 0)) {
      /* istanbul ignore next */
      cov_25xrn7djb2().b[51][0]++;
      cov_25xrn7djb2().s[235]++;
      newErrors.tasks = 'タスクを少なくとも1つ追加してください';
    } else
    /* istanbul ignore next */
    {
      cov_25xrn7djb2().b[51][1]++;
    }
    cov_25xrn7djb2().s[236]++;
    formData.tasks.forEach((task, index) => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[44]++;
      cov_25xrn7djb2().s[237]++;
      if (!task.name) {
        /* istanbul ignore next */
        cov_25xrn7djb2().b[53][0]++;
        cov_25xrn7djb2().s[238]++;
        newErrors[`task-${index}-name`] = 'タスク名は必須です';
      } else
      /* istanbul ignore next */
      {
        cov_25xrn7djb2().b[53][1]++;
      }
      cov_25xrn7djb2().s[239]++;
      if (new Date(task.endDate) < new Date(task.startDate)) {
        /* istanbul ignore next */
        cov_25xrn7djb2().b[54][0]++;
        cov_25xrn7djb2().s[240]++;
        newErrors[`task-${index}-dates`] = '終了日は開始日より後に設定してください';
      } else
      /* istanbul ignore next */
      {
        cov_25xrn7djb2().b[54][1]++;
      }
    });
    // 循環依存のチェック
    const hasCyclicDependency =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[241]++, checkCyclicDependency());
    /* istanbul ignore next */
    cov_25xrn7djb2().s[242]++;
    if (hasCyclicDependency) {
      /* istanbul ignore next */
      cov_25xrn7djb2().b[55][0]++;
      cov_25xrn7djb2().s[243]++;
      newErrors.cyclic = '循環依存が検出されました';
    } else
    /* istanbul ignore next */
    {
      cov_25xrn7djb2().b[55][1]++;
    }
    cov_25xrn7djb2().s[244]++;
    setErrors(newErrors);
    /* istanbul ignore next */
    cov_25xrn7djb2().s[245]++;
    return Object.keys(newErrors).length === 0;
  };
  /* istanbul ignore next */
  cov_25xrn7djb2().s[246]++;
  const checkCyclicDependency = () => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[45]++;
    const visited =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[247]++, new Set());
    const recursionStack =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[248]++, new Set());
    /* istanbul ignore next */
    cov_25xrn7djb2().s[249]++;
    const hasCycle = taskId => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[46]++;
      cov_25xrn7djb2().s[250]++;
      visited.add(taskId);
      /* istanbul ignore next */
      cov_25xrn7djb2().s[251]++;
      recursionStack.add(taskId);
      const task =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[252]++, formData.tasks.find(t => {
        /* istanbul ignore next */
        cov_25xrn7djb2().f[47]++;
        cov_25xrn7djb2().s[253]++;
        return t.id === taskId;
      }));
      /* istanbul ignore next */
      cov_25xrn7djb2().s[254]++;
      if (task) {
        /* istanbul ignore next */
        cov_25xrn7djb2().b[56][0]++;
        cov_25xrn7djb2().s[255]++;
        for (const dep of task.dependencies) {
          /* istanbul ignore next */
          cov_25xrn7djb2().s[256]++;
          if (!visited.has(dep.taskId)) {
            /* istanbul ignore next */
            cov_25xrn7djb2().b[57][0]++;
            cov_25xrn7djb2().s[257]++;
            if (hasCycle(dep.taskId)) {
              /* istanbul ignore next */
              cov_25xrn7djb2().b[58][0]++;
              cov_25xrn7djb2().s[258]++;
              return true;
            } else
            /* istanbul ignore next */
            {
              cov_25xrn7djb2().b[58][1]++;
            }
          } else {
            /* istanbul ignore next */
            cov_25xrn7djb2().b[57][1]++;
            cov_25xrn7djb2().s[259]++;
            if (recursionStack.has(dep.taskId)) {
              /* istanbul ignore next */
              cov_25xrn7djb2().b[59][0]++;
              cov_25xrn7djb2().s[260]++;
              return true;
            } else
            /* istanbul ignore next */
            {
              cov_25xrn7djb2().b[59][1]++;
            }
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_25xrn7djb2().b[56][1]++;
      }
      cov_25xrn7djb2().s[261]++;
      recursionStack.delete(taskId);
      /* istanbul ignore next */
      cov_25xrn7djb2().s[262]++;
      return false;
    };
    /* istanbul ignore next */
    cov_25xrn7djb2().s[263]++;
    for (const task of formData.tasks) {
      /* istanbul ignore next */
      cov_25xrn7djb2().s[264]++;
      if (!visited.has(task.id)) {
        /* istanbul ignore next */
        cov_25xrn7djb2().b[60][0]++;
        cov_25xrn7djb2().s[265]++;
        if (hasCycle(task.id)) {
          /* istanbul ignore next */
          cov_25xrn7djb2().b[61][0]++;
          cov_25xrn7djb2().s[266]++;
          return true;
        } else
        /* istanbul ignore next */
        {
          cov_25xrn7djb2().b[61][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_25xrn7djb2().b[60][1]++;
      }
    }
    /* istanbul ignore next */
    cov_25xrn7djb2().s[267]++;
    return false;
  };
  // タスクのツリー表示用にソート
  const sortedTasks =
  /* istanbul ignore next */
  (cov_25xrn7djb2().s[268]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_25xrn7djb2().f[48]++;
    const sorted =
    /* istanbul ignore next */
    (cov_25xrn7djb2().s[269]++, []);
    /* istanbul ignore next */
    cov_25xrn7djb2().s[270]++;
    const addTaskAndChildren = parentId => {
      /* istanbul ignore next */
      cov_25xrn7djb2().f[49]++;
      const children =
      /* istanbul ignore next */
      (cov_25xrn7djb2().s[271]++, formData.tasks.filter(t => {
        /* istanbul ignore next */
        cov_25xrn7djb2().f[50]++;
        cov_25xrn7djb2().s[272]++;
        return t.parentId === parentId;
      }));
      /* istanbul ignore next */
      cov_25xrn7djb2().s[273]++;
      children.sort((a, b) => {
        /* istanbul ignore next */
        cov_25xrn7djb2().f[51]++;
        cov_25xrn7djb2().s[274]++;
        return a.wbsCode.localeCompare(b.wbsCode);
      });
      /* istanbul ignore next */
      cov_25xrn7djb2().s[275]++;
      children.forEach(task => {
        /* istanbul ignore next */
        cov_25xrn7djb2().f[52]++;
        cov_25xrn7djb2().s[276]++;
        sorted.push(task);
        /* istanbul ignore next */
        cov_25xrn7djb2().s[277]++;
        if (expandedTasks.has(task.id)) {
          /* istanbul ignore next */
          cov_25xrn7djb2().b[62][0]++;
          cov_25xrn7djb2().s[278]++;
          addTaskAndChildren(task.id);
        } else
        /* istanbul ignore next */
        {
          cov_25xrn7djb2().b[62][1]++;
        }
      });
    };
    /* istanbul ignore next */
    cov_25xrn7djb2().s[279]++;
    addTaskAndChildren(undefined);
    /* istanbul ignore next */
    cov_25xrn7djb2().s[280]++;
    return sorted;
  }, [formData.tasks, expandedTasks]));
  /* istanbul ignore next */
  cov_25xrn7djb2().s[281]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
        className: "flex items-center gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Calendar, {
          className: "h-5 w-5"
        }), "実施スケジュール"]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
        children: "プロジェクトのWBS（作業分解構造）とスケジュールを作成します。"
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.Tabs, {
        value: activeTab,
        onValueChange: setActiveTab,
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.TabsList, {
          className: "grid w-full grid-cols-3",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
            value: "wbs",
            children: "WBS編集"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
            value: "gantt",
            children: "ガントチャート"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
            value: "generate",
            children: "AI生成"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.TabsContent, {
          value: "wbs",
          className: "space-y-6 mt-6",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "grid grid-cols-3 gap-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                htmlFor: "projectStartDate",
                children: "プロジェクト開始日"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                id: "projectStartDate",
                type: "date",
                value: formData.projectStartDate,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_25xrn7djb2().f[53]++;
                  cov_25xrn7djb2().s[282]++;
                  return handleFieldChange('projectStartDate', e.target.value);
                }
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                children: "プロジェクト終了日（自動計算）"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                value: formData.projectEndDate,
                disabled: true
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                children: "クリティカルパス長"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                  value: `${formData.criticalPathLength}日`,
                  disabled: true
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                  variant: "destructive",
                  children: "重要"
                })]
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "space-y-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex justify-between items-center",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                children: "WBSタスク"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                type: "button",
                variant: "outline",
                size: "sm",
                onClick: () => {
                  /* istanbul ignore next */
                  cov_25xrn7djb2().f[54]++;
                  cov_25xrn7djb2().s[283]++;
                  return addTask();
                },
                className: "gap-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Plus, {
                  className: "h-4 w-4"
                }), "ルートタスク追加"]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "border rounded-lg",
              children: sortedTasks.map((task, index) => {
                /* istanbul ignore next */
                cov_25xrn7djb2().f[55]++;
                const originalIndex =
                /* istanbul ignore next */
                (cov_25xrn7djb2().s[284]++, formData.tasks.findIndex(t => {
                  /* istanbul ignore next */
                  cov_25xrn7djb2().f[56]++;
                  cov_25xrn7djb2().s[285]++;
                  return t.id === task.id;
                }));
                const hasChildren =
                /* istanbul ignore next */
                (cov_25xrn7djb2().s[286]++, formData.tasks.some(t => {
                  /* istanbul ignore next */
                  cov_25xrn7djb2().f[57]++;
                  cov_25xrn7djb2().s[287]++;
                  return t.parentId === task.id;
                }));
                const isExpanded =
                /* istanbul ignore next */
                (cov_25xrn7djb2().s[288]++, expandedTasks.has(task.id));
                /* istanbul ignore next */
                cov_25xrn7djb2().s[289]++;
                return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: `border-b last:border-b-0 ${task.criticalPath ?
                  /* istanbul ignore next */
                  (cov_25xrn7djb2().b[63][0]++, 'bg-destructive/5') :
                  /* istanbul ignore next */
                  (cov_25xrn7djb2().b[63][1]++, '')}`,
                  style: {
                    paddingLeft: `${task.level * 24 + 16}px`
                  },
                  children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "py-3 pr-4",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex items-start gap-4",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center gap-2 min-w-[100px]",
                        children: [
                        /* istanbul ignore next */
                        (cov_25xrn7djb2().b[64][0]++, hasChildren) &&
                        /* istanbul ignore next */
                        (cov_25xrn7djb2().b[64][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                          variant: "ghost",
                          size: "sm",
                          className: "h-6 w-6 p-0",
                          onClick: () => {
                            /* istanbul ignore next */
                            cov_25xrn7djb2().f[58]++;
                            cov_25xrn7djb2().s[290]++;
                            return toggleTaskExpand(task.id);
                          },
                          children: isExpanded ?
                          /* istanbul ignore next */
                          (cov_25xrn7djb2().b[65][0]++, '▼') :
                          /* istanbul ignore next */
                          (cov_25xrn7djb2().b[65][1]++, '▶')
                        })), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                          variant: "outline",
                          className: "font-mono",
                          children: task.wbsCode
                        }),
                        /* istanbul ignore next */
                        (cov_25xrn7djb2().b[66][0]++, task.milestone) &&
                        /* istanbul ignore next */
                        (cov_25xrn7djb2().b[66][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                          variant: "secondary",
                          children: "◇"
                        })),
                        /* istanbul ignore next */
                        (cov_25xrn7djb2().b[67][0]++, task.criticalPath) &&
                        /* istanbul ignore next */
                        (cov_25xrn7djb2().b[67][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                          variant: "destructive",
                          className: "text-xs",
                          children: "CP"
                        }))]
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex-1 grid grid-cols-6 gap-2",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                          className: "col-span-2",
                          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                            value: task.name,
                            onChange: e => {
                              /* istanbul ignore next */
                              cov_25xrn7djb2().f[59]++;
                              cov_25xrn7djb2().s[291]++;
                              return handleTaskChange(originalIndex, 'name', e.target.value);
                            },
                            placeholder: "タスク名",
                            className: `h-8 ${errors[`task-${originalIndex}-name`] ?
                            /* istanbul ignore next */
                            (cov_25xrn7djb2().b[68][0]++, 'border-destructive') :
                            /* istanbul ignore next */
                            (cov_25xrn7djb2().b[68][1]++, '')}`
                          })
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                            type: "date",
                            value: task.startDate,
                            onChange: e => {
                              /* istanbul ignore next */
                              cov_25xrn7djb2().f[60]++;
                              cov_25xrn7djb2().s[292]++;
                              return handleTaskChange(originalIndex, 'startDate', e.target.value);
                            },
                            className: "h-8"
                          })
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                            type: "date",
                            value: task.endDate,
                            onChange: e => {
                              /* istanbul ignore next */
                              cov_25xrn7djb2().f[61]++;
                              cov_25xrn7djb2().s[293]++;
                              return handleTaskChange(originalIndex, 'endDate', e.target.value);
                            },
                            className: `h-8 ${errors[`task-${originalIndex}-dates`] ?
                            /* istanbul ignore next */
                            (cov_25xrn7djb2().b[69][0]++, 'border-destructive') :
                            /* istanbul ignore next */
                            (cov_25xrn7djb2().b[69][1]++, '')}`
                          })
                        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "flex items-center gap-1",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                            type: "number",
                            value: task.progress,
                            onChange: e => {
                              /* istanbul ignore next */
                              cov_25xrn7djb2().f[62]++;
                              cov_25xrn7djb2().s[294]++;
                              return handleTaskChange(originalIndex, 'progress',
                              /* istanbul ignore next */
                              (cov_25xrn7djb2().b[70][0]++, parseInt(e.target.value)) ||
                              /* istanbul ignore next */
                              (cov_25xrn7djb2().b[70][1]++, 0));
                            },
                            className: "h-8",
                            min: "0",
                            max: "100"
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                            className: "text-sm",
                            children: "%"
                          })]
                        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "flex items-center gap-2",
                          children: [
                          /* istanbul ignore next */
                          (cov_25xrn7djb2().b[71][0]++, task.slack > 0) &&
                          /* istanbul ignore next */
                          (cov_25xrn7djb2().b[71][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
                            variant: "outline",
                            className: "text-xs",
                            children: ["余裕", task.slack, "日"]
                          })), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                            variant: "ghost",
                            size: "sm",
                            className: "h-8 px-2",
                            onClick: () => {
                              /* istanbul ignore next */
                              cov_25xrn7djb2().f[63]++;
                              cov_25xrn7djb2().s[295]++;
                              return addTask(task.id);
                            },
                            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Plus, {
                              className: "h-3 w-3"
                            })
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                            variant: "ghost",
                            size: "sm",
                            className: "h-8 px-2",
                            onClick: () => {
                              /* istanbul ignore next */
                              cov_25xrn7djb2().f[64]++;
                              cov_25xrn7djb2().s[296]++;
                              return removeTask(task.id);
                            },
                            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Trash2, {
                              className: "h-3 w-3"
                            })
                          })]
                        })]
                      })]
                    }),
                    /* istanbul ignore next */
                    (cov_25xrn7djb2().b[72][0]++, selectedTaskId === task.id) &&
                    /* istanbul ignore next */
                    (cov_25xrn7djb2().b[72][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "mt-3 p-3 bg-muted rounded-lg",
                      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "space-y-2",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                          className: "text-xs",
                          children: "依存関係"
                        }), task.dependencies.map((dep, depIndex) => {
                          /* istanbul ignore next */
                          cov_25xrn7djb2().f[65]++;
                          cov_25xrn7djb2().s[297]++;
                          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center gap-2",
                            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
                              value: dep.taskId,
                              onValueChange: value => {
                                /* istanbul ignore next */
                                cov_25xrn7djb2().f[66]++;
                                cov_25xrn7djb2().s[298]++;
                                return updateDependency(originalIndex, depIndex, 'taskId', value);
                              },
                              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
                                className: "h-8",
                                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {
                                  placeholder: "先行タスク"
                                })
                              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectContent, {
                                children: formData.tasks.filter(t => {
                                  /* istanbul ignore next */
                                  cov_25xrn7djb2().f[67]++;
                                  cov_25xrn7djb2().s[299]++;
                                  return t.id !== task.id;
                                }).map(t => {
                                  /* istanbul ignore next */
                                  cov_25xrn7djb2().f[68]++;
                                  cov_25xrn7djb2().s[300]++;
                                  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectItem, {
                                    value: t.id,
                                    children: [t.wbsCode, " ", t.name]
                                  }, t.id);
                                })
                              })]
                            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
                              value: dep.type,
                              onValueChange: value => {
                                /* istanbul ignore next */
                                cov_25xrn7djb2().f[69]++;
                                cov_25xrn7djb2().s[301]++;
                                return updateDependency(originalIndex, depIndex, 'type', value);
                              },
                              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
                                className: "h-8 w-24",
                                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {})
                              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectContent, {
                                children: DEPENDENCY_TYPES.map(type => {
                                  /* istanbul ignore next */
                                  cov_25xrn7djb2().f[70]++;
                                  cov_25xrn7djb2().s[302]++;
                                  return /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                                    value: type.value,
                                    children: type.label
                                  }, type.value);
                                })
                              })]
                            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                              type: "number",
                              value: dep.lag,
                              onChange: e => {
                                /* istanbul ignore next */
                                cov_25xrn7djb2().f[71]++;
                                cov_25xrn7djb2().s[303]++;
                                return updateDependency(originalIndex, depIndex, 'lag',
                                /* istanbul ignore next */
                                (cov_25xrn7djb2().b[73][0]++, parseInt(e.target.value)) ||
                                /* istanbul ignore next */
                                (cov_25xrn7djb2().b[73][1]++, 0));
                              },
                              placeholder: "遅延",
                              className: "h-8 w-20"
                            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                              variant: "ghost",
                              size: "sm",
                              onClick: () => {
                                /* istanbul ignore next */
                                cov_25xrn7djb2().f[72]++;
                                cov_25xrn7djb2().s[304]++;
                                return removeDependency(originalIndex, depIndex);
                              },
                              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Trash2, {
                                className: "h-3 w-3"
                              })
                            })]
                          }, depIndex);
                        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                          variant: "outline",
                          size: "sm",
                          onClick: () => {
                            /* istanbul ignore next */
                            cov_25xrn7djb2().f[73]++;
                            cov_25xrn7djb2().s[305]++;
                            return addDependency(originalIndex);
                          },
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Plus, {
                            className: "h-3 w-3 mr-1"
                          }), "依存追加"]
                        })]
                      })
                    })), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                      variant: "ghost",
                      size: "sm",
                      className: "mt-2 text-xs",
                      onClick: () => {
                        /* istanbul ignore next */
                        cov_25xrn7djb2().f[74]++;
                        cov_25xrn7djb2().s[306]++;
                        return setSelectedTaskId(task.id === selectedTaskId ?
                        /* istanbul ignore next */
                        (cov_25xrn7djb2().b[74][0]++, null) :
                        /* istanbul ignore next */
                        (cov_25xrn7djb2().b[74][1]++, task.id));
                      },
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.GitBranch, {
                        className: "h-3 w-3 mr-1"
                      }), "依存関係"]
                    })]
                  })
                }, task.id);
              })
            }),
            /* istanbul ignore next */
            (cov_25xrn7djb2().b[75][0]++, errors.tasks) &&
            /* istanbul ignore next */
            (cov_25xrn7djb2().b[75][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
              variant: "destructive",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
                className: "h-4 w-4"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertDescription, {
                children: errors.tasks
              })]
            })),
            /* istanbul ignore next */
            (cov_25xrn7djb2().b[76][0]++, errors.cyclic) &&
            /* istanbul ignore next */
            (cov_25xrn7djb2().b[76][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
              variant: "destructive",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                className: "h-4 w-4"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertDescription, {
                children: errors.cyclic
              })]
            }))]
          }),
          /* istanbul ignore next */
          (cov_25xrn7djb2().b[77][0]++, formData.tasks.some(t => {
            /* istanbul ignore next */
            cov_25xrn7djb2().f[75]++;
            cov_25xrn7djb2().s[307]++;
            return t.criticalPath;
          })) &&
          /* istanbul ignore next */
          (cov_25xrn7djb2().b[77][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
              className: "h-4 w-4"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.AlertDescription, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "font-medium mb-2",
                children: "クリティカルパス："
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "flex flex-wrap gap-2",
                children: formData.tasks.filter(t => {
                  /* istanbul ignore next */
                  cov_25xrn7djb2().f[76]++;
                  cov_25xrn7djb2().s[308]++;
                  return t.criticalPath;
                }).map(t => {
                  /* istanbul ignore next */
                  cov_25xrn7djb2().f[77]++;
                  cov_25xrn7djb2().s[309]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
                    variant: "destructive",
                    children: [t.wbsCode, " ", t.name]
                  }, t.id);
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "text-xs mt-2",
                children: "これらのタスクが遅延するとプロジェクト全体が遅延します"
              })]
            })]
          })), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "flex justify-end gap-2",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
              type: "button",
              variant: "outline",
              onClick: handleValidate,
              disabled: formData.tasks.length === 0,
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
                className: "h-4 w-4 mr-2"
              }), "スケジュールを検証"]
            })
          }),
          /* istanbul ignore next */
          (cov_25xrn7djb2().b[78][0]++, validationResult) &&
          /* istanbul ignore next */
          (cov_25xrn7djb2().b[78][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
            variant: validationResult.is_valid ?
            /* istanbul ignore next */
            (cov_25xrn7djb2().b[79][0]++, 'default') :
            /* istanbul ignore next */
            (cov_25xrn7djb2().b[79][1]++, 'destructive'),
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
              className: "h-4 w-4"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertDescription, {
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-1",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  className: "font-medium",
                  children: validationResult.is_valid ?
                  /* istanbul ignore next */
                  (cov_25xrn7djb2().b[80][0]++, '検証成功') :
                  /* istanbul ignore next */
                  (cov_25xrn7djb2().b[80][1]++, '検証エラー')
                }), validationResult.messages.map((msg, i) => {
                  /* istanbul ignore next */
                  cov_25xrn7djb2().f[78]++;
                  cov_25xrn7djb2().s[310]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                    className: "text-sm",
                    children: msg
                  }, i);
                })]
              })
            })]
          }))]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
          value: "gantt",
          className: "mt-6",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Info, {
              className: "h-4 w-4"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertDescription, {
              children: "ガントチャート表示機能は別コンポーネントで実装予定です。 WBS編集画面でタスクを入力してください。"
            })]
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.TabsContent, {
          value: "generate",
          className: "space-y-6 mt-6",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Sparkles, {
              className: "h-4 w-4"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertDescription, {
              children: "AIが事業内容に基づいて適切なWBSとスケジュールを自動生成します。 生成後は手動で編集可能です。"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "space-y-4",
            children: [
            /* istanbul ignore next */
            (cov_25xrn7djb2().b[81][0]++, !isGenerating) &&
            /* istanbul ignore next */
            (cov_25xrn7djb2().b[81][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
              onClick: handleAutoGenerate,
              className: "w-full gap-2",
              size: "lg",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Sparkles, {
                className: "h-4 w-4"
              }), "WBS・スケジュールを自動生成"]
            })),
            /* istanbul ignore next */
            (cov_25xrn7djb2().b[82][0]++, isGenerating) &&
            /* istanbul ignore next */
            (cov_25xrn7djb2().b[82][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "flex items-center justify-center py-8",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
                  className: "h-8 w-8 animate-spin text-primary"
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_progress.Progress, {
                value: generationProgress,
                className: "h-2"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                className: "text-center text-sm text-muted-foreground",
                children: [
                /* istanbul ignore next */
                (cov_25xrn7djb2().b[83][0]++, generationProgress < 30) &&
                /* istanbul ignore next */
                (cov_25xrn7djb2().b[83][1]++, '事業内容を分析中...'),
                /* istanbul ignore next */
                (cov_25xrn7djb2().b[84][0]++, generationProgress >= 30) &&
                /* istanbul ignore next */
                (cov_25xrn7djb2().b[84][1]++, generationProgress < 70) &&
                /* istanbul ignore next */
                (cov_25xrn7djb2().b[84][2]++, 'WBSを構築中...'),
                /* istanbul ignore next */
                (cov_25xrn7djb2().b[85][0]++, generationProgress >= 70) &&
                /* istanbul ignore next */
                (cov_25xrn7djb2().b[85][1]++, generationProgress < 90) &&
                /* istanbul ignore next */
                (cov_25xrn7djb2().b[85][2]++, 'スケジュールを最適化中...'),
                /* istanbul ignore next */
                (cov_25xrn7djb2().b[86][0]++, generationProgress >= 90) &&
                /* istanbul ignore next */
                (cov_25xrn7djb2().b[86][1]++, '最終調整中...')]
              })]
            })),
            /* istanbul ignore next */
            (cov_25xrn7djb2().b[87][0]++, errors.generation) &&
            /* istanbul ignore next */
            (cov_25xrn7djb2().b[87][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
              variant: "destructive",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
                className: "h-4 w-4"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertDescription, {
                children: errors.generation
              })]
            }))]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Info, {
              className: "h-4 w-4"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertDescription, {
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  className: "font-medium",
                  children: "生成されるスケジュールの特徴："
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("ul", {
                  className: "list-disc list-inside space-y-1 text-sm",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                    children: "適切なWBS階層構造（レベル2-3）"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                    children: "依存関係の自動設定"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                    children: "クリティカルパスの特定"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                    children: "マイルストーンの適切な配置"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                    children: "現実的な期間設定"
                  })]
                })]
              })
            })]
          })]
        })]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,