{"version":3,"names":["UploadAnalytics","files","className","cov_3kwow7i6e","b","f","totalFiles","s","length","completedFiles","filter","status","totalCharts","reduce","sum","structuredData","charts","totalTables","tables","qualityScores","qualityScore","undefined","map","avgQuality","score","minQuality","Math","min","maxQuality","max","fileTypeStats","acc","file","type","includes","ocrStats","ocrResult","avgConfidence","confidence","_","arr","estimatedProcessingTime","completionRate","_jsxruntime","jsx","_card","Card","jsxs","CardContent","_lucidereact","BarChart3","FileText","Target","round","Database","CardHeader","TrendingUp","CardTitle","_badge","Badge","_progress","Progress","value","Clock","toFixed","Zap","CheckCircle2","CardDescription","Object","entries","count","percentage","AlertTriangle"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/upload/UploadAnalytics.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { \n  TrendingUp, \n  Clock, \n  Target, \n  BarChart3,\n  FileText,\n  CheckCircle2,\n  AlertTriangle,\n  Database,\n  Zap\n} from 'lucide-react';\nimport { UploadedFile } from '@/types/upload';\n\ninterface UploadAnalyticsProps {\n  files: UploadedFile[];\n  className?: string;\n}\n\nexport function UploadAnalytics({ files, className = '' }: UploadAnalyticsProps) {\n  // 基本統計\n  const totalFiles = files.length;\n  const completedFiles = files.filter(f => f.status === 'completed').length;\n  const totalCharts = files.reduce((sum, f) => sum + (f.structuredData?.charts?.length || 0), 0);\n  const totalTables = files.reduce((sum, f) => sum + (f.structuredData?.tables?.length || 0), 0);\n  \n  // 品質スコア統計\n  const qualityScores = files\n    .filter(f => f.qualityScore !== undefined)\n    .map(f => f.qualityScore!);\n  const avgQuality = qualityScores.length > 0 \n    ? qualityScores.reduce((sum, score) => sum + score, 0) / qualityScores.length \n    : 0;\n  const minQuality = qualityScores.length > 0 ? Math.min(...qualityScores) : 0;\n  const maxQuality = qualityScores.length > 0 ? Math.max(...qualityScores) : 0;\n  \n  // ファイルタイプ分析\n  const fileTypeStats = files.reduce((acc, file) => {\n    const type = file.type.includes('pdf') ? 'PDF' \n                : file.type.includes('image') ? '画像'\n                : file.type.includes('excel') || file.type.includes('csv') ? 'Excel/CSV'\n                : 'その他';\n    acc[type] = (acc[type] || 0) + 1;\n    return acc;\n  }, {} as Record<string, number>);\n  \n  // OCR分析\n  const ocrStats = files.filter(f => f.ocrResult).length;\n  const avgConfidence = files\n    .filter(f => f.ocrResult?.confidence !== undefined)\n    .reduce((sum, f, _, arr) => sum + f.ocrResult!.confidence / arr.length, 0);\n  \n  // 処理時間推定（サンプルデータベース）\n  const estimatedProcessingTime = files.length * 2.5; // 平均2.5秒/ファイル\n  const completionRate = totalFiles > 0 ? (completedFiles / totalFiles) * 100 : 0;\n  \n  if (totalFiles === 0) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"text-center py-8\">\n          <BarChart3 className=\"h-12 w-12 mx-auto text-gray-400 mb-4\" />\n          <p className=\"text-gray-500\">ファイルをアップロードすると分析結果が表示されます</p>\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* メインKPI */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n        <Card className=\"text-center bg-gradient-to-br from-blue-50 to-blue-100 border-blue-200\">\n          <CardContent className=\"pt-6\">\n            <FileText className=\"h-8 w-8 mx-auto text-blue-600 mb-2\" />\n            <div className=\"text-2xl font-bold text-blue-900\">{totalFiles}</div>\n            <div className=\"text-sm text-blue-700\">処理ファイル数</div>\n          </CardContent>\n        </Card>\n        \n        <Card className=\"text-center bg-gradient-to-br from-green-50 to-green-100 border-green-200\">\n          <CardContent className=\"pt-6\">\n            <Target className=\"h-8 w-8 mx-auto text-green-600 mb-2\" />\n            <div className=\"text-2xl font-bold text-green-900\">{Math.round(avgQuality * 100)}%</div>\n            <div className=\"text-sm text-green-700\">平均品質スコア</div>\n          </CardContent>\n        </Card>\n        \n        <Card className=\"text-center bg-gradient-to-br from-purple-50 to-purple-100 border-purple-200\">\n          <CardContent className=\"pt-6\">\n            <BarChart3 className=\"h-8 w-8 mx-auto text-purple-600 mb-2\" />\n            <div className=\"text-2xl font-bold text-purple-900\">{totalCharts}</div>\n            <div className=\"text-sm text-purple-700\">抽出グラフ数</div>\n          </CardContent>\n        </Card>\n        \n        <Card className=\"text-center bg-gradient-to-br from-orange-50 to-orange-100 border-orange-200\">\n          <CardContent className=\"pt-6\">\n            <Database className=\"h-8 w-8 mx-auto text-orange-600 mb-2\" />\n            <div className=\"text-2xl font-bold text-orange-900\">{totalTables}</div>\n            <div className=\"text-sm text-orange-700\">抽出表数</div>\n          </CardContent>\n        </Card>\n      </div>\n      \n      {/* 処理進捗 */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2\">\n              <TrendingUp className=\"h-5 w-5 text-green-600\" />\n              <CardTitle className=\"text-lg\">処理進捗状況</CardTitle>\n            </div>\n            <Badge className=\"bg-green-100 text-green-800\">\n              {completedFiles}/{totalFiles} 完了\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div>\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-sm font-medium\">全体進捗</span>\n                <span className=\"text-sm text-gray-600\">{Math.round(completionRate)}%</span>\n              </div>\n              <Progress value={completionRate} className=\"h-3\" />\n            </div>\n            \n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n              <div className=\"flex items-center space-x-2\">\n                <Clock className=\"h-4 w-4 text-blue-500\" />\n                <span>予想処理時間: {estimatedProcessingTime.toFixed(1)}秒</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Zap className=\"h-4 w-4 text-yellow-500\" />\n                <span>OCR解析済み: {ocrStats}件</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <CheckCircle2 className=\"h-4 w-4 text-green-500\" />\n                <span>完了率: {Math.round(completionRate)}%</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Target className=\"h-4 w-4 text-purple-500\" />\n                <span>OCR信頼度: {Math.round(avgConfidence * 100)}%</span>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* ファイルタイプ分布 */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">ファイルタイプ分布</CardTitle>\n          <CardDescription>アップロードされたファイルの種類別統計</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            {Object.entries(fileTypeStats).map(([type, count]) => {\n              const percentage = (count / totalFiles) * 100;\n              return (\n                <div key={type} className=\"space-y-1\">\n                  <div className=\"flex items-center justify-between text-sm\">\n                    <span className=\"font-medium\">{type}</span>\n                    <span className=\"text-gray-600\">{count}件 ({percentage.toFixed(1)}%)</span>\n                  </div>\n                  <Progress value={percentage} className=\"h-2\" />\n                </div>\n              );\n            })}\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* 品質分析 */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">品質分析（worker2 Evidence技術）</CardTitle>\n          <CardDescription>自動品質スコアリングによる解析精度評価</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"text-center p-4 bg-green-50 rounded border border-green-200\">\n              <div className=\"text-2xl font-bold text-green-900 mb-1\">\n                {Math.round(maxQuality * 100)}%\n              </div>\n              <div className=\"text-sm text-green-700\">最高品質スコア</div>\n            </div>\n            \n            <div className=\"text-center p-4 bg-blue-50 rounded border border-blue-200\">\n              <div className=\"text-2xl font-bold text-blue-900 mb-1\">\n                {Math.round(avgQuality * 100)}%\n              </div>\n              <div className=\"text-sm text-blue-700\">平均品質スコア</div>\n            </div>\n            \n            <div className=\"text-center p-4 bg-orange-50 rounded border border-orange-200\">\n              <div className=\"text-2xl font-bold text-orange-900 mb-1\">\n                {Math.round(minQuality * 100)}%\n              </div>\n              <div className=\"text-sm text-orange-700\">最低品質スコア</div>\n            </div>\n          </div>\n          \n          <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded\">\n            <div className=\"flex items-start space-x-3\">\n              <AlertTriangle className=\"h-5 w-5 text-blue-600 mt-0.5\" />\n              <div>\n                <h4 className=\"font-medium text-blue-900 mb-1\">worker2技術統合ポイント</h4>\n                <ul className=\"text-sm text-blue-800 space-y-1\">\n                  <li>• 品質スコア90%以上: 高精度自動解析完了</li>\n                  <li>• 品質スコア70-89%: 一部手動確認推奨</li>\n                  <li>• 品質スコア70%未満: 再スキャンまたは手動処理推奨</li>\n                  <li>• worker2のEvidence技術により信頼性評価を自動実行</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}