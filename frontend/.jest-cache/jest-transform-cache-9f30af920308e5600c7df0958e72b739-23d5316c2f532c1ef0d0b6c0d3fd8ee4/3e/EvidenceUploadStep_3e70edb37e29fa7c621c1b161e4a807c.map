{"version":3,"names":["EvidenceUploadStep","FILE_TYPES","cov_4gnj20zdn","s","icon","_lucidereact","FileText","color","Image","FileSpreadsheet","data","onComplete","f","uploadedFiles","setUploadedFiles","_react","useState","isProcessing","setIsProcessing","onDrop","useCallback","acceptedFiles","newFiles","map","file","status","progress","prev","forEach","uploadedFile","index","simulateFileProcessing","uploadInterval","setInterval","updated","fileIndex","findIndex","b","clearInterval","setTimeout","processed","ocrResult","text","name","confidence","removeFile","filter","getRootProps","getInputProps","isDragActive","_reactdropzone","useDropzone","accept","maxSize","handleComplete","completedFiles","files","processedDocuments","allFilesProcessed","length","every","_jsxruntime","jsxs","className","_alert","Alert","jsx","AlertCircle","AlertDescription","Upload","_card","Card","CardHeader","CardTitle","CardDescription","CardContent","fileType","type","Icon","size","toFixed","_progress","Progress","value","CheckCircle","_button","Button","variant","onClick","X","disabled"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/application/steps/EvidenceUploadStep.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Progress } from '@/components/ui/progress';\nimport { \n  Upload, \n  File, \n  X, \n  CheckCircle, \n  AlertCircle,\n  FileText,\n  Image,\n  FileSpreadsheet\n} from 'lucide-react';\n\ninterface EvidenceUploadStepProps {\n  data: {\n    files: File[];\n    processedDocuments: any[];\n  };\n  onComplete: (data: any) => void;\n}\n\ninterface UploadedFile {\n  file: File;\n  status: 'uploading' | 'processing' | 'completed' | 'error';\n  progress: number;\n  ocrResult?: any;\n  error?: string;\n}\n\nconst FILE_TYPES = {\n  'application/pdf': { icon: FileText, color: 'text-red-500' },\n  'image/jpeg': { icon: Image, color: 'text-blue-500' },\n  'image/png': { icon: Image, color: 'text-blue-500' },\n  'application/vnd.ms-excel': { icon: FileSpreadsheet, color: 'text-green-500' },\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': { icon: FileSpreadsheet, color: 'text-green-500' },\n};\n\nexport function EvidenceUploadStep({ data, onComplete }: EvidenceUploadStepProps) {\n  const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const onDrop = useCallback((acceptedFiles: File[]) => {\n    const newFiles = acceptedFiles.map(file => ({\n      file,\n      status: 'uploading' as const,\n      progress: 0,\n    }));\n\n    setUploadedFiles(prev => [...prev, ...newFiles]);\n\n    // Simulate file upload and processing\n    newFiles.forEach((uploadedFile, index) => {\n      simulateFileProcessing(uploadedFile, index);\n    });\n  }, []);\n\n  const simulateFileProcessing = (uploadedFile: UploadedFile, index: number) => {\n    // Simulate upload progress\n    const uploadInterval = setInterval(() => {\n      setUploadedFiles(prev => {\n        const updated = [...prev];\n        const fileIndex = prev.findIndex(f => f.file === uploadedFile.file);\n        if (fileIndex !== -1 && updated[fileIndex].progress < 100) {\n          updated[fileIndex].progress += 20;\n          if (updated[fileIndex].progress >= 100) {\n            updated[fileIndex].status = 'processing';\n            clearInterval(uploadInterval);\n            // Start OCR processing\n            setTimeout(() => {\n              setUploadedFiles(prev => {\n                const processed = [...prev];\n                processed[fileIndex].status = 'completed';\n                processed[fileIndex].ocrResult = {\n                  text: `OCR結果: ${uploadedFile.file.name}から抽出されたテキスト`,\n                  confidence: 0.95,\n                };\n                return processed;\n              });\n            }, 2000);\n          }\n        }\n        return updated;\n      });\n    }, 500);\n  };\n\n  const removeFile = (file: File) => {\n    setUploadedFiles(prev => prev.filter(f => f.file !== file));\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'image/*': ['.png', '.jpg', '.jpeg'],\n      'application/vnd.ms-excel': ['.xls'],\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['.xlsx'],\n    },\n    maxSize: 10 * 1024 * 1024, // 10MB\n  });\n\n  const handleComplete = () => {\n    const completedFiles = uploadedFiles.filter(f => f.status === 'completed');\n    onComplete({\n      files: completedFiles.map(f => f.file),\n      processedDocuments: completedFiles.map(f => f.ocrResult),\n    });\n  };\n\n  const allFilesProcessed = uploadedFiles.length > 0 && \n    uploadedFiles.every(f => f.status === 'completed' || f.status === 'error');\n\n  return (\n    <div className=\"space-y-6\">\n      <Alert>\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertDescription>\n          見積書、事業計画書、決算書などの証拠書類をアップロードしてください。\n          対応形式：PDF、画像（JPG/PNG）、Excel\n        </AlertDescription>\n      </Alert>\n\n      <div\n        {...getRootProps()}\n        className={`\n          border-2 border-dashed rounded-lg p-8 text-center cursor-pointer\n          transition-colors duration-200\n          ${isDragActive ? 'border-primary bg-primary/5' : 'border-gray-300 dark:border-gray-700'}\n          hover:border-primary hover:bg-primary/5\n        `}\n      >\n        <input {...getInputProps()} />\n        <Upload className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\n        <p className=\"text-lg font-medium mb-2\">\n          {isDragActive ? 'ファイルをドロップ' : 'ファイルをドラッグ&ドロップ'}\n        </p>\n        <p className=\"text-sm text-gray-500\">\n          またはクリックしてファイルを選択\n        </p>\n        <p className=\"text-xs text-gray-400 mt-2\">\n          最大10MB / PDF, JPG, PNG, Excel形式\n        </p>\n      </div>\n\n      {uploadedFiles.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle>アップロードファイル</CardTitle>\n            <CardDescription>\n              {uploadedFiles.filter(f => f.status === 'completed').length} / {uploadedFiles.length} ファイル処理完了\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            {uploadedFiles.map((uploadedFile, index) => {\n              const fileType = FILE_TYPES[uploadedFile.file.type as keyof typeof FILE_TYPES] || \n                { icon: FileText, color: 'text-gray-500' };\n              const Icon = fileType.icon;\n\n              return (\n                <div key={index} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                  <div className=\"flex items-center space-x-3 flex-1\">\n                    <Icon className={`h-8 w-8 ${fileType.color}`} />\n                    <div className=\"flex-1\">\n                      <p className=\"font-medium text-sm\">{uploadedFile.file.name}</p>\n                      <p className=\"text-xs text-gray-500\">\n                        {(uploadedFile.file.size / 1024).toFixed(1)} KB\n                      </p>\n                      {uploadedFile.status === 'uploading' && (\n                        <Progress value={uploadedFile.progress} className=\"h-1 mt-2\" />\n                      )}\n                      {uploadedFile.status === 'processing' && (\n                        <p className=\"text-xs text-blue-600 mt-1\">OCR処理中...</p>\n                      )}\n                      {uploadedFile.status === 'completed' && uploadedFile.ocrResult && (\n                        <p className=\"text-xs text-green-600 mt-1\">\n                          処理完了（信頼度: {(uploadedFile.ocrResult.confidence * 100).toFixed(0)}%）\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    {uploadedFile.status === 'completed' && (\n                      <CheckCircle className=\"h-5 w-5 text-green-500\" />\n                    )}\n                    {uploadedFile.status === 'error' && (\n                      <AlertCircle className=\"h-5 w-5 text-red-500\" />\n                    )}\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => removeFile(uploadedFile.file)}\n                    >\n                      <X className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              );\n            })}\n          </CardContent>\n        </Card>\n      )}\n\n      <div className=\"flex justify-end\">\n        <Button \n          onClick={handleComplete}\n          disabled={!allFilesProcessed || uploadedFiles.length === 0}\n        >\n          次へ進む\n        </Button>\n      </div>\n    </div>\n  );\n}"],"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","ignoreList":[]}