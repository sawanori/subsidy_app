088fbfc0fe7a788aed993614c47e9120
'use client';
"use strict";

/* istanbul ignore next */
function cov_h9tjs8w6b() {
  var path = "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/application/steps/GanttChartStep.tsx";
  var hash = "27234eed7e1a943ab955e2dd4426f4a297fce8d1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/application/steps/GanttChartStep.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 30
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 13,
          column: 49
        }
      },
      "5": {
        start: {
          line: 14,
          column: 13
        },
        end: {
          line: 14,
          column: 47
        }
      },
      "6": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 69
        }
      },
      "7": {
        start: {
          line: 16,
          column: 14
        },
        end: {
          line: 16,
          column: 38
        }
      },
      "8": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "9": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "10": {
        start: {
          line: 19,
          column: 14
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "11": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 42
        }
      },
      "12": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "13": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 46
        }
      },
      "14": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "15": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "16": {
        start: {
          line: 25,
          column: 39
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "17": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "18": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "19": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 20
        }
      },
      "20": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "21": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "22": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "23": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "24": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "25": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 53
        }
      },
      "26": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "27": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "28": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "29": {
        start: {
          line: 48,
          column: 32
        },
        end: {
          line: 48,
          column: 88
        }
      },
      "30": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "31": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "32": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 95
        }
      },
      "33": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "34": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "35": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "36": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "37": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "38": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 31
        }
      },
      "39": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 18
        }
      },
      "40": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 80,
          column: 2
        }
      },
      "41": {
        start: {
          line: 81,
          column: 19
        },
        end: {
          line: 102,
          column: 1
        }
      },
      "42": {
        start: {
          line: 104,
          column: 17
        },
        end: {
          line: 127,
          column: 6
        }
      },
      "43": {
        start: {
          line: 107,
          column: 56
        },
        end: {
          line: 115,
          column: 17
        }
      },
      "44": {
        start: {
          line: 128,
          column: 39
        },
        end: {
          line: 131,
          column: 6
        }
      },
      "45": {
        start: {
          line: 132,
          column: 21
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "46": {
        start: {
          line: 133,
          column: 33
        },
        end: {
          line: 144,
          column: 15
        }
      },
      "47": {
        start: {
          line: 133,
          column: 68
        },
        end: {
          line: 144,
          column: 13
        }
      },
      "48": {
        start: {
          line: 141,
          column: 44
        },
        end: {
          line: 141,
          column: 69
        }
      },
      "49": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 37
        }
      },
      "50": {
        start: {
          line: 147,
          column: 30
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "51": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 37
        }
      },
      "52": {
        start: {
          line: 148,
          column: 28
        },
        end: {
          line: 148,
          column: 37
        }
      },
      "53": {
        start: {
          line: 149,
          column: 26
        },
        end: {
          line: 149,
          column: 41
        }
      },
      "54": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 150,
          column: 37
        }
      },
      "55": {
        start: {
          line: 151,
          column: 25
        },
        end: {
          line: 151,
          column: 74
        }
      },
      "56": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 59
        }
      },
      "57": {
        start: {
          line: 154,
          column: 24
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "58": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "59": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 41
        }
      },
      "60": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 45
        }
      },
      "61": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 49
        }
      },
      "62": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 453,
          column: 7
        }
      },
      "63": {
        start: {
          line: 186,
          column: 53
        },
        end: {
          line: 186,
          column: 90
        }
      },
      "64": {
        start: {
          line: 187,
          column: 53
        },
        end: {
          line: 187,
          column: 90
        }
      },
      "65": {
        start: {
          line: 188,
          column: 49
        },
        end: {
          line: 188,
          column: 70
        }
      },
      "66": {
        start: {
          line: 189,
          column: 36
        },
        end: {
          line: 419,
          column: 49
        }
      },
      "67": {
        start: {
          line: 200,
          column: 69
        },
        end: {
          line: 200,
          column: 82
        }
      },
      "68": {
        start: {
          line: 224,
          column: 99
        },
        end: {
          line: 224,
          column: 119
        }
      },
      "69": {
        start: {
          line: 234,
          column: 103
        },
        end: {
          line: 247,
          column: 74
        }
      },
      "70": {
        start: {
          line: 252,
          column: 103
        },
        end: {
          line: 284,
          column: 74
        }
      },
      "71": {
        start: {
          line: 267,
          column: 139
        },
        end: {
          line: 278,
          column: 110
        }
      },
      "72": {
        start: {
          line: 294,
          column: 103
        },
        end: {
          line: 307,
          column: 74
        }
      },
      "73": {
        start: {
          line: 312,
          column: 103
        },
        end: {
          line: 325,
          column: 74
        }
      },
      "74": {
        start: {
          line: 330,
          column: 103
        },
        end: {
          line: 343,
          column: 74
        }
      },
      "75": {
        start: {
          line: 350,
          column: 95
        },
        end: {
          line: 380,
          column: 66
        }
      },
      "76": {
        start: {
          line: 369,
          column: 103
        },
        end: {
          line: 369,
          column: 143
        }
      },
      "77": {
        start: {
          line: 385,
          column: 95
        },
        end: {
          line: 401,
          column: 66
        }
      },
      "78": {
        start: {
          line: 424,
          column: 49
        },
        end: {
          line: 432,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 47
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 39
          },
          end: {
            line: 28,
            column: 40
          }
        },
        loc: {
          start: {
            line: 28,
            column: 61
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 34
          }
        },
        loc: {
          start: {
            line: 32,
            column: 53
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 32
      },
      "4": {
        name: "GanttChartStep",
        decl: {
          start: {
            line: 103,
            column: 9
          },
          end: {
            line: 103,
            column: 23
          }
        },
        loc: {
          start: {
            line: 103,
            column: 46
          },
          end: {
            line: 454,
            column: 1
          }
        },
        line: 103
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 107,
            column: 47
          },
          end: {
            line: 107,
            column: 48
          }
        },
        loc: {
          start: {
            line: 107,
            column: 56
          },
          end: {
            line: 115,
            column: 17
          }
        },
        line: 107
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 132,
            column: 21
          },
          end: {
            line: 132,
            column: 22
          }
        },
        loc: {
          start: {
            line: 132,
            column: 33
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 132
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 133,
            column: 52
          },
          end: {
            line: 133,
            column: 53
          }
        },
        loc: {
          start: {
            line: 133,
            column: 68
          },
          end: {
            line: 144,
            column: 13
          }
        },
        line: 133
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 141,
            column: 39
          },
          end: {
            line: 141,
            column: 40
          }
        },
        loc: {
          start: {
            line: 141,
            column: 44
          },
          end: {
            line: 141,
            column: 69
          }
        },
        line: 141
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 147,
            column: 30
          },
          end: {
            line: 147,
            column: 31
          }
        },
        loc: {
          start: {
            line: 147,
            column: 44
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 147
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 154,
            column: 24
          },
          end: {
            line: 154,
            column: 25
          }
        },
        loc: {
          start: {
            line: 154,
            column: 32
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 154
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 185,
            column: 43
          },
          end: {
            line: 185,
            column: 44
          }
        },
        loc: {
          start: {
            line: 185,
            column: 59
          },
          end: {
            line: 420,
            column: 33
          }
        },
        line: 185
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 200,
            column: 65
          },
          end: {
            line: 200,
            column: 66
          }
        },
        loc: {
          start: {
            line: 200,
            column: 69
          },
          end: {
            line: 200,
            column: 82
          }
        },
        line: 200
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 224,
            column: 94
          },
          end: {
            line: 224,
            column: 95
          }
        },
        loc: {
          start: {
            line: 224,
            column: 99
          },
          end: {
            line: 224,
            column: 119
          }
        },
        line: 224
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 234,
            column: 76
          },
          end: {
            line: 234,
            column: 77
          }
        },
        loc: {
          start: {
            line: 234,
            column: 103
          },
          end: {
            line: 247,
            column: 74
          }
        },
        line: 234
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 252,
            column: 76
          },
          end: {
            line: 252,
            column: 77
          }
        },
        loc: {
          start: {
            line: 252,
            column: 103
          },
          end: {
            line: 284,
            column: 74
          }
        },
        line: 252
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 267,
            column: 117
          },
          end: {
            line: 267,
            column: 118
          }
        },
        loc: {
          start: {
            line: 267,
            column: 139
          },
          end: {
            line: 278,
            column: 110
          }
        },
        line: 267
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 294,
            column: 76
          },
          end: {
            line: 294,
            column: 77
          }
        },
        loc: {
          start: {
            line: 294,
            column: 103
          },
          end: {
            line: 307,
            column: 74
          }
        },
        line: 294
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 312,
            column: 76
          },
          end: {
            line: 312,
            column: 77
          }
        },
        loc: {
          start: {
            line: 312,
            column: 103
          },
          end: {
            line: 325,
            column: 74
          }
        },
        line: 312
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 330,
            column: 76
          },
          end: {
            line: 330,
            column: 77
          }
        },
        loc: {
          start: {
            line: 330,
            column: 103
          },
          end: {
            line: 343,
            column: 74
          }
        },
        line: 330
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 350,
            column: 68
          },
          end: {
            line: 350,
            column: 69
          }
        },
        loc: {
          start: {
            line: 350,
            column: 95
          },
          end: {
            line: 380,
            column: 66
          }
        },
        line: 350
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 369,
            column: 98
          },
          end: {
            line: 369,
            column: 99
          }
        },
        loc: {
          start: {
            line: 369,
            column: 103
          },
          end: {
            line: 369,
            column: 143
          }
        },
        line: 369
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 385,
            column: 68
          },
          end: {
            line: 385,
            column: 69
          }
        },
        loc: {
          start: {
            line: 385,
            column: 95
          },
          end: {
            line: 401,
            column: 66
          }
        },
        line: 385
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 424,
            column: 45
          },
          end: {
            line: 424,
            column: 46
          }
        },
        loc: {
          start: {
            line: 424,
            column: 49
          },
          end: {
            line: 432,
            column: 42
          }
        },
        line: 424
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 45
          }
        }, {
          start: {
            line: 29,
            column: 48
          },
          end: {
            line: 29,
            column: 65
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 27
          }
        }, {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 33,
            column: 45
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 47
          }
        }, {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 76
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 31
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 53
          }
        }, {
          start: {
            line: 48,
            column: 57
          },
          end: {
            line: 48,
            column: 88
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "10": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 29
          }
        }, {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 50,
            column: 79
          }
        }],
        line: 50
      },
      "11": {
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 47
          },
          end: {
            line: 51,
            column: 88
          }
        }, {
          start: {
            line: 51,
            column: 91
          },
          end: {
            line: 51,
            column: 95
          }
        }],
        line: 51
      },
      "12": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 56,
            column: 13
          }
        }],
        line: 52
      },
      "13": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 20
          }
        }, {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 33
          }
        }, {
          start: {
            line: 52,
            column: 37
          },
          end: {
            line: 52,
            column: 45
          }
        }],
        line: 52
      },
      "14": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "15": {
        loc: {
          start: {
            line: 107,
            column: 19
          },
          end: {
            line: 125,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 38
          },
          end: {
            line: 115,
            column: 19
          }
        }, {
          start: {
            line: 115,
            column: 22
          },
          end: {
            line: 125,
            column: 13
          }
        }],
        line: 107
      },
      "16": {
        loc: {
          start: {
            line: 110,
            column: 31
          },
          end: {
            line: 110,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 68
          },
          end: {
            line: 110,
            column: 82
          }
        }, {
          start: {
            line: 110,
            column: 85
          },
          end: {
            line: 110,
            column: 87
          }
        }],
        line: 110
      },
      "17": {
        loc: {
          start: {
            line: 111,
            column: 29
          },
          end: {
            line: 111,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 64
          },
          end: {
            line: 111,
            column: 76
          }
        }, {
          start: {
            line: 111,
            column: 79
          },
          end: {
            line: 111,
            column: 81
          }
        }],
        line: 111
      },
      "18": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 148,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 148,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "19": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 18
          }
        }, {
          start: {
            line: 148,
            column: 22
          },
          end: {
            line: 148,
            column: 26
          }
        }],
        line: 148
      },
      "20": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 157,
            column: 41
          }
        }, {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 159,
            column: 45
          }
        }, {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 161,
            column: 49
          }
        }],
        line: 155
      },
      "21": {
        loc: {
          start: {
            line: 196,
            column: 62
          },
          end: {
            line: 204,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 62
          },
          end: {
            line: 196,
            column: 79
          }
        }, {
          start: {
            line: 196,
            column: 97
          },
          end: {
            line: 204,
            column: 54
          }
        }],
        line: 196
      },
      "22": {
        loc: {
          start: {
            line: 403,
            column: 56
          },
          end: {
            line: 414,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 56
          },
          end: {
            line: 403,
            column: 94
          }
        }, {
          start: {
            line: 403,
            column: 112
          },
          end: {
            line: 414,
            column: 58
          }
        }],
        line: 403
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/application/steps/GanttChartStep.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { \n  Card, \n  CardContent, \n  CardDescription, \n  CardHeader, \n  CardTitle \n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { \n  Form, \n  FormControl, \n  FormField, \n  FormItem, \n  FormLabel, \n  FormMessage \n} from '@/components/ui/form';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { \n  Plus, \n  Trash2,\n  Calendar,\n  Flag,\n  CheckCircle2,\n  Clock,\n  AlertTriangle\n} from 'lucide-react';\nimport type { GanttTask, TaskType } from '@/types/application-extended';\n\nconst ganttTaskSchema = z.object({\n  tasks: z.array(z.object({\n    taskName: z.string().min(1, '\u30BF\u30B9\u30AF\u540D\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044'),\n    taskType: z.enum(['PHASE', 'TASK', 'SUBTASK', 'MILESTONE']),\n    startDate: z.string().min(1, '\u958B\u59CB\u65E5\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044'),\n    endDate: z.string().min(1, '\u7D42\u4E86\u65E5\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044'),\n    assignee: z.string().min(1, '\u62C5\u5F53\u8005\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044'),\n    progress: z.number().min(0).max(100),\n    milestone: z.boolean(),\n  })).min(1, '\u5C11\u306A\u304F\u3068\u30821\u3064\u306E\u30BF\u30B9\u30AF\u3092\u8FFD\u52A0\u3057\u3066\u304F\u3060\u3055\u3044'),\n});\n\ntype GanttTaskFormData = z.infer<typeof ganttTaskSchema>;\n\ninterface GanttChartStepProps {\n  data: GanttTask[];\n  onComplete: (data: GanttTask[]) => void;\n}\n\nconst TASK_TYPES: { value: TaskType; label: string; color: string }[] = [\n  { value: 'PHASE', label: '\u30D5\u30A7\u30FC\u30BA', color: 'bg-purple-500' },\n  { value: 'TASK', label: '\u30BF\u30B9\u30AF', color: 'bg-blue-500' },\n  { value: 'SUBTASK', label: '\u30B5\u30D6\u30BF\u30B9\u30AF', color: 'bg-green-500' },\n  { value: 'MILESTONE', label: '\u30DE\u30A4\u30EB\u30B9\u30C8\u30FC\u30F3', color: 'bg-red-500' },\n];\n\nexport function GanttChartStep({ data, onComplete }: GanttChartStepProps) {\n  const form = useForm<GanttTaskFormData>({\n    resolver: zodResolver(ganttTaskSchema),\n    defaultValues: {\n      tasks: data?.length > 0 ? data.map(task => ({\n        taskName: task.taskName,\n        taskType: task.taskType,\n        startDate: typeof task.startDate === 'string' ? task.startDate : '',\n        endDate: typeof task.endDate === 'string' ? task.endDate : '',\n        assignee: task.assignee,\n        progress: task.progress,\n        milestone: task.milestone,\n      })) : [{\n        taskName: '',\n        taskType: 'TASK' as TaskType,\n        startDate: '',\n        endDate: '',\n        assignee: '',\n        progress: 0,\n        milestone: false,\n      }],\n    },\n  });\n\n  const { fields, append, remove } = useFieldArray({\n    control: form.control,\n    name: 'tasks',\n  });\n\n  const onSubmit = (formData: GanttTaskFormData) => {\n    const tasksWithDetails = formData.tasks.map((task, index) => ({\n      ...task,\n      description: '',\n      duration: calculateDuration(task.startDate, task.endDate),\n      dependencies: [],\n      parentTaskId: undefined,\n      assigneeRole: '',\n      resources: {},\n      color: TASK_TYPES.find(t => t.value === task.taskType)?.color.replace('bg-', '#'),\n      critical: false,\n      orderIndex: index,\n    }));\n    onComplete(tasksWithDetails);\n  };\n\n  const calculateDuration = (start: string, end: string) => {\n    if (!start || !end) return 0;\n    const startDate = new Date(start);\n    const endDate = new Date(end);\n    const diffTime = Math.abs(endDate.getTime() - startDate.getTime());\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  };\n\n  const getTaskIcon = (type: TaskType) => {\n    switch (type) {\n      case 'MILESTONE': return Flag;\n      case 'PHASE': return Calendar;\n      default: return CheckCircle2;\n    }\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>\u5B9F\u65BD\u30B9\u30B1\u30B8\u30E5\u30FC\u30EB\uFF08\u7C21\u6613\u7248\uFF09</CardTitle>\n            <CardDescription>\n              \u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u306E\u4E3B\u8981\u306A\u30BF\u30B9\u30AF\u3068\u30B9\u30B1\u30B8\u30E5\u30FC\u30EB\u3092\u8A2D\u5B9A\u3057\u3066\u304F\u3060\u3055\u3044\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {fields.map((field, index) => {\n              const progress = form.watch(`tasks.${index}.progress`);\n              const taskType = form.watch(`tasks.${index}.taskType`);\n              const Icon = getTaskIcon(taskType);\n              \n              return (\n                <Card key={field.id} className=\"relative\">\n                  <CardContent className=\"pt-6\">\n                    <div className=\"absolute top-2 right-2\">\n                      {fields.length > 1 && (\n                        <Button\n                          type=\"button\"\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => remove(index)}\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      )}\n                    </div>\n\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        <Icon className=\"h-5 w-5\" />\n                        <span className=\"font-medium\">\u30BF\u30B9\u30AF {index + 1}</span>\n                        <Badge variant=\"outline\">\n                          {TASK_TYPES.find(t => t.value === taskType)?.label}\n                        </Badge>\n                      </div>\n\n                      <div className=\"grid md:grid-cols-2 gap-4\">\n                        <FormField\n                          control={form.control}\n                          name={`tasks.${index}.taskName`}\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>\u30BF\u30B9\u30AF\u540D *</FormLabel>\n                              <FormControl>\n                                <Input \n                                  placeholder=\"\u4F8B\uFF1A\u30B7\u30B9\u30C6\u30E0\u8981\u4EF6\u5B9A\u7FA9\" \n                                  {...field} \n                                />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        <FormField\n                          control={form.control}\n                          name={`tasks.${index}.taskType`}\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>\u30BF\u30B9\u30AF\u30BF\u30A4\u30D7 *</FormLabel>\n                              <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                <FormControl>\n                                  <SelectTrigger>\n                                    <SelectValue />\n                                  </SelectTrigger>\n                                </FormControl>\n                                <SelectContent>\n                                  {TASK_TYPES.map(type => (\n                                    <SelectItem key={type.value} value={type.value}>\n                                      <div className=\"flex items-center gap-2\">\n                                        <div className={`w-2 h-2 rounded-full ${type.color}`} />\n                                        {type.label}\n                                      </div>\n                                    </SelectItem>\n                                  ))}\n                                </SelectContent>\n                              </Select>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n\n                      <div className=\"grid md:grid-cols-3 gap-4\">\n                        <FormField\n                          control={form.control}\n                          name={`tasks.${index}.startDate`}\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>\u958B\u59CB\u65E5 *</FormLabel>\n                              <FormControl>\n                                <Input \n                                  type=\"date\" \n                                  {...field} \n                                />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        <FormField\n                          control={form.control}\n                          name={`tasks.${index}.endDate`}\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>\u7D42\u4E86\u65E5 *</FormLabel>\n                              <FormControl>\n                                <Input \n                                  type=\"date\" \n                                  {...field} \n                                />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        <FormField\n                          control={form.control}\n                          name={`tasks.${index}.assignee`}\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>\u62C5\u5F53\u8005 *</FormLabel>\n                              <FormControl>\n                                <Input \n                                  placeholder=\"\u4F8B\uFF1A\u5C71\u7530\u592A\u90CE\" \n                                  {...field} \n                                />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n\n                      <FormField\n                        control={form.control}\n                        name={`tasks.${index}.progress`}\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>\u9032\u6357\u7387: {progress}%</FormLabel>\n                            <FormControl>\n                              <div className=\"space-y-2\">\n                                <Input \n                                  type=\"range\" \n                                  min=\"0\"\n                                  max=\"100\"\n                                  step=\"5\"\n                                  {...field}\n                                  onChange={e => field.onChange(parseInt(e.target.value))}\n                                />\n                                <Progress value={progress} className=\"h-2\" />\n                              </div>\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name={`tasks.${index}.milestone`}\n                        render={({ field }) => (\n                          <FormItem className=\"flex items-center gap-2\">\n                            <FormControl>\n                              <input\n                                type=\"checkbox\"\n                                checked={field.value}\n                                onChange={field.onChange}\n                                className=\"h-4 w-4\"\n                              />\n                            </FormControl>\n                            <FormLabel className=\"!mt-0 cursor-pointer\">\n                              \u30DE\u30A4\u30EB\u30B9\u30C8\u30FC\u30F3\u3068\u3057\u3066\u8A2D\u5B9A\n                            </FormLabel>\n                          </FormItem>\n                        )}\n                      />\n\n                      {form.watch(`tasks.${index}.milestone`) && (\n                        <div className=\"flex items-center gap-2 p-2 bg-yellow-50 rounded-md\">\n                          <AlertTriangle className=\"h-4 w-4 text-yellow-600\" />\n                          <span className=\"text-sm text-yellow-800\">\n                            \u91CD\u8981\u306A\u7BC0\u76EE\u3068\u3057\u3066\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u307E\u3059\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              );\n            })}\n\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => append({\n                taskName: '',\n                taskType: 'TASK',\n                startDate: '',\n                endDate: '',\n                assignee: '',\n                progress: 0,\n                milestone: false,\n              })}\n            >\n              <Plus className=\"mr-2 h-4 w-4\" />\n              \u30BF\u30B9\u30AF\u3092\u8FFD\u52A0\n            </Button>\n          </CardContent>\n        </Card>\n\n        <div className=\"flex justify-end\">\n          <Button type=\"submit\">\u6B21\u3078\u9032\u3080</Button>\n        </div>\n      </form>\n    </Form>\n  );\n}"],
      names: ["GanttChartStep", "ganttTaskSchema", "z", "object", "tasks", "array", "taskName", "string", "min", "taskType", "enum", "startDate", "endDate", "assignee", "progress", "number", "max", "milestone", "boolean", "TASK_TYPES", "value", "label", "color", "data", "onComplete", "form", "useForm", "resolver", "zodResolver", "defaultValues", "length", "map", "task", "fields", "append", "remove", "useFieldArray", "control", "name", "onSubmit", "formData", "tasksWithDetails", "index", "description", "duration", "calculateDuration", "dependencies", "parentTaskId", "undefined", "assigneeRole", "resources", "find", "t", "replace", "critical", "orderIndex", "start", "end", "Date", "diffTime", "Math", "abs", "getTime", "ceil", "getTaskIcon", "type", "Flag", "Calendar", "CheckCircle2", "Form", "handleSubmit", "className", "Card", "CardHeader", "CardTitle", "CardDescription", "CardContent", "field", "watch", "Icon", "div", "Button", "variant", "size", "onClick", "Trash2", "span", "Badge", "FormField", "render", "FormItem", "FormLabel", "FormControl", "Input", "placeholder", "FormMessage", "Select", "onValueChange", "onChange", "defaultValue", "SelectTrigger", "SelectValue", "SelectContent", "SelectItem", "step", "e", "parseInt", "target", "Progress", "input", "checked", "AlertTriangle", "id", "Plus"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "27234eed7e1a943ab955e2dd4426f4a297fce8d1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_h9tjs8w6b = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_h9tjs8w6b();
cov_h9tjs8w6b().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_h9tjs8w6b().s[1]++;
Object.defineProperty(exports, "GanttChartStep", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_h9tjs8w6b().f[0]++;
    cov_h9tjs8w6b().s[2]++;
    return GanttChartStep;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_h9tjs8w6b().s[3]++, require("react/jsx-runtime"));
const _reacthookform =
/* istanbul ignore next */
(cov_h9tjs8w6b().s[4]++, require("react-hook-form"));
const _zod =
/* istanbul ignore next */
(cov_h9tjs8w6b().s[5]++, require("@hookform/resolvers/zod"));
const _zod1 =
/* istanbul ignore next */
(/*#__PURE__*/cov_h9tjs8w6b().s[6]++, _interop_require_wildcard(require("zod")));
const _card =
/* istanbul ignore next */
(cov_h9tjs8w6b().s[7]++, require("../../ui/card"));
const _button =
/* istanbul ignore next */
(cov_h9tjs8w6b().s[8]++, require("../../ui/button"));
const _input =
/* istanbul ignore next */
(cov_h9tjs8w6b().s[9]++, require("../../ui/input"));
const _form =
/* istanbul ignore next */
(cov_h9tjs8w6b().s[10]++, require("../../ui/form"));
const _select =
/* istanbul ignore next */
(cov_h9tjs8w6b().s[11]++, require("../../ui/select"));
const _badge =
/* istanbul ignore next */
(cov_h9tjs8w6b().s[12]++, require("../../ui/badge"));
const _progress =
/* istanbul ignore next */
(cov_h9tjs8w6b().s[13]++, require("../../ui/progress"));
const _lucidereact =
/* istanbul ignore next */
(cov_h9tjs8w6b().s[14]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_h9tjs8w6b().f[1]++;
  cov_h9tjs8w6b().s[15]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_h9tjs8w6b().b[0][0]++;
    cov_h9tjs8w6b().s[16]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_h9tjs8w6b().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_h9tjs8w6b().s[17]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_h9tjs8w6b().s[18]++, new WeakMap());
  /* istanbul ignore next */
  cov_h9tjs8w6b().s[19]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_h9tjs8w6b().f[2]++;
    cov_h9tjs8w6b().s[20]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_h9tjs8w6b().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_h9tjs8w6b().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_h9tjs8w6b().f[3]++;
  cov_h9tjs8w6b().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_h9tjs8w6b().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_h9tjs8w6b().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_h9tjs8w6b().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_h9tjs8w6b().b[2][0]++;
    cov_h9tjs8w6b().s[22]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_h9tjs8w6b().b[2][1]++;
  }
  cov_h9tjs8w6b().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_h9tjs8w6b().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_h9tjs8w6b().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_h9tjs8w6b().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_h9tjs8w6b().b[4][0]++;
    cov_h9tjs8w6b().s[24]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_h9tjs8w6b().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_h9tjs8w6b().s[25]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_h9tjs8w6b().s[26]++;
  if (
  /* istanbul ignore next */
  (cov_h9tjs8w6b().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_h9tjs8w6b().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_h9tjs8w6b().b[6][0]++;
    cov_h9tjs8w6b().s[27]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_h9tjs8w6b().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_h9tjs8w6b().s[28]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_h9tjs8w6b().s[29]++,
  /* istanbul ignore next */
  (cov_h9tjs8w6b().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_h9tjs8w6b().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_h9tjs8w6b().s[30]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_h9tjs8w6b().s[31]++;
    if (
    /* istanbul ignore next */
    (cov_h9tjs8w6b().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_h9tjs8w6b().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_h9tjs8w6b().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_h9tjs8w6b().s[32]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_h9tjs8w6b().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_h9tjs8w6b().b[11][1]++, null));
      /* istanbul ignore next */
      cov_h9tjs8w6b().s[33]++;
      if (
      /* istanbul ignore next */
      (cov_h9tjs8w6b().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_h9tjs8w6b().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_h9tjs8w6b().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_h9tjs8w6b().b[12][0]++;
        cov_h9tjs8w6b().s[34]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_h9tjs8w6b().b[12][1]++;
        cov_h9tjs8w6b().s[35]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_h9tjs8w6b().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_h9tjs8w6b().s[36]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_h9tjs8w6b().s[37]++;
  if (cache) {
    /* istanbul ignore next */
    cov_h9tjs8w6b().b[14][0]++;
    cov_h9tjs8w6b().s[38]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_h9tjs8w6b().b[14][1]++;
  }
  cov_h9tjs8w6b().s[39]++;
  return newObj;
}
const ganttTaskSchema =
/* istanbul ignore next */
(cov_h9tjs8w6b().s[40]++, _zod1.object({
  tasks: _zod1.array(_zod1.object({
    taskName: _zod1.string().min(1, 'タスク名を入力してください'),
    taskType: _zod1.enum(['PHASE', 'TASK', 'SUBTASK', 'MILESTONE']),
    startDate: _zod1.string().min(1, '開始日を入力してください'),
    endDate: _zod1.string().min(1, '終了日を入力してください'),
    assignee: _zod1.string().min(1, '担当者を入力してください'),
    progress: _zod1.number().min(0).max(100),
    milestone: _zod1.boolean()
  })).min(1, '少なくとも1つのタスクを追加してください')
}));
const TASK_TYPES =
/* istanbul ignore next */
(cov_h9tjs8w6b().s[41]++, [{
  value: 'PHASE',
  label: 'フェーズ',
  color: 'bg-purple-500'
}, {
  value: 'TASK',
  label: 'タスク',
  color: 'bg-blue-500'
}, {
  value: 'SUBTASK',
  label: 'サブタスク',
  color: 'bg-green-500'
}, {
  value: 'MILESTONE',
  label: 'マイルストーン',
  color: 'bg-red-500'
}]);
function GanttChartStep({
  data,
  onComplete
}) {
  /* istanbul ignore next */
  cov_h9tjs8w6b().f[4]++;
  const form =
  /* istanbul ignore next */
  (cov_h9tjs8w6b().s[42]++, (0, _reacthookform.useForm)({
    resolver: (0, _zod.zodResolver)(ganttTaskSchema),
    defaultValues: {
      tasks: data?.length > 0 ?
      /* istanbul ignore next */
      (cov_h9tjs8w6b().b[15][0]++, data.map(task => {
        /* istanbul ignore next */
        cov_h9tjs8w6b().f[5]++;
        cov_h9tjs8w6b().s[43]++;
        return {
          taskName: task.taskName,
          taskType: task.taskType,
          startDate: typeof task.startDate === 'string' ?
          /* istanbul ignore next */
          (cov_h9tjs8w6b().b[16][0]++, task.startDate) :
          /* istanbul ignore next */
          (cov_h9tjs8w6b().b[16][1]++, ''),
          endDate: typeof task.endDate === 'string' ?
          /* istanbul ignore next */
          (cov_h9tjs8w6b().b[17][0]++, task.endDate) :
          /* istanbul ignore next */
          (cov_h9tjs8w6b().b[17][1]++, ''),
          assignee: task.assignee,
          progress: task.progress,
          milestone: task.milestone
        };
      })) :
      /* istanbul ignore next */
      (cov_h9tjs8w6b().b[15][1]++, [{
        taskName: '',
        taskType: 'TASK',
        startDate: '',
        endDate: '',
        assignee: '',
        progress: 0,
        milestone: false
      }])
    }
  }));
  const {
    fields,
    append,
    remove
  } =
  /* istanbul ignore next */
  (cov_h9tjs8w6b().s[44]++, (0, _reacthookform.useFieldArray)({
    control: form.control,
    name: 'tasks'
  }));
  /* istanbul ignore next */
  cov_h9tjs8w6b().s[45]++;
  const onSubmit = formData => {
    /* istanbul ignore next */
    cov_h9tjs8w6b().f[6]++;
    const tasksWithDetails =
    /* istanbul ignore next */
    (cov_h9tjs8w6b().s[46]++, formData.tasks.map((task, index) => {
      /* istanbul ignore next */
      cov_h9tjs8w6b().f[7]++;
      cov_h9tjs8w6b().s[47]++;
      return {
        ...task,
        description: '',
        duration: calculateDuration(task.startDate, task.endDate),
        dependencies: [],
        parentTaskId: undefined,
        assigneeRole: '',
        resources: {},
        color: TASK_TYPES.find(t => {
          /* istanbul ignore next */
          cov_h9tjs8w6b().f[8]++;
          cov_h9tjs8w6b().s[48]++;
          return t.value === task.taskType;
        })?.color.replace('bg-', '#'),
        critical: false,
        orderIndex: index
      };
    }));
    /* istanbul ignore next */
    cov_h9tjs8w6b().s[49]++;
    onComplete(tasksWithDetails);
  };
  /* istanbul ignore next */
  cov_h9tjs8w6b().s[50]++;
  const calculateDuration = (start, end) => {
    /* istanbul ignore next */
    cov_h9tjs8w6b().f[9]++;
    cov_h9tjs8w6b().s[51]++;
    if (
    /* istanbul ignore next */
    (cov_h9tjs8w6b().b[19][0]++, !start) ||
    /* istanbul ignore next */
    (cov_h9tjs8w6b().b[19][1]++, !end)) {
      /* istanbul ignore next */
      cov_h9tjs8w6b().b[18][0]++;
      cov_h9tjs8w6b().s[52]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_h9tjs8w6b().b[18][1]++;
    }
    const startDate =
    /* istanbul ignore next */
    (cov_h9tjs8w6b().s[53]++, new Date(start));
    const endDate =
    /* istanbul ignore next */
    (cov_h9tjs8w6b().s[54]++, new Date(end));
    const diffTime =
    /* istanbul ignore next */
    (cov_h9tjs8w6b().s[55]++, Math.abs(endDate.getTime() - startDate.getTime()));
    /* istanbul ignore next */
    cov_h9tjs8w6b().s[56]++;
    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));
  };
  /* istanbul ignore next */
  cov_h9tjs8w6b().s[57]++;
  const getTaskIcon = type => {
    /* istanbul ignore next */
    cov_h9tjs8w6b().f[10]++;
    cov_h9tjs8w6b().s[58]++;
    switch (type) {
      case 'MILESTONE':
        /* istanbul ignore next */
        cov_h9tjs8w6b().b[20][0]++;
        cov_h9tjs8w6b().s[59]++;
        return _lucidereact.Flag;
      case 'PHASE':
        /* istanbul ignore next */
        cov_h9tjs8w6b().b[20][1]++;
        cov_h9tjs8w6b().s[60]++;
        return _lucidereact.Calendar;
      default:
        /* istanbul ignore next */
        cov_h9tjs8w6b().b[20][2]++;
        cov_h9tjs8w6b().s[61]++;
        return _lucidereact.CheckCircle2;
    }
  };
  /* istanbul ignore next */
  cov_h9tjs8w6b().s[62]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_form.Form, {
    ...form,
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("form", {
      onSubmit: form.handleSubmit(onSubmit),
      className: "space-y-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            children: "実施スケジュール（簡易版）"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
            children: "プロジェクトの主要なタスクとスケジュールを設定してください"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
          className: "space-y-4",
          children: [fields.map((field, index) => {
            /* istanbul ignore next */
            cov_h9tjs8w6b().f[11]++;
            const progress =
            /* istanbul ignore next */
            (cov_h9tjs8w6b().s[63]++, form.watch(`tasks.${index}.progress`));
            const taskType =
            /* istanbul ignore next */
            (cov_h9tjs8w6b().s[64]++, form.watch(`tasks.${index}.taskType`));
            const Icon =
            /* istanbul ignore next */
            (cov_h9tjs8w6b().s[65]++, getTaskIcon(taskType));
            /* istanbul ignore next */
            cov_h9tjs8w6b().s[66]++;
            return /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
              className: "relative",
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
                className: "pt-6",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "absolute top-2 right-2",
                  children:
                  /* istanbul ignore next */
                  (cov_h9tjs8w6b().b[21][0]++, fields.length > 1) &&
                  /* istanbul ignore next */
                  (cov_h9tjs8w6b().b[21][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                    type: "button",
                    variant: "ghost",
                    size: "sm",
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_h9tjs8w6b().f[12]++;
                      cov_h9tjs8w6b().s[67]++;
                      return remove(index);
                    },
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Trash2, {
                      className: "h-4 w-4"
                    })
                  }))
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "space-y-4",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center gap-2 mb-2",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(Icon, {
                      className: "h-5 w-5"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      className: "font-medium",
                      children: ["タスク ", index + 1]
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                      variant: "outline",
                      children: TASK_TYPES.find(t => {
                        /* istanbul ignore next */
                        cov_h9tjs8w6b().f[13]++;
                        cov_h9tjs8w6b().s[68]++;
                        return t.value === taskType;
                      })?.label
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "grid md:grid-cols-2 gap-4",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
                      control: form.control,
                      name: `tasks.${index}.taskName`,
                      render: ({
                        field
                      }) => {
                        /* istanbul ignore next */
                        cov_h9tjs8w6b().f[14]++;
                        cov_h9tjs8w6b().s[69]++;
                        return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                            children: "タスク名 *"
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                              placeholder: "例：システム要件定義",
                              ...field
                            })
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
                        });
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
                      control: form.control,
                      name: `tasks.${index}.taskType`,
                      render: ({
                        field
                      }) => {
                        /* istanbul ignore next */
                        cov_h9tjs8w6b().f[15]++;
                        cov_h9tjs8w6b().s[70]++;
                        return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                            children: "タスクタイプ *"
                          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
                            onValueChange: field.onChange,
                            defaultValue: field.value,
                            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
                                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {})
                              })
                            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectContent, {
                              children: TASK_TYPES.map(type => {
                                /* istanbul ignore next */
                                cov_h9tjs8w6b().f[16]++;
                                cov_h9tjs8w6b().s[71]++;
                                return /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                                  value: type.value,
                                  children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center gap-2",
                                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                                      className: `w-2 h-2 rounded-full ${type.color}`
                                    }), type.label]
                                  })
                                }, type.value);
                              })
                            })]
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
                        });
                      }
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "grid md:grid-cols-3 gap-4",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
                      control: form.control,
                      name: `tasks.${index}.startDate`,
                      render: ({
                        field
                      }) => {
                        /* istanbul ignore next */
                        cov_h9tjs8w6b().f[17]++;
                        cov_h9tjs8w6b().s[72]++;
                        return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                            children: "開始日 *"
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                              type: "date",
                              ...field
                            })
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
                        });
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
                      control: form.control,
                      name: `tasks.${index}.endDate`,
                      render: ({
                        field
                      }) => {
                        /* istanbul ignore next */
                        cov_h9tjs8w6b().f[18]++;
                        cov_h9tjs8w6b().s[73]++;
                        return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                            children: "終了日 *"
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                              type: "date",
                              ...field
                            })
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
                        });
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
                      control: form.control,
                      name: `tasks.${index}.assignee`,
                      render: ({
                        field
                      }) => {
                        /* istanbul ignore next */
                        cov_h9tjs8w6b().f[19]++;
                        cov_h9tjs8w6b().s[74]++;
                        return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                            children: "担当者 *"
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                              placeholder: "例：山田太郎",
                              ...field
                            })
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
                        });
                      }
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
                    control: form.control,
                    name: `tasks.${index}.progress`,
                    render: ({
                      field
                    }) => {
                      /* istanbul ignore next */
                      cov_h9tjs8w6b().f[20]++;
                      cov_h9tjs8w6b().s[75]++;
                      return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
                        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormLabel, {
                          children: ["進捗率: ", progress, "%"]
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                            className: "space-y-2",
                            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                              type: "range",
                              min: "0",
                              max: "100",
                              step: "5",
                              ...field,
                              onChange: e => {
                                /* istanbul ignore next */
                                cov_h9tjs8w6b().f[21]++;
                                cov_h9tjs8w6b().s[76]++;
                                return field.onChange(parseInt(e.target.value));
                              }
                            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_progress.Progress, {
                              value: progress,
                              className: "h-2"
                            })]
                          })
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
                      });
                    }
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
                    control: form.control,
                    name: `tasks.${index}.milestone`,
                    render: ({
                      field
                    }) => {
                      /* istanbul ignore next */
                      cov_h9tjs8w6b().f[22]++;
                      cov_h9tjs8w6b().s[77]++;
                      return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
                        className: "flex items-center gap-2",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                          children: /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                            type: "checkbox",
                            checked: field.value,
                            onChange: field.onChange,
                            className: "h-4 w-4"
                          })
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                          className: "!mt-0 cursor-pointer",
                          children: "マイルストーンとして設定"
                        })]
                      });
                    }
                  }),
                  /* istanbul ignore next */
                  (cov_h9tjs8w6b().b[22][0]++, form.watch(`tasks.${index}.milestone`)) &&
                  /* istanbul ignore next */
                  (cov_h9tjs8w6b().b[22][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center gap-2 p-2 bg-yellow-50 rounded-md",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                      className: "h-4 w-4 text-yellow-600"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm text-yellow-800",
                      children: "重要な節目として設定されています"
                    })]
                  }))]
                })]
              })
            }, field.id);
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
            type: "button",
            variant: "outline",
            onClick: () => {
              /* istanbul ignore next */
              cov_h9tjs8w6b().f[23]++;
              cov_h9tjs8w6b().s[78]++;
              return append({
                taskName: '',
                taskType: 'TASK',
                startDate: '',
                endDate: '',
                assignee: '',
                progress: 0,
                milestone: false
              });
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Plus, {
              className: "mr-2 h-4 w-4"
            }), "タスクを追加"]
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "flex justify-end",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
          type: "submit",
          children: "次へ進む"
        })
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,