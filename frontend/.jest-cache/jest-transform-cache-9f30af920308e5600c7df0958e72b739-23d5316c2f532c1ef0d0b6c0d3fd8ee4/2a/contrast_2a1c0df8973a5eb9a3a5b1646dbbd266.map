{"version":3,"names":["WCAG_LEVELS","cov_12wdnurbk1","f","s","getAccessibleColors","getAccessibleTextColor","getContrastRatio","getLuminance","hexToRgb","isWCAGCompliant","validateDesignTokens","hex","result","exec","b","parseInt","r","g","rs","gs","bs","map","c","Math","pow","color1","color2","rgb1","rgb2","lum1","lum2","lightest","max","darkest","min","AA_NORMAL","AA_LARGE","AAA_NORMAL","AAA_LARGE","foreground","background","level","ratio","highContrast","text","primary","error","success","warning","info","backgroundColor","whiteRatio","blackRatio","colors","results","Object","entries","forEach","name","color","isAA","isAAA","push","round","isCompliant"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/lib/contrast.ts"],"sourcesContent":["// Contrast checking utilities for WCAG compliance - APP-213\n\n// Convert hex color to RGB\nexport const hexToRgb = (hex: string): [number, number, number] | null => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16),\n      ]\n    : null;\n};\n\n// Calculate relative luminance\nexport const getLuminance = (r: number, g: number, b: number): number => {\n  const [rs, gs, bs] = [r, g, b].map((c) => {\n    c = c / 255;\n    return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  });\n  return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n};\n\n// Calculate contrast ratio between two colors\nexport const getContrastRatio = (color1: string, color2: string): number => {\n  const rgb1 = hexToRgb(color1);\n  const rgb2 = hexToRgb(color2);\n  \n  if (!rgb1 || !rgb2) return 0;\n  \n  const lum1 = getLuminance(...rgb1);\n  const lum2 = getLuminance(...rgb2);\n  \n  const lightest = Math.max(lum1, lum2);\n  const darkest = Math.min(lum1, lum2);\n  \n  return (lightest + 0.05) / (darkest + 0.05);\n};\n\n// WCAG compliance levels\nexport const WCAG_LEVELS = {\n  AA_NORMAL: 4.5,\n  AA_LARGE: 3,\n  AAA_NORMAL: 7,\n  AAA_LARGE: 4.5,\n} as const;\n\n// Check if color combination meets WCAG standards\nexport const isWCAGCompliant = (\n  foreground: string,\n  background: string,\n  level: keyof typeof WCAG_LEVELS = 'AA_NORMAL'\n): boolean => {\n  const ratio = getContrastRatio(foreground, background);\n  return ratio >= WCAG_LEVELS[level];\n};\n\n// Get accessible color palette with guaranteed contrast ratios\nexport const getAccessibleColors = () => ({\n  // High contrast pairs (AAA compliant)\n  highContrast: {\n    text: '#000000',\n    background: '#ffffff',\n    ratio: 21, // Maximum possible contrast\n  },\n  \n  // Primary colors with AA compliance\n  primary: {\n    text: '#ffffff',\n    background: '#0ea5e9', // primary-500\n    ratio: getContrastRatio('#ffffff', '#0ea5e9'),\n  },\n  \n  // Error colors with high visibility\n  error: {\n    text: '#ffffff',\n    background: '#dc2626', // red-600 for better contrast\n    ratio: getContrastRatio('#ffffff', '#dc2626'),\n  },\n  \n  // Success colors\n  success: {\n    text: '#ffffff',\n    background: '#16a34a', // green-600\n    ratio: getContrastRatio('#ffffff', '#16a34a'),\n  },\n  \n  // Warning colors\n  warning: {\n    text: '#000000',\n    background: '#facc15', // yellow-400 for better contrast\n    ratio: getContrastRatio('#000000', '#facc15'),\n  },\n  \n  // Info colors\n  info: {\n    text: '#ffffff',\n    background: '#2563eb', // blue-600\n    ratio: getContrastRatio('#ffffff', '#2563eb'),\n  },\n});\n\n// Generate accessible text color for any background\nexport const getAccessibleTextColor = (backgroundColor: string): string => {\n  const whiteRatio = getContrastRatio('#ffffff', backgroundColor);\n  const blackRatio = getContrastRatio('#000000', backgroundColor);\n  \n  return whiteRatio >= blackRatio ? '#ffffff' : '#000000';\n};\n\n// Validate design tokens against WCAG standards\nexport const validateDesignTokens = () => {\n  const colors = getAccessibleColors();\n  const results: Array<{\n    name: string;\n    foreground: string;\n    background: string;\n    ratio: number;\n    isCompliant: boolean;\n    level: string;\n  }> = [];\n  \n  Object.entries(colors).forEach(([name, color]) => {\n    const isAA = color.ratio >= WCAG_LEVELS.AA_NORMAL;\n    const isAAA = color.ratio >= WCAG_LEVELS.AAA_NORMAL;\n    \n    results.push({\n      name,\n      foreground: color.text,\n      background: color.background,\n      ratio: Math.round(color.ratio * 100) / 100,\n      isCompliant: isAA,\n      level: isAAA ? 'AAA' : isAA ? 'AA' : 'Fail',\n    });\n  });\n  \n  return results;\n};"],"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","ignoreList":[]}