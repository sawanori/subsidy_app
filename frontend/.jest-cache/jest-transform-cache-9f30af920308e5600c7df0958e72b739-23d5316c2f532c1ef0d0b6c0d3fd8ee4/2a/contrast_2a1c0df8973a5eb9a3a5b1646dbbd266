1c39e3e7aa31e71c9020d402deaf46a1
// Contrast checking utilities for WCAG compliance - APP-213
// Convert hex color to RGB
"use strict";

/* istanbul ignore next */
function cov_12wdnurbk1() {
  var path = "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/lib/contrast.ts";
  var hash = "14d323a3855d07c96783831590d1095cd2c01674";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/lib/contrast.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 6,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "2": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "3": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 27
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 35
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 38
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 32
        }
      },
      "8": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 28
        }
      },
      "9": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 24
        }
      },
      "10": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 31
        }
      },
      "11": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 36
        }
      },
      "12": {
        start: {
          line: 39,
          column: 17
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "13": {
        start: {
          line: 40,
          column: 19
        },
        end: {
          line: 40,
          column: 72
        }
      },
      "14": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "15": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 57,
          column: 1
        }
      },
      "16": {
        start: {
          line: 48,
          column: 25
        },
        end: {
          line: 55,
          column: 6
        }
      },
      "17": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 20
        }
      },
      "18": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 77
        }
      },
      "19": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 51
        }
      },
      "20": {
        start: {
          line: 58,
          column: 25
        },
        end: {
          line: 67,
          column: 1
        }
      },
      "21": {
        start: {
          line: 59,
          column: 17
        },
        end: {
          line: 59,
          column: 33
        }
      },
      "22": {
        start: {
          line: 60,
          column: 17
        },
        end: {
          line: 60,
          column: 33
        }
      },
      "23": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 33
        }
      },
      "24": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 61,
          column: 33
        }
      },
      "25": {
        start: {
          line: 62,
          column: 17
        },
        end: {
          line: 62,
          column: 38
        }
      },
      "26": {
        start: {
          line: 63,
          column: 17
        },
        end: {
          line: 63,
          column: 38
        }
      },
      "27": {
        start: {
          line: 64,
          column: 21
        },
        end: {
          line: 64,
          column: 41
        }
      },
      "28": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 40
        }
      },
      "29": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 48
        }
      },
      "30": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "31": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 77,
          column: 1
        }
      },
      "32": {
        start: {
          line: 75,
          column: 18
        },
        end: {
          line: 75,
          column: 58
        }
      },
      "33": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 39
        }
      },
      "34": {
        start: {
          line: 78,
          column: 28
        },
        end: {
          line: 115,
          column: 6
        }
      },
      "35": {
        start: {
          line: 78,
          column: 33
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "36": {
        start: {
          line: 116,
          column: 31
        },
        end: {
          line: 120,
          column: 1
        }
      },
      "37": {
        start: {
          line: 117,
          column: 23
        },
        end: {
          line: 117,
          column: 67
        }
      },
      "38": {
        start: {
          line: 118,
          column: 23
        },
        end: {
          line: 118,
          column: 67
        }
      },
      "39": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 60
        }
      },
      "40": {
        start: {
          line: 121,
          column: 29
        },
        end: {
          line: 137,
          column: 1
        }
      },
      "41": {
        start: {
          line: 122,
          column: 19
        },
        end: {
          line: 122,
          column: 40
        }
      },
      "42": {
        start: {
          line: 123,
          column: 20
        },
        end: {
          line: 123,
          column: 22
        }
      },
      "43": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 135,
          column: 7
        }
      },
      "44": {
        start: {
          line: 125,
          column: 21
        },
        end: {
          line: 125,
          column: 57
        }
      },
      "45": {
        start: {
          line: 126,
          column: 22
        },
        end: {
          line: 126,
          column: 59
        }
      },
      "46": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 134,
          column: 11
        }
      },
      "47": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 16
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 23
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 31
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 34
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 20
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 27
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 32
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 18
          }
        },
        loc: {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 39
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 47,
            column: 21
          },
          end: {
            line: 47,
            column: 22
          }
        },
        loc: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 47
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 52,
            column: 10
          },
          end: {
            line: 52,
            column: 11
          }
        },
        loc: {
          start: {
            line: 52,
            column: 15
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 52
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 58,
            column: 25
          },
          end: {
            line: 58,
            column: 26
          }
        },
        loc: {
          start: {
            line: 58,
            column: 43
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 58
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 74,
            column: 24
          },
          end: {
            line: 74,
            column: 25
          }
        },
        loc: {
          start: {
            line: 74,
            column: 71
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 74
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 78,
            column: 28
          },
          end: {
            line: 78,
            column: 29
          }
        },
        loc: {
          start: {
            line: 78,
            column: 33
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 78
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 116,
            column: 31
          },
          end: {
            line: 116,
            column: 32
          }
        },
        loc: {
          start: {
            line: 116,
            column: 50
          },
          end: {
            line: 120,
            column: 1
          }
        },
        line: 116
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 121,
            column: 29
          },
          end: {
            line: 121,
            column: 30
          }
        },
        loc: {
          start: {
            line: 121,
            column: 33
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 121
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 124,
            column: 35
          },
          end: {
            line: 124,
            column: 36
          }
        },
        loc: {
          start: {
            line: 124,
            column: 52
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 124
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 41,
            column: 11
          },
          end: {
            line: 45,
            column: 12
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 20
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 12
          }
        }],
        line: 41
      },
      "1": {
        loc: {
          start: {
            line: 54,
            column: 15
          },
          end: {
            line: 54,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 30
          },
          end: {
            line: 54,
            column: 39
          }
        }, {
          start: {
            line: 54,
            column: 42
          },
          end: {
            line: 54,
            column: 76
          }
        }],
        line: 54
      },
      "2": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 61,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 61,
            column: 13
          }
        }, {
          start: {
            line: 61,
            column: 17
          },
          end: {
            line: 61,
            column: 22
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 74,
            column: 49
          },
          end: {
            line: 74,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 74,
            column: 57
          },
          end: {
            line: 74,
            column: 68
          }
        }],
        line: 74
      },
      "5": {
        loc: {
          start: {
            line: 119,
            column: 11
          },
          end: {
            line: 119,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 38
          },
          end: {
            line: 119,
            column: 47
          }
        }, {
          start: {
            line: 119,
            column: 50
          },
          end: {
            line: 119,
            column: 59
          }
        }],
        line: 119
      },
      "6": {
        loc: {
          start: {
            line: 133,
            column: 19
          },
          end: {
            line: 133,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 27
          },
          end: {
            line: 133,
            column: 32
          }
        }, {
          start: {
            line: 133,
            column: 35
          },
          end: {
            line: 133,
            column: 55
          }
        }],
        line: 133
      },
      "7": {
        loc: {
          start: {
            line: 133,
            column: 35
          },
          end: {
            line: 133,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 42
          },
          end: {
            line: 133,
            column: 46
          }
        }, {
          start: {
            line: 133,
            column: 49
          },
          end: {
            line: 133,
            column: 55
          }
        }],
        line: 133
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/lib/contrast.ts"],
      sourcesContent: ["// Contrast checking utilities for WCAG compliance - APP-213\n\n// Convert hex color to RGB\nexport const hexToRgb = (hex: string): [number, number, number] | null => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16),\n      ]\n    : null;\n};\n\n// Calculate relative luminance\nexport const getLuminance = (r: number, g: number, b: number): number => {\n  const [rs, gs, bs] = [r, g, b].map((c) => {\n    c = c / 255;\n    return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  });\n  return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n};\n\n// Calculate contrast ratio between two colors\nexport const getContrastRatio = (color1: string, color2: string): number => {\n  const rgb1 = hexToRgb(color1);\n  const rgb2 = hexToRgb(color2);\n  \n  if (!rgb1 || !rgb2) return 0;\n  \n  const lum1 = getLuminance(...rgb1);\n  const lum2 = getLuminance(...rgb2);\n  \n  const lightest = Math.max(lum1, lum2);\n  const darkest = Math.min(lum1, lum2);\n  \n  return (lightest + 0.05) / (darkest + 0.05);\n};\n\n// WCAG compliance levels\nexport const WCAG_LEVELS = {\n  AA_NORMAL: 4.5,\n  AA_LARGE: 3,\n  AAA_NORMAL: 7,\n  AAA_LARGE: 4.5,\n} as const;\n\n// Check if color combination meets WCAG standards\nexport const isWCAGCompliant = (\n  foreground: string,\n  background: string,\n  level: keyof typeof WCAG_LEVELS = 'AA_NORMAL'\n): boolean => {\n  const ratio = getContrastRatio(foreground, background);\n  return ratio >= WCAG_LEVELS[level];\n};\n\n// Get accessible color palette with guaranteed contrast ratios\nexport const getAccessibleColors = () => ({\n  // High contrast pairs (AAA compliant)\n  highContrast: {\n    text: '#000000',\n    background: '#ffffff',\n    ratio: 21, // Maximum possible contrast\n  },\n  \n  // Primary colors with AA compliance\n  primary: {\n    text: '#ffffff',\n    background: '#0ea5e9', // primary-500\n    ratio: getContrastRatio('#ffffff', '#0ea5e9'),\n  },\n  \n  // Error colors with high visibility\n  error: {\n    text: '#ffffff',\n    background: '#dc2626', // red-600 for better contrast\n    ratio: getContrastRatio('#ffffff', '#dc2626'),\n  },\n  \n  // Success colors\n  success: {\n    text: '#ffffff',\n    background: '#16a34a', // green-600\n    ratio: getContrastRatio('#ffffff', '#16a34a'),\n  },\n  \n  // Warning colors\n  warning: {\n    text: '#000000',\n    background: '#facc15', // yellow-400 for better contrast\n    ratio: getContrastRatio('#000000', '#facc15'),\n  },\n  \n  // Info colors\n  info: {\n    text: '#ffffff',\n    background: '#2563eb', // blue-600\n    ratio: getContrastRatio('#ffffff', '#2563eb'),\n  },\n});\n\n// Generate accessible text color for any background\nexport const getAccessibleTextColor = (backgroundColor: string): string => {\n  const whiteRatio = getContrastRatio('#ffffff', backgroundColor);\n  const blackRatio = getContrastRatio('#000000', backgroundColor);\n  \n  return whiteRatio >= blackRatio ? '#ffffff' : '#000000';\n};\n\n// Validate design tokens against WCAG standards\nexport const validateDesignTokens = () => {\n  const colors = getAccessibleColors();\n  const results: Array<{\n    name: string;\n    foreground: string;\n    background: string;\n    ratio: number;\n    isCompliant: boolean;\n    level: string;\n  }> = [];\n  \n  Object.entries(colors).forEach(([name, color]) => {\n    const isAA = color.ratio >= WCAG_LEVELS.AA_NORMAL;\n    const isAAA = color.ratio >= WCAG_LEVELS.AAA_NORMAL;\n    \n    results.push({\n      name,\n      foreground: color.text,\n      background: color.background,\n      ratio: Math.round(color.ratio * 100) / 100,\n      isCompliant: isAA,\n      level: isAAA ? 'AAA' : isAA ? 'AA' : 'Fail',\n    });\n  });\n  \n  return results;\n};"],
      names: ["WCAG_LEVELS", "getAccessibleColors", "getAccessibleTextColor", "getContrastRatio", "getLuminance", "hexToRgb", "isWCAGCompliant", "validateDesignTokens", "hex", "result", "exec", "parseInt", "r", "g", "b", "rs", "gs", "bs", "map", "c", "Math", "pow", "color1", "color2", "rgb1", "rgb2", "lum1", "lum2", "lightest", "max", "darkest", "min", "AA_NORMAL", "AA_LARGE", "AAA_NORMAL", "AAA_LARGE", "foreground", "background", "level", "ratio", "highContrast", "text", "primary", "error", "success", "warning", "info", "backgroundColor", "whiteRatio", "blackRatio", "colors", "results", "Object", "entries", "forEach", "name", "color", "isAA", "isAAA", "push", "round", "isCompliant"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "14d323a3855d07c96783831590d1095cd2c01674"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12wdnurbk1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12wdnurbk1();
cov_12wdnurbk1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_12wdnurbk1().f[0]++;
  cov_12wdnurbk1().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_12wdnurbk1().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_12wdnurbk1().s[3]++;
_export(exports, {
  get WCAG_LEVELS() {
    /* istanbul ignore next */
    cov_12wdnurbk1().f[1]++;
    cov_12wdnurbk1().s[4]++;
    return WCAG_LEVELS;
  },
  get getAccessibleColors() {
    /* istanbul ignore next */
    cov_12wdnurbk1().f[2]++;
    cov_12wdnurbk1().s[5]++;
    return getAccessibleColors;
  },
  get getAccessibleTextColor() {
    /* istanbul ignore next */
    cov_12wdnurbk1().f[3]++;
    cov_12wdnurbk1().s[6]++;
    return getAccessibleTextColor;
  },
  get getContrastRatio() {
    /* istanbul ignore next */
    cov_12wdnurbk1().f[4]++;
    cov_12wdnurbk1().s[7]++;
    return getContrastRatio;
  },
  get getLuminance() {
    /* istanbul ignore next */
    cov_12wdnurbk1().f[5]++;
    cov_12wdnurbk1().s[8]++;
    return getLuminance;
  },
  get hexToRgb() {
    /* istanbul ignore next */
    cov_12wdnurbk1().f[6]++;
    cov_12wdnurbk1().s[9]++;
    return hexToRgb;
  },
  get isWCAGCompliant() {
    /* istanbul ignore next */
    cov_12wdnurbk1().f[7]++;
    cov_12wdnurbk1().s[10]++;
    return isWCAGCompliant;
  },
  get validateDesignTokens() {
    /* istanbul ignore next */
    cov_12wdnurbk1().f[8]++;
    cov_12wdnurbk1().s[11]++;
    return validateDesignTokens;
  }
});
/* istanbul ignore next */
cov_12wdnurbk1().s[12]++;
const hexToRgb = hex => {
  /* istanbul ignore next */
  cov_12wdnurbk1().f[9]++;
  const result =
  /* istanbul ignore next */
  (cov_12wdnurbk1().s[13]++, /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex));
  /* istanbul ignore next */
  cov_12wdnurbk1().s[14]++;
  return result ?
  /* istanbul ignore next */
  (cov_12wdnurbk1().b[0][0]++, [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)]) :
  /* istanbul ignore next */
  (cov_12wdnurbk1().b[0][1]++, null);
};
/* istanbul ignore next */
cov_12wdnurbk1().s[15]++;
const getLuminance = (r, g, b) => {
  /* istanbul ignore next */
  cov_12wdnurbk1().f[10]++;
  const [rs, gs, bs] =
  /* istanbul ignore next */
  (cov_12wdnurbk1().s[16]++, [r, g, b].map(c => {
    /* istanbul ignore next */
    cov_12wdnurbk1().f[11]++;
    cov_12wdnurbk1().s[17]++;
    c = c / 255;
    /* istanbul ignore next */
    cov_12wdnurbk1().s[18]++;
    return c <= 0.03928 ?
    /* istanbul ignore next */
    (cov_12wdnurbk1().b[1][0]++, c / 12.92) :
    /* istanbul ignore next */
    (cov_12wdnurbk1().b[1][1]++, Math.pow((c + 0.055) / 1.055, 2.4));
  }));
  /* istanbul ignore next */
  cov_12wdnurbk1().s[19]++;
  return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;
};
/* istanbul ignore next */
cov_12wdnurbk1().s[20]++;
const getContrastRatio = (color1, color2) => {
  /* istanbul ignore next */
  cov_12wdnurbk1().f[12]++;
  const rgb1 =
  /* istanbul ignore next */
  (cov_12wdnurbk1().s[21]++, hexToRgb(color1));
  const rgb2 =
  /* istanbul ignore next */
  (cov_12wdnurbk1().s[22]++, hexToRgb(color2));
  /* istanbul ignore next */
  cov_12wdnurbk1().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_12wdnurbk1().b[3][0]++, !rgb1) ||
  /* istanbul ignore next */
  (cov_12wdnurbk1().b[3][1]++, !rgb2)) {
    /* istanbul ignore next */
    cov_12wdnurbk1().b[2][0]++;
    cov_12wdnurbk1().s[24]++;
    return 0;
  } else
  /* istanbul ignore next */
  {
    cov_12wdnurbk1().b[2][1]++;
  }
  const lum1 =
  /* istanbul ignore next */
  (cov_12wdnurbk1().s[25]++, getLuminance(...rgb1));
  const lum2 =
  /* istanbul ignore next */
  (cov_12wdnurbk1().s[26]++, getLuminance(...rgb2));
  const lightest =
  /* istanbul ignore next */
  (cov_12wdnurbk1().s[27]++, Math.max(lum1, lum2));
  const darkest =
  /* istanbul ignore next */
  (cov_12wdnurbk1().s[28]++, Math.min(lum1, lum2));
  /* istanbul ignore next */
  cov_12wdnurbk1().s[29]++;
  return (lightest + 0.05) / (darkest + 0.05);
};
const WCAG_LEVELS =
/* istanbul ignore next */
(cov_12wdnurbk1().s[30]++, {
  AA_NORMAL: 4.5,
  AA_LARGE: 3,
  AAA_NORMAL: 7,
  AAA_LARGE: 4.5
});
/* istanbul ignore next */
cov_12wdnurbk1().s[31]++;
const isWCAGCompliant = (foreground, background, level =
/* istanbul ignore next */
(cov_12wdnurbk1().b[4][0]++, 'AA_NORMAL')) => {
  /* istanbul ignore next */
  cov_12wdnurbk1().f[13]++;
  const ratio =
  /* istanbul ignore next */
  (cov_12wdnurbk1().s[32]++, getContrastRatio(foreground, background));
  /* istanbul ignore next */
  cov_12wdnurbk1().s[33]++;
  return ratio >= WCAG_LEVELS[level];
};
/* istanbul ignore next */
cov_12wdnurbk1().s[34]++;
const getAccessibleColors = () => {
  /* istanbul ignore next */
  cov_12wdnurbk1().f[14]++;
  cov_12wdnurbk1().s[35]++;
  return {
    // High contrast pairs (AAA compliant)
    highContrast: {
      text: '#000000',
      background: '#ffffff',
      ratio: 21
    },
    // Primary colors with AA compliance
    primary: {
      text: '#ffffff',
      background: '#0ea5e9',
      ratio: getContrastRatio('#ffffff', '#0ea5e9')
    },
    // Error colors with high visibility
    error: {
      text: '#ffffff',
      background: '#dc2626',
      ratio: getContrastRatio('#ffffff', '#dc2626')
    },
    // Success colors
    success: {
      text: '#ffffff',
      background: '#16a34a',
      ratio: getContrastRatio('#ffffff', '#16a34a')
    },
    // Warning colors
    warning: {
      text: '#000000',
      background: '#facc15',
      ratio: getContrastRatio('#000000', '#facc15')
    },
    // Info colors
    info: {
      text: '#ffffff',
      background: '#2563eb',
      ratio: getContrastRatio('#ffffff', '#2563eb')
    }
  };
};
/* istanbul ignore next */
cov_12wdnurbk1().s[36]++;
const getAccessibleTextColor = backgroundColor => {
  /* istanbul ignore next */
  cov_12wdnurbk1().f[15]++;
  const whiteRatio =
  /* istanbul ignore next */
  (cov_12wdnurbk1().s[37]++, getContrastRatio('#ffffff', backgroundColor));
  const blackRatio =
  /* istanbul ignore next */
  (cov_12wdnurbk1().s[38]++, getContrastRatio('#000000', backgroundColor));
  /* istanbul ignore next */
  cov_12wdnurbk1().s[39]++;
  return whiteRatio >= blackRatio ?
  /* istanbul ignore next */
  (cov_12wdnurbk1().b[5][0]++, '#ffffff') :
  /* istanbul ignore next */
  (cov_12wdnurbk1().b[5][1]++, '#000000');
};
/* istanbul ignore next */
cov_12wdnurbk1().s[40]++;
const validateDesignTokens = () => {
  /* istanbul ignore next */
  cov_12wdnurbk1().f[16]++;
  const colors =
  /* istanbul ignore next */
  (cov_12wdnurbk1().s[41]++, getAccessibleColors());
  const results =
  /* istanbul ignore next */
  (cov_12wdnurbk1().s[42]++, []);
  /* istanbul ignore next */
  cov_12wdnurbk1().s[43]++;
  Object.entries(colors).forEach(([name, color]) => {
    /* istanbul ignore next */
    cov_12wdnurbk1().f[17]++;
    const isAA =
    /* istanbul ignore next */
    (cov_12wdnurbk1().s[44]++, color.ratio >= WCAG_LEVELS.AA_NORMAL);
    const isAAA =
    /* istanbul ignore next */
    (cov_12wdnurbk1().s[45]++, color.ratio >= WCAG_LEVELS.AAA_NORMAL);
    /* istanbul ignore next */
    cov_12wdnurbk1().s[46]++;
    results.push({
      name,
      foreground: color.text,
      background: color.background,
      ratio: Math.round(color.ratio * 100) / 100,
      isCompliant: isAA,
      level: isAAA ?
      /* istanbul ignore next */
      (cov_12wdnurbk1().b[6][0]++, 'AAA') :
      /* istanbul ignore next */
      (cov_12wdnurbk1().b[6][1]++, isAA ?
      /* istanbul ignore next */
      (cov_12wdnurbk1().b[7][0]++, 'AA') :
      /* istanbul ignore next */
      (cov_12wdnurbk1().b[7][1]++, 'Fail'))
    });
  });
  /* istanbul ignore next */
  cov_12wdnurbk1().s[47]++;
  return results;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,