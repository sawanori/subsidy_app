bd55fb1459721dddac013825009071ee
"use strict";

/* istanbul ignore next */
function cov_1p24bo7k3x() {
  var path = "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/lib/supabase/server.ts";
  var hash = "3fe61006cbe0e08ce5eff962e5967b1d561b32a9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/lib/supabase/server.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "3": {
        start: {
          line: 11,
          column: 13
        },
        end: {
          line: 11,
          column: 37
        }
      },
      "4": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 40
        }
      },
      "5": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 53
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 32,
          column: 7
        }
      },
      "7": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 44
        }
      },
      "8": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 29,
          column: 17
        }
      },
      "9": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 24,
          column: 23
        }
      },
      "10": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 62
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "createClient",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 27
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 13
          }
        },
        loc: {
          start: {
            line: 17,
            column: 22
          },
          end: {
            line: 19,
            column: 13
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 20,
            column: 13
          }
        },
        loc: {
          start: {
            line: 20,
            column: 34
          },
          end: {
            line: 30,
            column: 13
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 41
          },
          end: {
            line: 22,
            column: 42
          }
        },
        loc: {
          start: {
            line: 22,
            column: 69
          },
          end: {
            line: 24,
            column: 21
          }
        },
        line: 22
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/lib/supabase/server.ts"],
      sourcesContent: ["import { createServerClient, type CookieOptions } from '@supabase/ssr'\nimport { cookies } from 'next/headers'\n\nexport async function createClient() {\n  const cookieStore = await cookies()\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll()\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) => {\n              cookieStore.set(name, value, options)\n            })\n          } catch (error) {\n            // The `set` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    }\n  )\n}"],
      names: ["createClient", "cookieStore", "cookies", "createServerClient", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "NEXT_PUBLIC_SUPABASE_ANON_KEY", "getAll", "setAll", "cookiesToSet", "forEach", "name", "value", "options", "set", "error"],
      mappings: ";;;;+BAGsBA;;;eAAAA;;;qBAHiC;yBAC/B;AAEjB,eAAeA;IACpB,MAAMC,cAAc,MAAMC,IAAAA,gBAAO;IAEjC,OAAOC,IAAAA,uBAAkB,EACvBC,QAAQC,GAAG,CAACC,wBAAwB,EACpCF,QAAQC,GAAG,CAACE,6BAA6B,EACzC;QACEL,SAAS;YACPM;gBACE,OAAOP,YAAYO,MAAM;YAC3B;YACAC,QAAOC,YAAY;gBACjB,IAAI;oBACFA,aAAaC,OAAO,CAAC,CAAC,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAE;wBAC5Cb,YAAYc,GAAG,CAACH,MAAMC,OAAOC;oBAC/B;gBACF,EAAE,OAAOE,OAAO;gBACd,uDAAuD;gBACvD,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3fe61006cbe0e08ce5eff962e5967b1d561b32a9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1p24bo7k3x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1p24bo7k3x();
cov_1p24bo7k3x().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1p24bo7k3x().s[1]++;
Object.defineProperty(exports, "createClient", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1p24bo7k3x().f[0]++;
    cov_1p24bo7k3x().s[2]++;
    return createClient;
  }
});
const _ssr =
/* istanbul ignore next */
(cov_1p24bo7k3x().s[3]++, require("@supabase/ssr"));
const _headers =
/* istanbul ignore next */
(cov_1p24bo7k3x().s[4]++, require("next/headers"));
async function createClient() {
  /* istanbul ignore next */
  cov_1p24bo7k3x().f[1]++;
  const cookieStore =
  /* istanbul ignore next */
  (cov_1p24bo7k3x().s[5]++, await (0, _headers.cookies)());
  /* istanbul ignore next */
  cov_1p24bo7k3x().s[6]++;
  return (0, _ssr.createServerClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY, {
    cookies: {
      getAll() {
        /* istanbul ignore next */
        cov_1p24bo7k3x().f[2]++;
        cov_1p24bo7k3x().s[7]++;
        return cookieStore.getAll();
      },
      setAll(cookiesToSet) {
        /* istanbul ignore next */
        cov_1p24bo7k3x().f[3]++;
        cov_1p24bo7k3x().s[8]++;
        try {
          /* istanbul ignore next */
          cov_1p24bo7k3x().s[9]++;
          cookiesToSet.forEach(({
            name,
            value,
            options
          }) => {
            /* istanbul ignore next */
            cov_1p24bo7k3x().f[4]++;
            cov_1p24bo7k3x().s[10]++;
            cookieStore.set(name, value, options);
          });
        } catch (error) {
          // The `set` method was called from a Server Component.
          // This can be ignored if you have middleware refreshing
          // user sessions.
        }
      }
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXAyNGJvN2szeCIsImFjdHVhbENvdmVyYWdlIiwicyIsImNyZWF0ZUNsaWVudCIsImYiLCJjb29raWVTdG9yZSIsIl9oZWFkZXJzIiwiY29va2llcyIsIl9zc3IiLCJjcmVhdGVTZXJ2ZXJDbGllbnQiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJnZXRBbGwiLCJzZXRBbGwiLCJjb29raWVzVG9TZXQiLCJmb3JFYWNoIiwibmFtZSIsInZhbHVlIiwib3B0aW9ucyIsInNldCIsImVycm9yIl0sInNvdXJjZXMiOlsiL1VzZXJzL25vcml0YWthc2F3YWRhL0FJX1Avc3Vic2lkeUFwcC9mcm9udGVuZC9zcmMvbGliL3N1cGFiYXNlL3NlcnZlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTZXJ2ZXJDbGllbnQsIHR5cGUgQ29va2llT3B0aW9ucyB9IGZyb20gJ0BzdXBhYmFzZS9zc3InXG5pbXBvcnQgeyBjb29raWVzIH0gZnJvbSAnbmV4dC9oZWFkZXJzJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQ2xpZW50KCkge1xuICBjb25zdCBjb29raWVTdG9yZSA9IGF3YWl0IGNvb2tpZXMoKVxuXG4gIHJldHVybiBjcmVhdGVTZXJ2ZXJDbGllbnQoXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMISxcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSEsXG4gICAge1xuICAgICAgY29va2llczoge1xuICAgICAgICBnZXRBbGwoKSB7XG4gICAgICAgICAgcmV0dXJuIGNvb2tpZVN0b3JlLmdldEFsbCgpXG4gICAgICAgIH0sXG4gICAgICAgIHNldEFsbChjb29raWVzVG9TZXQpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29va2llc1RvU2V0LmZvckVhY2goKHsgbmFtZSwgdmFsdWUsIG9wdGlvbnMgfSkgPT4ge1xuICAgICAgICAgICAgICBjb29raWVTdG9yZS5zZXQobmFtZSwgdmFsdWUsIG9wdGlvbnMpXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAvLyBUaGUgYHNldGAgbWV0aG9kIHdhcyBjYWxsZWQgZnJvbSBhIFNlcnZlciBDb21wb25lbnQuXG4gICAgICAgICAgICAvLyBUaGlzIGNhbiBiZSBpZ25vcmVkIGlmIHlvdSBoYXZlIG1pZGRsZXdhcmUgcmVmcmVzaGluZ1xuICAgICAgICAgICAgLy8gdXNlciBzZXNzaW9ucy5cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH1cbiAgKVxufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBVU07SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBQSxjQUFBLEdBQUFFLENBQUE7Ozs7OzsrQkFQZ0I7Ozs7OztXQUFBQyxZQUFBOzs7OztrQ0FIaUM7OztrQ0FDL0I7QUFFakIsZUFBZUEsYUFBQTtFQUFBO0VBQUFILGNBQUEsR0FBQUksQ0FBQTtFQUNwQixNQUFNQyxXQUFBO0VBQUE7RUFBQSxDQUFBTCxjQUFBLEdBQUFFLENBQUEsT0FBYyxNQUFNLElBQUFJLFFBQUEsQ0FBQUMsT0FBTztFQUFBO0VBQUFQLGNBQUEsR0FBQUUsQ0FBQTtFQUVqQyxPQUFPLElBQUFNLElBQUEsQ0FBQUMsa0JBQWtCLEVBQ3ZCQyxPQUFBLENBQVFDLEdBQUcsQ0FBQ0Msd0JBQXdCLEVBQ3BDRixPQUFBLENBQVFDLEdBQUcsQ0FBQ0UsNkJBQTZCLEVBQ3pDO0lBQ0VOLE9BQUEsRUFBUztNQUNQTyxPQUFBO1FBQUE7UUFBQWQsY0FBQSxHQUFBSSxDQUFBO1FBQUFKLGNBQUEsR0FBQUUsQ0FBQTtRQUNFLE9BQU9HLFdBQUEsQ0FBWVMsTUFBTTtNQUMzQjtNQUNBQyxPQUFPQyxZQUFZO1FBQUE7UUFBQWhCLGNBQUEsR0FBQUksQ0FBQTtRQUFBSixjQUFBLEdBQUFFLENBQUE7UUFDakIsSUFBSTtVQUFBO1VBQUFGLGNBQUEsR0FBQUUsQ0FBQTtVQUNGYyxZQUFBLENBQWFDLE9BQU8sQ0FBQyxDQUFDO1lBQUVDLElBQUk7WUFBRUMsS0FBSztZQUFFQztVQUFPLENBQUU7WUFBQTtZQUFBcEIsY0FBQSxHQUFBSSxDQUFBO1lBQUFKLGNBQUEsR0FBQUUsQ0FBQTtZQUM1Q0csV0FBQSxDQUFZZ0IsR0FBRyxDQUFDSCxJQUFBLEVBQU1DLEtBQUEsRUFBT0MsT0FBQTtVQUMvQjtRQUNGLEVBQUUsT0FBT0UsS0FBQSxFQUFPO1VBQ2Q7VUFDQTtVQUNBO1FBQUE7TUFFSjtJQUNGO0VBQ0Y7QUFFSiIsImlnbm9yZUxpc3QiOltdfQ==