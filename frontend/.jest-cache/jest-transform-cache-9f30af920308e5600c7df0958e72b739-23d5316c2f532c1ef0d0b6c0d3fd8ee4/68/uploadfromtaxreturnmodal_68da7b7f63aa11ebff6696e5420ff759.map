{"version":3,"names":["UploadFromTaxReturnModal","isOpen","onClose","onExtractComplete","applicationId","cov_1b4wl14ztb","f","step","setStep","s","_react","useState","taxReturnType","setTaxReturnType","uploadedFile","setUploadedFile","uploadResponse","setUploadResponse","extractResponse","setExtractResponse","error","setError","isProcessing","setIsProcessing","handleFileSelect","file","handleUpload","uploadRes","_client","apiClient","uploadFile","type","extractRes","post","file_id","ocr_provider","setTimeout","handleClose","err","b","message","handleNext","canProceed","_jsxruntime","jsx","_dialog","Dialog","open","onOpenChange","jsxs","DialogContent","className","DialogHeader","DialogTitle","_lucidereact","FileText","DialogDescription","_label","Label","_radiogroup","RadioGroup","value","onValueChange","RadioGroupItem","id","htmlFor","_alert","Alert","Info","AlertDescription","_filedropzone","FileDropZone","onFileSelect","accept","maxSize","variant","AlertCircle","CheckCircle","document_type","Object","keys","extracted_fields","length","DialogFooter","_button","Button","onClick","disabled"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/intake/upload-from-tax-return-modal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { Label } from '@/components/ui/label';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { FileDropZone } from './file-drop-zone';\nimport { apiClient } from '@/lib/api/client';\nimport { IntakeResponse, ExtractResponse } from '@/lib/api/types';\nimport { FileText, Upload, CheckCircle, AlertCircle, Info } from 'lucide-react';\n\ninterface UploadFromTaxReturnModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onExtractComplete: (data: ExtractResponse) => void;\n  applicationId?: string;\n}\n\ntype TaxReturnType = 'personal' | 'corporate';\n\nexport function UploadFromTaxReturnModal({\n  isOpen,\n  onClose,\n  onExtractComplete,\n  applicationId,\n}: UploadFromTaxReturnModalProps) {\n  const [step, setStep] = useState<'select' | 'upload' | 'processing' | 'complete'>('select');\n  const [taxReturnType, setTaxReturnType] = useState<TaxReturnType>('personal');\n  const [uploadedFile, setUploadedFile] = useState<File | null>(null);\n  const [uploadResponse, setUploadResponse] = useState<IntakeResponse | null>(null);\n  const [extractResponse, setExtractResponse] = useState<ExtractResponse | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const handleFileSelect = (file: File) => {\n    setUploadedFile(file);\n    setError(null);\n  };\n\n  const handleUpload = async (file: File) => {\n    setIsProcessing(true);\n    setError(null);\n    setStep('processing');\n\n    try {\n      // ファイルアップロード\n      const uploadRes = await apiClient.uploadFile<IntakeResponse>(\n        '/intake/upload',\n        file,\n        { type: 'tax_return' }\n      );\n      setUploadResponse(uploadRes);\n\n      // OCR処理とデータ抽出\n      const extractRes = await apiClient.post<ExtractResponse>('/intake/extract', {\n        file_id: uploadRes.file_id,\n        ocr_provider: 'tesseract',\n      });\n      setExtractResponse(extractRes);\n\n      // 成功\n      setStep('complete');\n\n      // 2秒後に結果を返す\n      setTimeout(() => {\n        onExtractComplete(extractRes);\n        handleClose();\n      }, 2000);\n    } catch (err: any) {\n      setError(err.message || '処理中にエラーが発生しました');\n      setStep('upload');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleClose = () => {\n    setStep('select');\n    setTaxReturnType('personal');\n    setUploadedFile(null);\n    setUploadResponse(null);\n    setExtractResponse(null);\n    setError(null);\n    setIsProcessing(false);\n    onClose();\n  };\n\n  const handleNext = () => {\n    if (step === 'select') {\n      setStep('upload');\n    } else if (step === 'upload' && uploadedFile) {\n      handleUpload(uploadedFile);\n    }\n  };\n\n  const canProceed = () => {\n    if (step === 'select') return true;\n    if (step === 'upload') return uploadedFile !== null;\n    return false;\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => { if (!open) handleClose(); }}>\n      <DialogContent className=\"max-w-2xl\">\n        <DialogHeader>\n          <DialogTitle>\n            <div className=\"flex items-center gap-2\">\n              <FileText className=\"h-5 w-5\" />\n              確定申告書からデータを取り込む\n            </div>\n          </DialogTitle>\n          <DialogDescription>\n            確定申告書をアップロードして、申請者情報を自動で抽出します\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"py-6\">\n          {/* ステップ1: 種別選択 */}\n          {step === 'select' && (\n            <div className=\"space-y-6\">\n              <div className=\"space-y-4\">\n                <Label className=\"text-base font-medium\">確定申告書の種別を選択</Label>\n                <RadioGroup\n                  value={taxReturnType}\n                  onValueChange={(value) => setTaxReturnType(value as TaxReturnType)}\n                >\n                  <div className=\"flex items-start space-x-3 rounded-lg border p-4 hover:bg-accent/50\">\n                    <RadioGroupItem value=\"personal\" id=\"personal\" className=\"mt-1\" />\n                    <div className=\"flex-1\">\n                      <Label htmlFor=\"personal\" className=\"cursor-pointer\">\n                        <div className=\"font-medium\">個人事業主</div>\n                        <div className=\"text-sm text-muted-foreground mt-1\">\n                          所得税の確定申告書（青色申告・白色申告）\n                        </div>\n                      </Label>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start space-x-3 rounded-lg border p-4 hover:bg-accent/50\">\n                    <RadioGroupItem value=\"corporate\" id=\"corporate\" className=\"mt-1\" />\n                    <div className=\"flex-1\">\n                      <Label htmlFor=\"corporate\" className=\"cursor-pointer\">\n                        <div className=\"font-medium\">法人</div>\n                        <div className=\"text-sm text-muted-foreground mt-1\">\n                          法人税の確定申告書（別表含む）\n                        </div>\n                      </Label>\n                    </div>\n                  </div>\n                </RadioGroup>\n              </div>\n\n              <Alert>\n                <Info className=\"h-4 w-4\" />\n                <AlertDescription>\n                  確定申告書から以下の情報を自動抽出します：\n                  <ul className=\"list-disc list-inside mt-2 space-y-1\">\n                    <li>氏名・法人名</li>\n                    <li>住所・所在地</li>\n                    <li>屋号（個人事業主の場合）</li>\n                    <li>所得金額・売上高</li>\n                    <li>事業年度</li>\n                  </ul>\n                </AlertDescription>\n              </Alert>\n            </div>\n          )}\n\n          {/* ステップ2: アップロード */}\n          {step === 'upload' && (\n            <div className=\"space-y-6\">\n              <div>\n                <Label className=\"text-base font-medium mb-4 block\">\n                  {taxReturnType === 'personal' ? '個人' : '法人'}の確定申告書をアップロード\n                </Label>\n                <FileDropZone\n                  onFileSelect={handleFileSelect}\n                  accept={{\n                    'application/pdf': ['.pdf'],\n                    'image/*': ['.png', '.jpg', '.jpeg'],\n                  }}\n                  maxSize={20 * 1024 * 1024} // 20MB\n                />\n              </div>\n\n              {error && (\n                <Alert variant=\"destructive\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>{error}</AlertDescription>\n                </Alert>\n              )}\n\n              <Alert>\n                <Info className=\"h-4 w-4\" />\n                <AlertDescription>\n                  PDFまたは画像形式の確定申告書をアップロードしてください。\n                  複数ページの場合は、すべてのページを含むPDFファイルを推奨します。\n                </AlertDescription>\n              </Alert>\n            </div>\n          )}\n\n          {/* ステップ3: 処理中 */}\n          {step === 'processing' && (\n            <div className=\"flex flex-col items-center justify-center py-12 space-y-4\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n              <p className=\"text-lg font-medium\">処理中...</p>\n              <p className=\"text-sm text-muted-foreground text-center\">\n                確定申告書を解析してデータを抽出しています\n              </p>\n            </div>\n          )}\n\n          {/* ステップ4: 完了 */}\n          {step === 'complete' && (\n            <div className=\"flex flex-col items-center justify-center py-12 space-y-4\">\n              <CheckCircle className=\"h-12 w-12 text-status-success\" />\n              <p className=\"text-lg font-medium\">抽出完了</p>\n              <p className=\"text-sm text-muted-foreground text-center\">\n                確定申告書からデータの抽出が完了しました\n              </p>\n              {extractResponse && (\n                <div className=\"text-sm text-muted-foreground\">\n                  <p>文書タイプ: {extractResponse.document_type}</p>\n                  <p>抽出フィールド数: {Object.keys(extractResponse.extracted_fields).length}</p>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={handleClose}>\n            {step === 'complete' ? '閉じる' : 'キャンセル'}\n          </Button>\n          {step !== 'processing' && step !== 'complete' && (\n            <Button onClick={handleNext} disabled={!canProceed() || isProcessing}>\n              {step === 'select' ? '次へ' : 'アップロード'}\n            </Button>\n          )}\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"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","ignoreList":[]}