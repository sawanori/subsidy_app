f747495fa48cb343cb82698fae306cbd
'use client';
"use strict";

/* istanbul ignore next */
function cov_1wusvwecbs() {
  var path = "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/jobs/job-progress-toast.tsx";
  var hash = "98be67410be3beb429e846918a3ef8cf5d42c000";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/jobs/job-progress-toast.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 32
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 40
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 39
        }
      },
      "10": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 37
        }
      },
      "11": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 25,
          column: 43
        }
      },
      "12": {
        start: {
          line: 26,
          column: 14
        },
        end: {
          line: 26,
          column: 35
        }
      },
      "13": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 48
        }
      },
      "14": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 44
        }
      },
      "15": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 47
        }
      },
      "16": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 51
        }
      },
      "17": {
        start: {
          line: 31,
          column: 39
        },
        end: {
          line: 31,
          column: 51
        }
      },
      "18": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 32,
          column: 41
        }
      },
      "19": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "20": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 20
        }
      },
      "21": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 66
        }
      },
      "22": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "23": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 19
        }
      },
      "24": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "25": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "26": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 53
        }
      },
      "27": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "28": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 30
        }
      },
      "29": {
        start: {
          line: 51,
          column: 17
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "30": {
        start: {
          line: 54,
          column: 32
        },
        end: {
          line: 54,
          column: 88
        }
      },
      "31": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "32": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "33": {
        start: {
          line: 57,
          column: 23
        },
        end: {
          line: 57,
          column: 95
        }
      },
      "34": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "35": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 57
        }
      },
      "36": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 39
        }
      },
      "37": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 25
        }
      },
      "38": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "39": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 31
        }
      },
      "40": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 18
        }
      },
      "41": {
        start: {
          line: 72,
          column: 40
        },
        end: {
          line: 72,
          column: 71
        }
      },
      "42": {
        start: {
          line: 73,
          column: 46
        },
        end: {
          line: 73,
          column: 70
        }
      },
      "43": {
        start: {
          line: 74,
          column: 38
        },
        end: {
          line: 74,
          column: 69
        }
      },
      "44": {
        start: {
          line: 77,
          column: 25
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "45": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "46": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 82,
          column: 19
        }
      },
      "47": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 86,
          column: 19
        }
      },
      "48": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 90,
          column: 19
        }
      },
      "49": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 94,
          column: 19
        }
      },
      "50": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 98,
          column: 19
        }
      },
      "51": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 102,
          column: 19
        }
      },
      "52": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 106,
          column: 19
        }
      },
      "53": {
        start: {
          line: 111,
          column: 28
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "54": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "55": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 116,
          column: 19
        }
      },
      "56": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 120,
          column: 19
        }
      },
      "57": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 124,
          column: 19
        }
      },
      "58": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 128,
          column: 19
        }
      },
      "59": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 132,
          column: 19
        }
      },
      "60": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 136,
          column: 19
        }
      },
      "61": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 140,
          column: 19
        }
      },
      "62": {
        start: {
          line: 145,
          column: 29
        },
        end: {
          line: 153,
          column: 10
        }
      },
      "63": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "64": {
        start: {
          line: 147,
          column: 29
        },
        end: {
          line: 147,
          column: 71
        }
      },
      "65": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 28
        }
      },
      "66": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 63
        }
      },
      "67": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 24
        }
      },
      "68": {
        start: {
          line: 156,
          column: 33
        },
        end: {
          line: 164,
          column: 10
        }
      },
      "69": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "70": {
        start: {
          line: 158,
          column: 29
        },
        end: {
          line: 158,
          column: 72
        }
      },
      "71": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 33
        }
      },
      "72": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 65
        }
      },
      "73": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 22
        }
      },
      "74": {
        start: {
          line: 167,
          column: 24
        },
        end: {
          line: 202,
          column: 6
        }
      },
      "75": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 198,
          column: 11
        }
      },
      "76": {
        start: {
          line: 169,
          column: 27
        },
        end: {
          line: 169,
          column: 40
        }
      },
      "77": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 196,
          column: 13
        }
      },
      "78": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 38
        }
      },
      "79": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 180,
          column: 23
        }
      },
      "80": {
        start: {
          line: 177,
          column: 50
        },
        end: {
          line: 180,
          column: 21
        }
      },
      "81": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 188,
          column: 17
        }
      },
      "82": {
        start: {
          line: 183,
          column: 20
        },
        end: {
          line: 183,
          column: 38
        }
      },
      "83": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 184,
          column: 49
        }
      },
      "84": {
        start: {
          line: 185,
          column: 23
        },
        end: {
          line: 188,
          column: 17
        }
      },
      "85": {
        start: {
          line: 186,
          column: 20
        },
        end: {
          line: 186,
          column: 35
        }
      },
      "86": {
        start: {
          line: 187,
          column: 20
        },
        end: {
          line: 187,
          column: 47
        }
      },
      "87": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 40
        }
      },
      "88": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 195,
          column: 17
        }
      },
      "89": {
        start: {
          line: 194,
          column: 20
        },
        end: {
          line: 194,
          column: 43
        }
      },
      "90": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 26
        }
      },
      "91": {
        start: {
          line: 205,
          column: 6
        },
        end: {
          line: 228,
          column: 7
        }
      },
      "92": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 31
        }
      },
      "93": {
        start: {
          line: 206,
          column: 24
        },
        end: {
          line: 206,
          column: 31
        }
      },
      "94": {
        start: {
          line: 207,
          column: 25
        },
        end: {
          line: 219,
          column: 24
        }
      },
      "95": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 218,
          column: 13
        }
      },
      "96": {
        start: {
          line: 210,
          column: 28
        },
        end: {
          line: 210,
          column: 55
        }
      },
      "97": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 213,
          column: 17
        }
      },
      "98": {
        start: {
          line: 212,
          column: 20
        },
        end: {
          line: 212,
          column: 35
        }
      },
      "99": {
        start: {
          line: 216,
          column: 29
        },
        end: {
          line: 216,
          column: 55
        }
      },
      "100": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 217,
          column: 40
        }
      },
      "101": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 43
        }
      },
      "102": {
        start: {
          line: 220,
          column: 19
        },
        end: {
          line: 220,
          column: 42
        }
      },
      "103": {
        start: {
          line: 231,
          column: 27
        },
        end: {
          line: 284,
          column: 5
        }
      },
      "104": {
        start: {
          line: 232,
          column: 21
        },
        end: {
          line: 232,
          column: 41
        }
      },
      "105": {
        start: {
          line: 233,
          column: 24
        },
        end: {
          line: 233,
          column: 61
        }
      },
      "106": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "107": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 254,
          column: 15
        }
      },
      "108": {
        start: {
          line: 255,
          column: 15
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "109": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 282,
          column: 15
        }
      },
      "110": {
        start: {
          line: 280,
          column: 33
        },
        end: {
          line: 280,
          column: 49
        }
      },
      "111": {
        start: {
          line: 287,
          column: 32
        },
        end: {
          line: 357,
          column: 5
        }
      },
      "112": {
        start: {
          line: 288,
          column: 24
        },
        end: {
          line: 288,
          column: 48
        }
      },
      "113": {
        start: {
          line: 289,
          column: 21
        },
        end: {
          line: 289,
          column: 41
        }
      },
      "114": {
        start: {
          line: 290,
          column: 25
        },
        end: {
          line: 290,
          column: 42
        }
      },
      "115": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 352,
          column: 11
        }
      },
      "116": {
        start: {
          line: 291,
          column: 48
        },
        end: {
          line: 349,
          column: 14
        }
      },
      "117": {
        start: {
          line: 332,
          column: 45
        },
        end: {
          line: 332,
          column: 61
        }
      },
      "118": {
        start: {
          line: 341,
          column: 45
        },
        end: {
          line: 341,
          column: 62
        }
      },
      "119": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 356,
          column: 9
        }
      },
      "120": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 65
        }
      },
      "121": {
        start: {
          line: 355,
          column: 27
        },
        end: {
          line: 355,
          column: 57
        }
      },
      "122": {
        start: {
          line: 360,
          column: 32
        },
        end: {
          line: 375,
          column: 5
        }
      },
      "123": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 374,
          column: 9
        }
      },
      "124": {
        start: {
          line: 363,
          column: 16
        },
        end: {
          line: 363,
          column: 38
        }
      },
      "125": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 365,
          column: 35
        }
      },
      "126": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 367,
          column: 39
        }
      },
      "127": {
        start: {
          line: 369,
          column: 16
        },
        end: {
          line: 369,
          column: 54
        }
      },
      "128": {
        start: {
          line: 371,
          column: 16
        },
        end: {
          line: 371,
          column: 68
        }
      },
      "129": {
        start: {
          line: 373,
          column: 16
        },
        end: {
          line: 373,
          column: 36
        }
      },
      "130": {
        start: {
          line: 378,
          column: 23
        },
        end: {
          line: 385,
          column: 5
        }
      },
      "131": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "132": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 62
        }
      },
      "133": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 47
        }
      },
      "134": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 383,
          column: 46
        }
      },
      "135": {
        start: {
          line: 388,
          column: 24
        },
        end: {
          line: 395,
          column: 5
        }
      },
      "136": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 394,
          column: 9
        }
      },
      "137": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 63
        }
      },
      "138": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 391,
          column: 48
        }
      },
      "139": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 393,
          column: 48
        }
      },
      "140": {
        start: {
          line: 398,
          column: 23
        },
        end: {
          line: 405,
          column: 5
        }
      },
      "141": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 404,
          column: 9
        }
      },
      "142": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 62
        }
      },
      "143": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 47
        }
      },
      "144": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 403,
          column: 47
        }
      },
      "145": {
        start: {
          line: 408,
          column: 24
        },
        end: {
          line: 415,
          column: 5
        }
      },
      "146": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 414,
          column: 9
        }
      },
      "147": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 63
        }
      },
      "148": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 45
        }
      },
      "149": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 45
        }
      },
      "150": {
        start: {
          line: 418,
          column: 29
        },
        end: {
          line: 425,
          column: 5
        }
      },
      "151": {
        start: {
          line: 419,
          column: 22
        },
        end: {
          line: 419,
          column: 55
        }
      },
      "152": {
        start: {
          line: 420,
          column: 20
        },
        end: {
          line: 420,
          column: 86
        }
      },
      "153": {
        start: {
          line: 421,
          column: 24
        },
        end: {
          line: 421,
          column: 56
        }
      },
      "154": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 47
        }
      },
      "155": {
        start: {
          line: 422,
          column: 26
        },
        end: {
          line: 422,
          column: 47
        }
      },
      "156": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 423,
          column: 66
        }
      },
      "157": {
        start: {
          line: 423,
          column: 28
        },
        end: {
          line: 423,
          column: 66
        }
      },
      "158": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 49
        }
      },
      "159": {
        start: {
          line: 427,
          column: 4
        },
        end: {
          line: 546,
          column: 5
        }
      },
      "160": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 545,
          column: 11
        }
      },
      "161": {
        start: {
          line: 451,
          column: 89
        },
        end: {
          line: 508,
          column: 46
        }
      },
      "162": {
        start: {
          line: 485,
          column: 69
        },
        end: {
          line: 485,
          column: 86
        }
      },
      "163": {
        start: {
          line: 492,
          column: 69
        },
        end: {
          line: 492,
          column: 85
        }
      },
      "164": {
        start: {
          line: 500,
          column: 69
        },
        end: {
          line: 500,
          column: 86
        }
      },
      "165": {
        start: {
          line: 509,
          column: 71
        },
        end: {
          line: 539,
          column: 46
        }
      },
      "166": {
        start: {
          line: 533,
          column: 61
        },
        end: {
          line: 533,
          column: 77
        }
      },
      "167": {
        start: {
          line: 548,
          column: 4
        },
        end: {
          line: 548,
          column: 16
        }
      },
      "168": {
        start: {
          line: 551,
          column: 4
        },
        end: {
          line: 559,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 36
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 33
          }
        },
        loc: {
          start: {
            line: 30,
            column: 47
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 39
          },
          end: {
            line: 34,
            column: 40
          }
        },
        loc: {
          start: {
            line: 34,
            column: 61
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 38,
            column: 9
          },
          end: {
            line: 38,
            column: 34
          }
        },
        loc: {
          start: {
            line: 38,
            column: 53
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 38
      },
      "6": {
        name: "JobProgressToast",
        decl: {
          start: {
            line: 71,
            column: 9
          },
          end: {
            line: 71,
            column: 25
          }
        },
        loc: {
          start: {
            line: 71,
            column: 118
          },
          end: {
            line: 549,
            column: 1
          }
        },
        line: 71
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 77,
            column: 25
          },
          end: {
            line: 77,
            column: 26
          }
        },
        loc: {
          start: {
            line: 77,
            column: 33
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 77
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 111,
            column: 28
          },
          end: {
            line: 111,
            column: 29
          }
        },
        loc: {
          start: {
            line: 111,
            column: 38
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 111
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 145,
            column: 53
          },
          end: {
            line: 145,
            column: 54
          }
        },
        loc: {
          start: {
            line: 145,
            column: 65
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 145
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 156,
            column: 57
          },
          end: {
            line: 156,
            column: 58
          }
        },
        loc: {
          start: {
            line: 156,
            column: 67
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 156
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 167,
            column: 48
          },
          end: {
            line: 167,
            column: 49
          }
        },
        loc: {
          start: {
            line: 167,
            column: 55
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 167
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 168,
            column: 22
          },
          end: {
            line: 168,
            column: 23
          }
        },
        loc: {
          start: {
            line: 168,
            column: 30
          },
          end: {
            line: 198,
            column: 9
          }
        },
        line: 168
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 177,
            column: 33
          },
          end: {
            line: 177,
            column: 34
          }
        },
        loc: {
          start: {
            line: 177,
            column: 50
          },
          end: {
            line: 180,
            column: 21
          }
        },
        line: 177
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 205,
            column: 28
          },
          end: {
            line: 205,
            column: 29
          }
        },
        loc: {
          start: {
            line: 205,
            column: 32
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 205
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 207,
            column: 37
          },
          end: {
            line: 207,
            column: 38
          }
        },
        loc: {
          start: {
            line: 207,
            column: 47
          },
          end: {
            line: 219,
            column: 9
          }
        },
        line: 207
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 220,
            column: 15
          },
          end: {
            line: 220,
            column: 16
          }
        },
        loc: {
          start: {
            line: 220,
            column: 19
          },
          end: {
            line: 220,
            column: 42
          }
        },
        line: 220
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 231,
            column: 27
          },
          end: {
            line: 231,
            column: 28
          }
        },
        loc: {
          start: {
            line: 231,
            column: 40
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 231
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 280,
            column: 29
          },
          end: {
            line: 280,
            column: 30
          }
        },
        loc: {
          start: {
            line: 280,
            column: 33
          },
          end: {
            line: 280,
            column: 49
          }
        },
        line: 280
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 287,
            column: 32
          },
          end: {
            line: 287,
            column: 33
          }
        },
        loc: {
          start: {
            line: 287,
            column: 39
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 287
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 291,
            column: 29
          },
          end: {
            line: 291,
            column: 30
          }
        },
        loc: {
          start: {
            line: 291,
            column: 48
          },
          end: {
            line: 349,
            column: 14
          }
        },
        line: 291
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 332,
            column: 41
          },
          end: {
            line: 332,
            column: 42
          }
        },
        loc: {
          start: {
            line: 332,
            column: 45
          },
          end: {
            line: 332,
            column: 61
          }
        },
        line: 332
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 341,
            column: 41
          },
          end: {
            line: 341,
            column: 42
          }
        },
        loc: {
          start: {
            line: 341,
            column: 45
          },
          end: {
            line: 341,
            column: 62
          }
        },
        line: 341
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 355,
            column: 23
          },
          end: {
            line: 355,
            column: 24
          }
        },
        loc: {
          start: {
            line: 355,
            column: 27
          },
          end: {
            line: 355,
            column: 57
          }
        },
        line: 355
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 360,
            column: 32
          },
          end: {
            line: 360,
            column: 33
          }
        },
        loc: {
          start: {
            line: 360,
            column: 39
          },
          end: {
            line: 375,
            column: 5
          }
        },
        line: 360
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 378,
            column: 23
          },
          end: {
            line: 378,
            column: 24
          }
        },
        loc: {
          start: {
            line: 378,
            column: 35
          },
          end: {
            line: 385,
            column: 5
          }
        },
        line: 378
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 388,
            column: 24
          },
          end: {
            line: 388,
            column: 25
          }
        },
        loc: {
          start: {
            line: 388,
            column: 36
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 388
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 398,
            column: 23
          },
          end: {
            line: 398,
            column: 24
          }
        },
        loc: {
          start: {
            line: 398,
            column: 35
          },
          end: {
            line: 405,
            column: 5
          }
        },
        line: 398
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 408,
            column: 24
          },
          end: {
            line: 408,
            column: 25
          }
        },
        loc: {
          start: {
            line: 408,
            column: 36
          },
          end: {
            line: 415,
            column: 5
          }
        },
        line: 408
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 418,
            column: 29
          },
          end: {
            line: 418,
            column: 30
          }
        },
        loc: {
          start: {
            line: 418,
            column: 36
          },
          end: {
            line: 425,
            column: 5
          }
        },
        line: 418
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 451,
            column: 68
          },
          end: {
            line: 451,
            column: 69
          }
        },
        loc: {
          start: {
            line: 451,
            column: 89
          },
          end: {
            line: 508,
            column: 46
          }
        },
        line: 451
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 485,
            column: 65
          },
          end: {
            line: 485,
            column: 66
          }
        },
        loc: {
          start: {
            line: 485,
            column: 69
          },
          end: {
            line: 485,
            column: 86
          }
        },
        line: 485
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 492,
            column: 65
          },
          end: {
            line: 492,
            column: 66
          }
        },
        loc: {
          start: {
            line: 492,
            column: 69
          },
          end: {
            line: 492,
            column: 85
          }
        },
        line: 492
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 500,
            column: 65
          },
          end: {
            line: 500,
            column: 66
          }
        },
        loc: {
          start: {
            line: 500,
            column: 69
          },
          end: {
            line: 500,
            column: 86
          }
        },
        line: 500
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 509,
            column: 50
          },
          end: {
            line: 509,
            column: 51
          }
        },
        loc: {
          start: {
            line: 509,
            column: 71
          },
          end: {
            line: 539,
            column: 46
          }
        },
        line: 509
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 533,
            column: 57
          },
          end: {
            line: 533,
            column: 58
          }
        },
        loc: {
          start: {
            line: 533,
            column: 61
          },
          end: {
            line: 533,
            column: 77
          }
        },
        line: 533
      },
      "36": {
        name: "JobProgressToastProvider",
        decl: {
          start: {
            line: 550,
            column: 9
          },
          end: {
            line: 550,
            column: 33
          }
        },
        loc: {
          start: {
            line: 550,
            column: 48
          },
          end: {
            line: 560,
            column: 1
          }
        },
        line: 550
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 15
          },
          end: {
            line: 35,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 35,
            column: 45
          }
        }, {
          start: {
            line: 35,
            column: 48
          },
          end: {
            line: 35,
            column: 65
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 20
          }
        }, {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 27
          }
        }, {
          start: {
            line: 39,
            column: 31
          },
          end: {
            line: 39,
            column: 45
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 20
          }
        }, {
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 42,
            column: 47
          }
        }, {
          start: {
            line: 42,
            column: 51
          },
          end: {
            line: 42,
            column: 76
          }
        }],
        line: 42
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 31
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 54,
            column: 32
          },
          end: {
            line: 54,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 32
          },
          end: {
            line: 54,
            column: 53
          }
        }, {
          start: {
            line: 54,
            column: 57
          },
          end: {
            line: 54,
            column: 88
          }
        }],
        line: 54
      },
      "9": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "10": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 29
          }
        }, {
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 56,
            column: 79
          }
        }],
        line: 56
      },
      "11": {
        loc: {
          start: {
            line: 57,
            column: 23
          },
          end: {
            line: 57,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 47
          },
          end: {
            line: 57,
            column: 88
          }
        }, {
          start: {
            line: 57,
            column: 91
          },
          end: {
            line: 57,
            column: 95
          }
        }],
        line: 57
      },
      "12": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        }, {
          start: {
            line: 60,
            column: 19
          },
          end: {
            line: 62,
            column: 13
          }
        }],
        line: 58
      },
      "13": {
        loc: {
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 20
          }
        }, {
          start: {
            line: 58,
            column: 25
          },
          end: {
            line: 58,
            column: 33
          }
        }, {
          start: {
            line: 58,
            column: 37
          },
          end: {
            line: 58,
            column: 45
          }
        }],
        line: 58
      },
      "14": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "15": {
        loc: {
          start: {
            line: 71,
            column: 35
          },
          end: {
            line: 71,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 71,
            column: 47
          },
          end: {
            line: 71,
            column: 51
          }
        }],
        line: 71
      },
      "16": {
        loc: {
          start: {
            line: 71,
            column: 53
          },
          end: {
            line: 71,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 71,
            column: 68
          },
          end: {
            line: 71,
            column: 72
          }
        }],
        line: 71
      },
      "17": {
        loc: {
          start: {
            line: 71,
            column: 95
          },
          end: {
            line: 71,
            column: 114
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 71,
            column: 109
          },
          end: {
            line: 71,
            column: 114
          }
        }],
        line: 71
      },
      "18": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 82,
            column: 19
          }
        }, {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 86,
            column: 19
          }
        }, {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 90,
            column: 19
          }
        }, {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 94,
            column: 19
          }
        }, {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 98,
            column: 19
          }
        }, {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 102,
            column: 19
          }
        }, {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 106,
            column: 19
          }
        }],
        line: 78
      },
      "19": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 116,
            column: 19
          }
        }, {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 120,
            column: 19
          }
        }, {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 124,
            column: 19
          }
        }, {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 128,
            column: 19
          }
        }, {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 132,
            column: 19
          }
        }, {
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 136,
            column: 19
          }
        }, {
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 140,
            column: 19
          }
        }],
        line: 112
      },
      "20": {
        loc: {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        }, {
          start: {
            line: 189,
            column: 19
          },
          end: {
            line: 196,
            column: 13
          }
        }],
        line: 171
      },
      "21": {
        loc: {
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 188,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 188,
            column: 17
          }
        }, {
          start: {
            line: 185,
            column: 23
          },
          end: {
            line: 188,
            column: 17
          }
        }],
        line: 182
      },
      "22": {
        loc: {
          start: {
            line: 185,
            column: 23
          },
          end: {
            line: 188,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 23
          },
          end: {
            line: 188,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "23": {
        loc: {
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 195,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 195,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "24": {
        loc: {
          start: {
            line: 193,
            column: 20
          },
          end: {
            line: 193,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 20
          },
          end: {
            line: 193,
            column: 44
          }
        }, {
          start: {
            line: 193,
            column: 48
          },
          end: {
            line: 193,
            column: 60
          }
        }],
        line: 193
      },
      "25": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 206,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 206,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "26": {
        loc: {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 218,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 218,
            column: 13
          }
        }, {
          start: {
            line: 214,
            column: 19
          },
          end: {
            line: 218,
            column: 13
          }
        }],
        line: 208
      },
      "27": {
        loc: {
          start: {
            line: 211,
            column: 16
          },
          end: {
            line: 213,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 16
          },
          end: {
            line: 213,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "28": {
        loc: {
          start: {
            line: 233,
            column: 24
          },
          end: {
            line: 233,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 24
          },
          end: {
            line: 233,
            column: 35
          }
        }, {
          start: {
            line: 233,
            column: 39
          },
          end: {
            line: 233,
            column: 61
          }
        }],
        line: 233
      },
      "29": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        }, {
          start: {
            line: 255,
            column: 15
          },
          end: {
            line: 283,
            column: 9
          }
        }],
        line: 234
      },
      "30": {
        loc: {
          start: {
            line: 255,
            column: 15
          },
          end: {
            line: 283,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 15
          },
          end: {
            line: 283,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "31": {
        loc: {
          start: {
            line: 271,
            column: 42
          },
          end: {
            line: 271,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 42
          },
          end: {
            line: 271,
            column: 51
          }
        }, {
          start: {
            line: 271,
            column: 55
          },
          end: {
            line: 271,
            column: 71
          }
        }],
        line: 271
      },
      "32": {
        loc: {
          start: {
            line: 278,
            column: 24
          },
          end: {
            line: 281,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 278,
            column: 97
          },
          end: {
            line: 281,
            column: 17
          }
        }, {
          start: {
            line: 281,
            column: 20
          },
          end: {
            line: 281,
            column: 29
          }
        }],
        line: 278
      },
      "33": {
        loc: {
          start: {
            line: 278,
            column: 24
          },
          end: {
            line: 278,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 24
          },
          end: {
            line: 278,
            column: 52
          }
        }, {
          start: {
            line: 278,
            column: 56
          },
          end: {
            line: 278,
            column: 94
          }
        }],
        line: 278
      },
      "34": {
        loc: {
          start: {
            line: 278,
            column: 74
          },
          end: {
            line: 278,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 74
          },
          end: {
            line: 278,
            column: 88
          }
        }, {
          start: {
            line: 278,
            column: 92
          },
          end: {
            line: 278,
            column: 93
          }
        }],
        line: 278
      },
      "35": {
        loc: {
          start: {
            line: 290,
            column: 25
          },
          end: {
            line: 290,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 25
          },
          end: {
            line: 290,
            column: 37
          }
        }, {
          start: {
            line: 290,
            column: 41
          },
          end: {
            line: 290,
            column: 42
          }
        }],
        line: 290
      },
      "36": {
        loc: {
          start: {
            line: 319,
            column: 28
          },
          end: {
            line: 322,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 319,
            column: 28
          },
          end: {
            line: 319,
            column: 50
          }
        }, {
          start: {
            line: 319,
            column: 68
          },
          end: {
            line: 322,
            column: 30
          }
        }],
        line: 319
      },
      "37": {
        loc: {
          start: {
            line: 354,
            column: 8
          },
          end: {
            line: 356,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 8
          },
          end: {
            line: 356,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 354
      },
      "38": {
        loc: {
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 362,
            column: 12
          },
          end: {
            line: 363,
            column: 38
          }
        }, {
          start: {
            line: 364,
            column: 12
          },
          end: {
            line: 365,
            column: 35
          }
        }, {
          start: {
            line: 366,
            column: 12
          },
          end: {
            line: 367,
            column: 39
          }
        }, {
          start: {
            line: 368,
            column: 12
          },
          end: {
            line: 369,
            column: 54
          }
        }, {
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 371,
            column: 68
          }
        }, {
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 373,
            column: 36
          }
        }],
        line: 361
      },
      "39": {
        loc: {
          start: {
            line: 369,
            column: 33
          },
          end: {
            line: 369,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 33
          },
          end: {
            line: 369,
            column: 45
          }
        }, {
          start: {
            line: 369,
            column: 49
          },
          end: {
            line: 369,
            column: 50
          }
        }],
        line: 369
      },
      "40": {
        loc: {
          start: {
            line: 420,
            column: 20
          },
          end: {
            line: 420,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 420,
            column: 38
          },
          end: {
            line: 420,
            column: 73
          }
        }, {
          start: {
            line: 420,
            column: 76
          },
          end: {
            line: 420,
            column: 86
          }
        }],
        line: 420
      },
      "41": {
        loc: {
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 422,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 422,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "42": {
        loc: {
          start: {
            line: 423,
            column: 8
          },
          end: {
            line: 423,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 423,
            column: 8
          },
          end: {
            line: 423,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 423
      },
      "43": {
        loc: {
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 546,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 546,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "44": {
        loc: {
          start: {
            line: 466,
            column: 74
          },
          end: {
            line: 466,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 466,
            column: 74
          },
          end: {
            line: 466,
            column: 96
          }
        }, {
          start: {
            line: 466,
            column: 100
          },
          end: {
            line: 466,
            column: 122
          }
        }],
        line: 466
      },
      "45": {
        loc: {
          start: {
            line: 475,
            column: 52
          },
          end: {
            line: 481,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 475,
            column: 52
          },
          end: {
            line: 475,
            column: 78
          }
        }, {
          start: {
            line: 475,
            column: 96
          },
          end: {
            line: 481,
            column: 54
          }
        }],
        line: 475
      },
      "46": {
        loc: {
          start: {
            line: 482,
            column: 52
          },
          end: {
            line: 496,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 482,
            column: 92
          },
          end: {
            line: 489,
            column: 54
          }
        }, {
          start: {
            line: 489,
            column: 71
          },
          end: {
            line: 496,
            column: 54
          }
        }],
        line: 482
      },
      "47": {
        loc: {
          start: {
            line: 530,
            column: 44
          },
          end: {
            line: 537,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 530,
            column: 44
          },
          end: {
            line: 530,
            column: 67
          }
        }, {
          start: {
            line: 530,
            column: 71
          },
          end: {
            line: 530,
            column: 99
          }
        }, {
          start: {
            line: 530,
            column: 117
          },
          end: {
            line: 537,
            column: 46
          }
        }],
        line: 530
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0, 0, 0, 0, 0, 0, 0],
      "19": [0, 0, 0, 0, 0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0, 0, 0, 0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/jobs/job-progress-toast.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { toast, Toaster } from 'sonner';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport {\n  Loader2,\n  CheckCircle,\n  XCircle,\n  AlertTriangle,\n  RefreshCw,\n  X,\n  Pause,\n  Play,\n  Clock,\n  Zap,\n  FileText,\n  Database,\n  Package,\n  Shield,\n  Download,\n} from 'lucide-react';\nimport { apiClient } from '@/lib/api/client';\n\n/**\n * \u30B8\u30E7\u30D6\u9032\u6357\u30C8\u30FC\u30B9\u30C8\u30B3\u30F3\u30DD\u30FC\u30CD\u30F3\u30C8\n * APP-438: /jobs\u76E3\u8996\u30FB\u518D\u8A66\u884C/\u30AD\u30E3\u30F3\u30BB\u30EB\n */\n\nexport interface Job {\n  id: string;\n  name: string;\n  type: JobType;\n  status: JobStatus;\n  progress?: number;\n  message?: string;\n  startedAt: string;\n  completedAt?: string;\n  error?: string;\n  retryCount?: number;\n  maxRetries?: number;\n  result?: any;\n  metadata?: JobMetadata;\n}\n\ntype JobType =\n  | 'generate'\n  | 'validate'\n  | 'export'\n  | 'ocr'\n  | 'preflight'\n  | 'upload'\n  | 'process';\n\ntype JobStatus =\n  | 'pending'\n  | 'running'\n  | 'paused'\n  | 'completed'\n  | 'failed'\n  | 'cancelled'\n  | 'retrying';\n\ninterface JobMetadata {\n  totalSteps?: number;\n  currentStep?: number;\n  stepName?: string;\n  estimatedTime?: number;\n  cost?: number;\n  fileSize?: number;\n}\n\ninterface JobProgressToastProps {\n  jobId?: string;\n  autoStart?: boolean;\n  pollInterval?: number;\n  onComplete?: (job: Job) => void;\n  onError?: (job: Job) => void;\n  showHistory?: boolean;\n}\n\nexport function JobProgressToast({\n  jobId,\n  autoStart = true,\n  pollInterval = 1000,\n  onComplete,\n  onError,\n  showHistory = false,\n}: JobProgressToastProps) {\n  const [activeJobs, setActiveJobs] = useState<Map<string, Job>>(new Map());\n  const [completedJobs, setCompletedJobs] = useState<Job[]>([]);\n  const [isPolling, setIsPolling] = useState(autoStart);\n\n  /**\n   * \u30B8\u30E7\u30D6\u30BF\u30A4\u30D7\u30A2\u30A4\u30B3\u30F3\n   */\n  const getJobIcon = (type: JobType) => {\n    switch (type) {\n      case 'generate':\n        return <FileText className=\"h-4 w-4\" />;\n      case 'validate':\n        return <Shield className=\"h-4 w-4\" />;\n      case 'export':\n        return <Download className=\"h-4 w-4\" />;\n      case 'ocr':\n        return <Zap className=\"h-4 w-4\" />;\n      case 'preflight':\n        return <Package className=\"h-4 w-4\" />;\n      case 'upload':\n        return <Database className=\"h-4 w-4\" />;\n      default:\n        return <Loader2 className=\"h-4 w-4\" />;\n    }\n  };\n\n  /**\n   * \u30B9\u30C6\u30FC\u30BF\u30B9\u30A2\u30A4\u30B3\u30F3\n   */\n  const getStatusIcon = (status: JobStatus) => {\n    switch (status) {\n      case 'pending':\n        return <Clock className=\"h-4 w-4 text-muted-foreground\" />;\n      case 'running':\n        return <Loader2 className=\"h-4 w-4 animate-spin text-primary\" />;\n      case 'paused':\n        return <Pause className=\"h-4 w-4 text-yellow-600\" />;\n      case 'completed':\n        return <CheckCircle className=\"h-4 w-4 text-green-600\" />;\n      case 'failed':\n        return <XCircle className=\"h-4 w-4 text-destructive\" />;\n      case 'cancelled':\n        return <X className=\"h-4 w-4 text-muted-foreground\" />;\n      case 'retrying':\n        return <RefreshCw className=\"h-4 w-4 animate-spin text-yellow-600\" />;\n    }\n  };\n\n  /**\n   * \u30B8\u30E7\u30D6\u30B9\u30C6\u30FC\u30BF\u30B9\u53D6\u5F97\n   */\n  const fetchJobStatus = useCallback(async (id: string) => {\n    try {\n      const response = await apiClient.get(`/jobs/${id}`);\n      return response as Job;\n    } catch (error) {\n      console.error(`Failed to fetch job ${id}:`, error);\n      return null;\n    }\n  }, []);\n\n  /**\n   * \u5168\u30A2\u30AF\u30C6\u30A3\u30D6\u30B8\u30E7\u30D6\u53D6\u5F97\n   */\n  const fetchAllActiveJobs = useCallback(async () => {\n    try {\n      const response = await apiClient.get('/jobs/active');\n      return response.jobs as Job[];\n    } catch (error) {\n      console.error('Failed to fetch active jobs:', error);\n      return [];\n    }\n  }, []);\n\n  /**\n   * \u30B8\u30E7\u30D6\u66F4\u65B0\u51E6\u7406\n   */\n  const updateJob = useCallback((job: Job) => {\n    setActiveJobs((prev) => {\n      const newMap = new Map(prev);\n\n      // \u5B8C\u4E86\u30FB\u5931\u6557\u30FB\u30AD\u30E3\u30F3\u30BB\u30EB\u306E\u5834\u5408\u306F\u524A\u9664\n      if (['completed', 'failed', 'cancelled'].includes(job.status)) {\n        newMap.delete(job.id);\n        setCompletedJobs((prevCompleted) => [...prevCompleted, job]);\n\n        // \u30B3\u30FC\u30EB\u30D0\u30C3\u30AF\u5B9F\u884C\n        if (job.status === 'completed') {\n          onComplete?.(job);\n          showJobToast(job, 'success');\n        } else if (job.status === 'failed') {\n          onError?.(job);\n          showJobToast(job, 'error');\n        }\n      } else {\n        // \u30A2\u30AF\u30C6\u30A3\u30D6\u30B8\u30E7\u30D6\u3092\u66F4\u65B0\n        newMap.set(job.id, job);\n\n        // \u9032\u6357\u30C8\u30FC\u30B9\u30C8\u8868\u793A\n        if (job.status === 'running' && job.progress) {\n          showProgressToast(job);\n        }\n      }\n\n      return newMap;\n    });\n  }, [onComplete, onError]);\n\n  /**\n   * \u30DD\u30FC\u30EA\u30F3\u30B0\u51E6\u7406\n   */\n  useEffect(() => {\n    if (!isPolling) return;\n\n    const interval = setInterval(async () => {\n      if (jobId) {\n        // \u7279\u5B9A\u30B8\u30E7\u30D6\u306E\u76E3\u8996\n        const job = await fetchJobStatus(jobId);\n        if (job) {\n          updateJob(job);\n        }\n      } else {\n        // \u5168\u30A2\u30AF\u30C6\u30A3\u30D6\u30B8\u30E7\u30D6\u306E\u76E3\u8996\n        const jobs = await fetchAllActiveJobs();\n        jobs.forEach(updateJob);\n      }\n    }, pollInterval);\n\n    return () => clearInterval(interval);\n  }, [isPolling, jobId, pollInterval, fetchJobStatus, fetchAllActiveJobs, updateJob]);\n\n  /**\n   * \u30B8\u30E7\u30D6\u30C8\u30FC\u30B9\u30C8\u8868\u793A\n   */\n  const showJobToast = (job: Job, type: 'success' | 'error' | 'info') => {\n    const icon = getJobIcon(job.type);\n    const message = job.message || getDefaultMessage(job);\n\n    if (type === 'success') {\n      toast.success(\n        <div className=\"flex items-center gap-2\">\n          {icon}\n          <div>\n            <div className=\"font-medium\">{job.name}</div>\n            <div className=\"text-sm text-muted-foreground\">{message}</div>\n          </div>\n        </div>,\n        {\n          duration: 5000,\n        }\n      );\n    } else if (type === 'error') {\n      toast.error(\n        <div className=\"flex items-center gap-2\">\n          {icon}\n          <div>\n            <div className=\"font-medium\">{job.name} \u5931\u6557</div>\n            <div className=\"text-sm\">{job.error || '\u51E6\u7406\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F'}</div>\n          </div>\n        </div>,\n        {\n          duration: 10000,\n          action: job.retryCount !== undefined && job.retryCount < (job.maxRetries || 3) ? {\n            label: '\u518D\u8A66\u884C',\n            onClick: () => retryJob(job.id),\n          } : undefined,\n        }\n      );\n    }\n  };\n\n  /**\n   * \u9032\u6357\u30C8\u30FC\u30B9\u30C8\u8868\u793A\n   */\n  const showProgressToast = (job: Job) => {\n    const toastId = `job-progress-${job.id}`;\n    const icon = getJobIcon(job.type);\n    const progress = job.progress || 0;\n\n    toast.custom(\n      (t) => (\n        <div className=\"flex items-center gap-3 bg-background border rounded-lg p-3 shadow-lg\">\n          {icon}\n          <div className=\"flex-1 space-y-1\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm font-medium\">{job.name}</span>\n              <Badge variant=\"outline\" className=\"text-xs\">\n                {progress}%\n              </Badge>\n            </div>\n            <Progress value={progress} className=\"h-2\" />\n            {job.metadata?.stepName && (\n              <p className=\"text-xs text-muted-foreground\">\n                {job.metadata.stepName}\n              </p>\n            )}\n          </div>\n          <div className=\"flex items-center gap-1\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"h-8 w-8\"\n              onClick={() => pauseJob(job.id)}\n            >\n              <Pause className=\"h-3 w-3\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"h-8 w-8\"\n              onClick={() => cancelJob(job.id)}\n            >\n              <X className=\"h-3 w-3\" />\n            </Button>\n          </div>\n        </div>\n      ),\n      {\n        id: toastId,\n        duration: Infinity,\n      }\n    );\n\n    // \u5B8C\u4E86\u6642\u306B\u30C8\u30FC\u30B9\u30C8\u3092\u524A\u9664\n    if (progress >= 100) {\n      setTimeout(() => toast.dismiss(toastId), 1000);\n    }\n  };\n\n  /**\n   * \u30C7\u30D5\u30A9\u30EB\u30C8\u30E1\u30C3\u30BB\u30FC\u30B8\u53D6\u5F97\n   */\n  const getDefaultMessage = (job: Job): string => {\n    switch (job.status) {\n      case 'completed':\n        return '\u51E6\u7406\u304C\u6B63\u5E38\u306B\u5B8C\u4E86\u3057\u307E\u3057\u305F';\n      case 'failed':\n        return '\u51E6\u7406\u306B\u5931\u6557\u3057\u307E\u3057\u305F';\n      case 'cancelled':\n        return '\u51E6\u7406\u304C\u30AD\u30E3\u30F3\u30BB\u30EB\u3055\u308C\u307E\u3057\u305F';\n      case 'running':\n        return `\u51E6\u7406\u4E2D... ${job.progress || 0}%`;\n      case 'retrying':\n        return `\u518D\u8A66\u884C\u4E2D (${job.retryCount}/${job.maxRetries})`;\n      default:\n        return '\u51E6\u7406\u3092\u958B\u59CB\u3057\u3066\u3044\u307E\u3059';\n    }\n  };\n\n  /**\n   * \u30B8\u30E7\u30D6\u518D\u8A66\u884C\n   */\n  const retryJob = async (id: string) => {\n    try {\n      await apiClient.post(`/jobs/${id}/retry`);\n      toast.info('\u30B8\u30E7\u30D6\u3092\u518D\u8A66\u884C\u3057\u3066\u3044\u307E\u3059');\n    } catch (error) {\n      toast.error('\u518D\u8A66\u884C\u306B\u5931\u6557\u3057\u307E\u3057\u305F');\n    }\n  };\n\n  /**\n   * \u30B8\u30E7\u30D6\u30AD\u30E3\u30F3\u30BB\u30EB\n   */\n  const cancelJob = async (id: string) => {\n    try {\n      await apiClient.post(`/jobs/${id}/cancel`);\n      toast.info('\u30B8\u30E7\u30D6\u3092\u30AD\u30E3\u30F3\u30BB\u30EB\u3057\u307E\u3057\u305F');\n    } catch (error) {\n      toast.error('\u30AD\u30E3\u30F3\u30BB\u30EB\u306B\u5931\u6557\u3057\u307E\u3057\u305F');\n    }\n  };\n\n  /**\n   * \u30B8\u30E7\u30D6\u4E00\u6642\u505C\u6B62\n   */\n  const pauseJob = async (id: string) => {\n    try {\n      await apiClient.post(`/jobs/${id}/pause`);\n      toast.info('\u30B8\u30E7\u30D6\u3092\u4E00\u6642\u505C\u6B62\u3057\u307E\u3057\u305F');\n    } catch (error) {\n      toast.error('\u4E00\u6642\u505C\u6B62\u306B\u5931\u6557\u3057\u307E\u3057\u305F');\n    }\n  };\n\n  /**\n   * \u30B8\u30E7\u30D6\u518D\u958B\n   */\n  const resumeJob = async (id: string) => {\n    try {\n      await apiClient.post(`/jobs/${id}/resume`);\n      toast.info('\u30B8\u30E7\u30D6\u3092\u518D\u958B\u3057\u307E\u3057\u305F');\n    } catch (error) {\n      toast.error('\u518D\u958B\u306B\u5931\u6557\u3057\u307E\u3057\u305F');\n    }\n  };\n\n  /**\n   * \u5B9F\u884C\u6642\u9593\u8A08\u7B97\n   */\n  const getElapsedTime = (job: Job): string => {\n    const start = new Date(job.startedAt).getTime();\n    const end = job.completedAt ? new Date(job.completedAt).getTime() : Date.now();\n    const elapsed = Math.floor((end - start) / 1000);\n\n    if (elapsed < 60) return `${elapsed}\u79D2`;\n    if (elapsed < 3600) return `${Math.floor(elapsed / 60)}\u5206`;\n    return `${Math.floor(elapsed / 3600)}\u6642\u9593`;\n  };\n\n  // \u5C65\u6B74\u8868\u793AUI\n  if (showHistory) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>\u30B8\u30E7\u30D6\u5C65\u6B74</CardTitle>\n          <CardDescription>\n            \u30A2\u30AF\u30C6\u30A3\u30D6: {activeJobs.size} / \u5B8C\u4E86: {completedJobs.length}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <ScrollArea className=\"h-96\">\n            <div className=\"space-y-2\">\n              {/* \u30A2\u30AF\u30C6\u30A3\u30D6\u30B8\u30E7\u30D6 */}\n              {Array.from(activeJobs.values()).map((job) => (\n                <div\n                  key={job.id}\n                  className=\"flex items-center justify-between p-3 border rounded-lg bg-muted/50\"\n                >\n                  <div className=\"flex items-center gap-3\">\n                    {getStatusIcon(job.status)}\n                    <div>\n                      <div className=\"font-medium text-sm\">{job.name}</div>\n                      <div className=\"text-xs text-muted-foreground\">\n                        {job.metadata?.stepName || getDefaultMessage(job)}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    {job.progress !== undefined && (\n                      <div className=\"w-24\">\n                        <Progress value={job.progress} className=\"h-2\" />\n                      </div>\n                    )}\n                    {job.status === 'paused' ? (\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => resumeJob(job.id)}\n                      >\n                        <Play className=\"h-3 w-3\" />\n                      </Button>\n                    ) : (\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => pauseJob(job.id)}\n                      >\n                        <Pause className=\"h-3 w-3\" />\n                      </Button>\n                    )}\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      onClick={() => cancelJob(job.id)}\n                    >\n                      <X className=\"h-3 w-3\" />\n                    </Button>\n                  </div>\n                </div>\n              ))}\n\n              {/* \u5B8C\u4E86\u30B8\u30E7\u30D6 */}\n              {completedJobs.map((job) => (\n                <div\n                  key={job.id}\n                  className=\"flex items-center justify-between p-3 border rounded-lg opacity-60\"\n                >\n                  <div className=\"flex items-center gap-3\">\n                    {getStatusIcon(job.status)}\n                    <div>\n                      <div className=\"font-medium text-sm\">{job.name}</div>\n                      <div className=\"text-xs text-muted-foreground\">\n                        {getElapsedTime(job)}\n                      </div>\n                    </div>\n                  </div>\n                  {job.status === 'failed' && job.retryCount !== undefined && (\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => retryJob(job.id)}\n                    >\n                      <RefreshCw className=\"h-3 w-3\" />\n                    </Button>\n                  )}\n                </div>\n              ))}\n            </div>\n          </ScrollArea>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // \u30C8\u30FC\u30B9\u30C8\u901A\u77E5\u306E\u307F\uFF08UI\u306A\u3057\uFF09\n  return null;\n}\n\n/**\n * \u30B8\u30E7\u30D6\u9032\u6357\u30C8\u30FC\u30B9\u30C8\u30D7\u30ED\u30D0\u30A4\u30C0\u30FC\n */\nexport function JobProgressToastProvider({ children }: { children: React.ReactNode }) {\n  return (\n    <>\n      {children}\n      <Toaster position=\"bottom-right\" />\n      <JobProgressToast />\n    </>\n  );\n}"],
      names: ["JobProgressToast", "JobProgressToastProvider", "jobId", "autoStart", "pollInterval", "onComplete", "onError", "showHistory", "activeJobs", "setActiveJobs", "useState", "Map", "completedJobs", "setCompletedJobs", "isPolling", "setIsPolling", "getJobIcon", "type", "FileText", "className", "Shield", "Download", "Zap", "Package", "Database", "Loader2", "getStatusIcon", "status", "Clock", "Pause", "CheckCircle", "XCircle", "X", "RefreshCw", "fetchJobStatus", "useCallback", "id", "response", "apiClient", "get", "error", "console", "fetchAllActiveJobs", "jobs", "updateJob", "job", "prev", "newMap", "includes", "delete", "prevCompleted", "showJobToast", "set", "progress", "showProgressToast", "useEffect", "interval", "setInterval", "forEach", "clearInterval", "icon", "message", "getDefaultMessage", "toast", "success", "div", "name", "duration", "action", "retryCount", "undefined", "maxRetries", "label", "onClick", "retryJob", "toastId", "custom", "t", "span", "Badge", "variant", "Progress", "value", "metadata", "stepName", "p", "Button", "size", "pauseJob", "cancelJob", "Infinity", "setTimeout", "dismiss", "post", "info", "resumeJob", "getElapsedTime", "start", "Date", "startedAt", "getTime", "end", "completedAt", "now", "elapsed", "Math", "floor", "Card", "CardHeader", "CardTitle", "CardDescription", "length", "CardContent", "ScrollArea", "Array", "from", "values", "map", "Play", "children", "Toaster", "position"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "98be67410be3beb429e846918a3ef8cf5d42c000"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wusvwecbs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wusvwecbs();
cov_1wusvwecbs().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1wusvwecbs().f[0]++;
  cov_1wusvwecbs().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1wusvwecbs().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1wusvwecbs().s[3]++;
_export(exports, {
  get JobProgressToast() {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[1]++;
    cov_1wusvwecbs().s[4]++;
    return JobProgressToast;
  },
  get JobProgressToastProvider() {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[2]++;
    cov_1wusvwecbs().s[5]++;
    return JobProgressToastProvider;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1wusvwecbs().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1wusvwecbs().s[7]++, _interop_require_wildcard(require("react")));
const _sonner =
/* istanbul ignore next */
(cov_1wusvwecbs().s[8]++, require("sonner"));
const _button =
/* istanbul ignore next */
(cov_1wusvwecbs().s[9]++, require("../ui/button"));
const _badge =
/* istanbul ignore next */
(cov_1wusvwecbs().s[10]++, require("../ui/badge"));
const _progress =
/* istanbul ignore next */
(cov_1wusvwecbs().s[11]++, require("../ui/progress"));
const _card =
/* istanbul ignore next */
(cov_1wusvwecbs().s[12]++, require("../ui/card"));
const _scrollarea =
/* istanbul ignore next */
(cov_1wusvwecbs().s[13]++, require("../ui/scroll-area"));
const _lucidereact =
/* istanbul ignore next */
(cov_1wusvwecbs().s[14]++, require("lucide-react"));
const _client =
/* istanbul ignore next */
(cov_1wusvwecbs().s[15]++, require("../../lib/api/client"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1wusvwecbs().f[3]++;
  cov_1wusvwecbs().s[16]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1wusvwecbs().b[0][0]++;
    cov_1wusvwecbs().s[17]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1wusvwecbs().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1wusvwecbs().s[18]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1wusvwecbs().s[19]++, new WeakMap());
  /* istanbul ignore next */
  cov_1wusvwecbs().s[20]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[4]++;
    cov_1wusvwecbs().s[21]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1wusvwecbs().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1wusvwecbs().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1wusvwecbs().f[5]++;
  cov_1wusvwecbs().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_1wusvwecbs().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1wusvwecbs().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1wusvwecbs().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1wusvwecbs().b[2][0]++;
    cov_1wusvwecbs().s[23]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1wusvwecbs().b[2][1]++;
  }
  cov_1wusvwecbs().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_1wusvwecbs().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1wusvwecbs().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1wusvwecbs().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1wusvwecbs().b[4][0]++;
    cov_1wusvwecbs().s[25]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1wusvwecbs().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1wusvwecbs().s[26]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1wusvwecbs().s[27]++;
  if (
  /* istanbul ignore next */
  (cov_1wusvwecbs().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1wusvwecbs().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1wusvwecbs().b[6][0]++;
    cov_1wusvwecbs().s[28]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1wusvwecbs().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1wusvwecbs().s[29]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1wusvwecbs().s[30]++,
  /* istanbul ignore next */
  (cov_1wusvwecbs().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1wusvwecbs().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1wusvwecbs().s[31]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1wusvwecbs().s[32]++;
    if (
    /* istanbul ignore next */
    (cov_1wusvwecbs().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1wusvwecbs().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1wusvwecbs().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1wusvwecbs().s[33]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1wusvwecbs().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1wusvwecbs().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1wusvwecbs().s[34]++;
      if (
      /* istanbul ignore next */
      (cov_1wusvwecbs().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1wusvwecbs().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1wusvwecbs().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1wusvwecbs().b[12][0]++;
        cov_1wusvwecbs().s[35]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1wusvwecbs().b[12][1]++;
        cov_1wusvwecbs().s[36]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1wusvwecbs().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1wusvwecbs().s[37]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1wusvwecbs().s[38]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1wusvwecbs().b[14][0]++;
    cov_1wusvwecbs().s[39]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1wusvwecbs().b[14][1]++;
  }
  cov_1wusvwecbs().s[40]++;
  return newObj;
}
function JobProgressToast({
  jobId,
  autoStart =
  /* istanbul ignore next */
  (cov_1wusvwecbs().b[15][0]++, true),
  pollInterval =
  /* istanbul ignore next */
  (cov_1wusvwecbs().b[16][0]++, 1000),
  onComplete,
  onError,
  showHistory =
  /* istanbul ignore next */
  (cov_1wusvwecbs().b[17][0]++, false)
}) {
  /* istanbul ignore next */
  cov_1wusvwecbs().f[6]++;
  const [activeJobs, setActiveJobs] =
  /* istanbul ignore next */
  (cov_1wusvwecbs().s[41]++, (0, _react.useState)(new Map()));
  const [completedJobs, setCompletedJobs] =
  /* istanbul ignore next */
  (cov_1wusvwecbs().s[42]++, (0, _react.useState)([]));
  const [isPolling, setIsPolling] =
  /* istanbul ignore next */
  (cov_1wusvwecbs().s[43]++, (0, _react.useState)(autoStart));
  /**
  * ジョブタイプアイコン
  */
  /* istanbul ignore next */
  cov_1wusvwecbs().s[44]++;
  const getJobIcon = type => {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[7]++;
    cov_1wusvwecbs().s[45]++;
    switch (type) {
      case 'generate':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[18][0]++;
        cov_1wusvwecbs().s[46]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.FileText, {
          className: "h-4 w-4"
        });
      case 'validate':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[18][1]++;
        cov_1wusvwecbs().s[47]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Shield, {
          className: "h-4 w-4"
        });
      case 'export':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[18][2]++;
        cov_1wusvwecbs().s[48]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Download, {
          className: "h-4 w-4"
        });
      case 'ocr':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[18][3]++;
        cov_1wusvwecbs().s[49]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Zap, {
          className: "h-4 w-4"
        });
      case 'preflight':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[18][4]++;
        cov_1wusvwecbs().s[50]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Package, {
          className: "h-4 w-4"
        });
      case 'upload':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[18][5]++;
        cov_1wusvwecbs().s[51]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Database, {
          className: "h-4 w-4"
        });
      default:
        /* istanbul ignore next */
        cov_1wusvwecbs().b[18][6]++;
        cov_1wusvwecbs().s[52]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
          className: "h-4 w-4"
        });
    }
  };
  /**
  * ステータスアイコン
  */
  /* istanbul ignore next */
  cov_1wusvwecbs().s[53]++;
  const getStatusIcon = status => {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[8]++;
    cov_1wusvwecbs().s[54]++;
    switch (status) {
      case 'pending':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[19][0]++;
        cov_1wusvwecbs().s[55]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
          className: "h-4 w-4 text-muted-foreground"
        });
      case 'running':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[19][1]++;
        cov_1wusvwecbs().s[56]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
          className: "h-4 w-4 animate-spin text-primary"
        });
      case 'paused':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[19][2]++;
        cov_1wusvwecbs().s[57]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Pause, {
          className: "h-4 w-4 text-yellow-600"
        });
      case 'completed':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[19][3]++;
        cov_1wusvwecbs().s[58]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
          className: "h-4 w-4 text-green-600"
        });
      case 'failed':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[19][4]++;
        cov_1wusvwecbs().s[59]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.XCircle, {
          className: "h-4 w-4 text-destructive"
        });
      case 'cancelled':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[19][5]++;
        cov_1wusvwecbs().s[60]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.X, {
          className: "h-4 w-4 text-muted-foreground"
        });
      case 'retrying':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[19][6]++;
        cov_1wusvwecbs().s[61]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
          className: "h-4 w-4 animate-spin text-yellow-600"
        });
    }
  };
  /**
  * ジョブステータス取得
  */
  const fetchJobStatus =
  /* istanbul ignore next */
  (cov_1wusvwecbs().s[62]++, (0, _react.useCallback)(async id => {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[9]++;
    cov_1wusvwecbs().s[63]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1wusvwecbs().s[64]++, await _client.apiClient.get(`/jobs/${id}`));
      /* istanbul ignore next */
      cov_1wusvwecbs().s[65]++;
      return response;
    } catch (error) {
      /* istanbul ignore next */
      cov_1wusvwecbs().s[66]++;
      console.error(`Failed to fetch job ${id}:`, error);
      /* istanbul ignore next */
      cov_1wusvwecbs().s[67]++;
      return null;
    }
  }, []));
  /**
  * 全アクティブジョブ取得
  */
  const fetchAllActiveJobs =
  /* istanbul ignore next */
  (cov_1wusvwecbs().s[68]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[10]++;
    cov_1wusvwecbs().s[69]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1wusvwecbs().s[70]++, await _client.apiClient.get('/jobs/active'));
      /* istanbul ignore next */
      cov_1wusvwecbs().s[71]++;
      return response.jobs;
    } catch (error) {
      /* istanbul ignore next */
      cov_1wusvwecbs().s[72]++;
      console.error('Failed to fetch active jobs:', error);
      /* istanbul ignore next */
      cov_1wusvwecbs().s[73]++;
      return [];
    }
  }, []));
  /**
  * ジョブ更新処理
  */
  const updateJob =
  /* istanbul ignore next */
  (cov_1wusvwecbs().s[74]++, (0, _react.useCallback)(job => {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[11]++;
    cov_1wusvwecbs().s[75]++;
    setActiveJobs(prev => {
      /* istanbul ignore next */
      cov_1wusvwecbs().f[12]++;
      const newMap =
      /* istanbul ignore next */
      (cov_1wusvwecbs().s[76]++, new Map(prev));
      // 完了・失敗・キャンセルの場合は削除
      /* istanbul ignore next */
      cov_1wusvwecbs().s[77]++;
      if (['completed', 'failed', 'cancelled'].includes(job.status)) {
        /* istanbul ignore next */
        cov_1wusvwecbs().b[20][0]++;
        cov_1wusvwecbs().s[78]++;
        newMap.delete(job.id);
        /* istanbul ignore next */
        cov_1wusvwecbs().s[79]++;
        setCompletedJobs(prevCompleted => {
          /* istanbul ignore next */
          cov_1wusvwecbs().f[13]++;
          cov_1wusvwecbs().s[80]++;
          return [...prevCompleted, job];
        });
        // コールバック実行
        /* istanbul ignore next */
        cov_1wusvwecbs().s[81]++;
        if (job.status === 'completed') {
          /* istanbul ignore next */
          cov_1wusvwecbs().b[21][0]++;
          cov_1wusvwecbs().s[82]++;
          onComplete?.(job);
          /* istanbul ignore next */
          cov_1wusvwecbs().s[83]++;
          showJobToast(job, 'success');
        } else {
          /* istanbul ignore next */
          cov_1wusvwecbs().b[21][1]++;
          cov_1wusvwecbs().s[84]++;
          if (job.status === 'failed') {
            /* istanbul ignore next */
            cov_1wusvwecbs().b[22][0]++;
            cov_1wusvwecbs().s[85]++;
            onError?.(job);
            /* istanbul ignore next */
            cov_1wusvwecbs().s[86]++;
            showJobToast(job, 'error');
          } else
          /* istanbul ignore next */
          {
            cov_1wusvwecbs().b[22][1]++;
          }
        }
      } else {
        /* istanbul ignore next */
        cov_1wusvwecbs().b[20][1]++;
        cov_1wusvwecbs().s[87]++;
        // アクティブジョブを更新
        newMap.set(job.id, job);
        // 進捗トースト表示
        /* istanbul ignore next */
        cov_1wusvwecbs().s[88]++;
        if (
        /* istanbul ignore next */
        (cov_1wusvwecbs().b[24][0]++, job.status === 'running') &&
        /* istanbul ignore next */
        (cov_1wusvwecbs().b[24][1]++, job.progress)) {
          /* istanbul ignore next */
          cov_1wusvwecbs().b[23][0]++;
          cov_1wusvwecbs().s[89]++;
          showProgressToast(job);
        } else
        /* istanbul ignore next */
        {
          cov_1wusvwecbs().b[23][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1wusvwecbs().s[90]++;
      return newMap;
    });
  }, [onComplete, onError]));
  /**
  * ポーリング処理
  */
  /* istanbul ignore next */
  cov_1wusvwecbs().s[91]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[14]++;
    cov_1wusvwecbs().s[92]++;
    if (!isPolling) {
      /* istanbul ignore next */
      cov_1wusvwecbs().b[25][0]++;
      cov_1wusvwecbs().s[93]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1wusvwecbs().b[25][1]++;
    }
    const interval =
    /* istanbul ignore next */
    (cov_1wusvwecbs().s[94]++, setInterval(async () => {
      /* istanbul ignore next */
      cov_1wusvwecbs().f[15]++;
      cov_1wusvwecbs().s[95]++;
      if (jobId) {
        /* istanbul ignore next */
        cov_1wusvwecbs().b[26][0]++;
        // 特定ジョブの監視
        const job =
        /* istanbul ignore next */
        (cov_1wusvwecbs().s[96]++, await fetchJobStatus(jobId));
        /* istanbul ignore next */
        cov_1wusvwecbs().s[97]++;
        if (job) {
          /* istanbul ignore next */
          cov_1wusvwecbs().b[27][0]++;
          cov_1wusvwecbs().s[98]++;
          updateJob(job);
        } else
        /* istanbul ignore next */
        {
          cov_1wusvwecbs().b[27][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_1wusvwecbs().b[26][1]++;
        // 全アクティブジョブの監視
        const jobs =
        /* istanbul ignore next */
        (cov_1wusvwecbs().s[99]++, await fetchAllActiveJobs());
        /* istanbul ignore next */
        cov_1wusvwecbs().s[100]++;
        jobs.forEach(updateJob);
      }
    }, pollInterval));
    /* istanbul ignore next */
    cov_1wusvwecbs().s[101]++;
    return () => {
      /* istanbul ignore next */
      cov_1wusvwecbs().f[16]++;
      cov_1wusvwecbs().s[102]++;
      return clearInterval(interval);
    };
  }, [isPolling, jobId, pollInterval, fetchJobStatus, fetchAllActiveJobs, updateJob]);
  /**
  * ジョブトースト表示
  */
  /* istanbul ignore next */
  cov_1wusvwecbs().s[103]++;
  const showJobToast = (job, type) => {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[17]++;
    const icon =
    /* istanbul ignore next */
    (cov_1wusvwecbs().s[104]++, getJobIcon(job.type));
    const message =
    /* istanbul ignore next */
    (cov_1wusvwecbs().s[105]++,
    /* istanbul ignore next */
    (cov_1wusvwecbs().b[28][0]++, job.message) ||
    /* istanbul ignore next */
    (cov_1wusvwecbs().b[28][1]++, getDefaultMessage(job)));
    /* istanbul ignore next */
    cov_1wusvwecbs().s[106]++;
    if (type === 'success') {
      /* istanbul ignore next */
      cov_1wusvwecbs().b[29][0]++;
      cov_1wusvwecbs().s[107]++;
      _sonner.toast.success(/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-2",
        children: [icon, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "font-medium",
            children: job.name
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-sm text-muted-foreground",
            children: message
          })]
        })]
      }), {
        duration: 5000
      });
    } else {
      /* istanbul ignore next */
      cov_1wusvwecbs().b[29][1]++;
      cov_1wusvwecbs().s[108]++;
      if (type === 'error') {
        /* istanbul ignore next */
        cov_1wusvwecbs().b[30][0]++;
        cov_1wusvwecbs().s[109]++;
        _sonner.toast.error(/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center gap-2",
          children: [icon, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "font-medium",
              children: [job.name, " 失敗"]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-sm",
              children:
              /* istanbul ignore next */
              (cov_1wusvwecbs().b[31][0]++, job.error) ||
              /* istanbul ignore next */
              (cov_1wusvwecbs().b[31][1]++, '処理中にエラーが発生しました')
            })]
          })]
        }), {
          duration: 10000,
          action:
          /* istanbul ignore next */
          (cov_1wusvwecbs().b[33][0]++, job.retryCount !== undefined) &&
          /* istanbul ignore next */
          (cov_1wusvwecbs().b[33][1]++, job.retryCount < (
          /* istanbul ignore next */
          (cov_1wusvwecbs().b[34][0]++, job.maxRetries) ||
          /* istanbul ignore next */
          (cov_1wusvwecbs().b[34][1]++, 3))) ?
          /* istanbul ignore next */
          (cov_1wusvwecbs().b[32][0]++, {
            label: '再試行',
            onClick: () => {
              /* istanbul ignore next */
              cov_1wusvwecbs().f[18]++;
              cov_1wusvwecbs().s[110]++;
              return retryJob(job.id);
            }
          }) :
          /* istanbul ignore next */
          (cov_1wusvwecbs().b[32][1]++, undefined)
        });
      } else
      /* istanbul ignore next */
      {
        cov_1wusvwecbs().b[30][1]++;
      }
    }
  };
  /**
  * 進捗トースト表示
  */
  /* istanbul ignore next */
  cov_1wusvwecbs().s[111]++;
  const showProgressToast = job => {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[19]++;
    const toastId =
    /* istanbul ignore next */
    (cov_1wusvwecbs().s[112]++, `job-progress-${job.id}`);
    const icon =
    /* istanbul ignore next */
    (cov_1wusvwecbs().s[113]++, getJobIcon(job.type));
    const progress =
    /* istanbul ignore next */
    (cov_1wusvwecbs().s[114]++,
    /* istanbul ignore next */
    (cov_1wusvwecbs().b[35][0]++, job.progress) ||
    /* istanbul ignore next */
    (cov_1wusvwecbs().b[35][1]++, 0));
    /* istanbul ignore next */
    cov_1wusvwecbs().s[115]++;
    _sonner.toast.custom(t => {
      /* istanbul ignore next */
      cov_1wusvwecbs().f[20]++;
      cov_1wusvwecbs().s[116]++;
      return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-3 bg-background border rounded-lg p-3 shadow-lg",
        children: [icon, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex-1 space-y-1",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-sm font-medium",
              children: job.name
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
              variant: "outline",
              className: "text-xs",
              children: [progress, "%"]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_progress.Progress, {
            value: progress,
            className: "h-2"
          }),
          /* istanbul ignore next */
          (cov_1wusvwecbs().b[36][0]++, job.metadata?.stepName) &&
          /* istanbul ignore next */
          (cov_1wusvwecbs().b[36][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-xs text-muted-foreground",
            children: job.metadata.stepName
          }))]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center gap-1",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            variant: "ghost",
            size: "icon",
            className: "h-8 w-8",
            onClick: () => {
              /* istanbul ignore next */
              cov_1wusvwecbs().f[21]++;
              cov_1wusvwecbs().s[117]++;
              return pauseJob(job.id);
            },
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Pause, {
              className: "h-3 w-3"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            variant: "ghost",
            size: "icon",
            className: "h-8 w-8",
            onClick: () => {
              /* istanbul ignore next */
              cov_1wusvwecbs().f[22]++;
              cov_1wusvwecbs().s[118]++;
              return cancelJob(job.id);
            },
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.X, {
              className: "h-3 w-3"
            })
          })]
        })]
      });
    }, {
      id: toastId,
      duration: Infinity
    });
    // 完了時にトーストを削除
    /* istanbul ignore next */
    cov_1wusvwecbs().s[119]++;
    if (progress >= 100) {
      /* istanbul ignore next */
      cov_1wusvwecbs().b[37][0]++;
      cov_1wusvwecbs().s[120]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1wusvwecbs().f[23]++;
        cov_1wusvwecbs().s[121]++;
        return _sonner.toast.dismiss(toastId);
      }, 1000);
    } else
    /* istanbul ignore next */
    {
      cov_1wusvwecbs().b[37][1]++;
    }
  };
  /**
  * デフォルトメッセージ取得
  */
  /* istanbul ignore next */
  cov_1wusvwecbs().s[122]++;
  const getDefaultMessage = job => {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[24]++;
    cov_1wusvwecbs().s[123]++;
    switch (job.status) {
      case 'completed':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[38][0]++;
        cov_1wusvwecbs().s[124]++;
        return '処理が正常に完了しました';
      case 'failed':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[38][1]++;
        cov_1wusvwecbs().s[125]++;
        return '処理に失敗しました';
      case 'cancelled':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[38][2]++;
        cov_1wusvwecbs().s[126]++;
        return '処理がキャンセルされました';
      case 'running':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[38][3]++;
        cov_1wusvwecbs().s[127]++;
        return `処理中... ${
        /* istanbul ignore next */
        (cov_1wusvwecbs().b[39][0]++, job.progress) ||
        /* istanbul ignore next */
        (cov_1wusvwecbs().b[39][1]++, 0)}%`;
      case 'retrying':
        /* istanbul ignore next */
        cov_1wusvwecbs().b[38][4]++;
        cov_1wusvwecbs().s[128]++;
        return `再試行中 (${job.retryCount}/${job.maxRetries})`;
      default:
        /* istanbul ignore next */
        cov_1wusvwecbs().b[38][5]++;
        cov_1wusvwecbs().s[129]++;
        return '処理を開始しています';
    }
  };
  /**
  * ジョブ再試行
  */
  /* istanbul ignore next */
  cov_1wusvwecbs().s[130]++;
  const retryJob = async id => {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[25]++;
    cov_1wusvwecbs().s[131]++;
    try {
      /* istanbul ignore next */
      cov_1wusvwecbs().s[132]++;
      await _client.apiClient.post(`/jobs/${id}/retry`);
      /* istanbul ignore next */
      cov_1wusvwecbs().s[133]++;
      _sonner.toast.info('ジョブを再試行しています');
    } catch (error) {
      /* istanbul ignore next */
      cov_1wusvwecbs().s[134]++;
      _sonner.toast.error('再試行に失敗しました');
    }
  };
  /**
  * ジョブキャンセル
  */
  /* istanbul ignore next */
  cov_1wusvwecbs().s[135]++;
  const cancelJob = async id => {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[26]++;
    cov_1wusvwecbs().s[136]++;
    try {
      /* istanbul ignore next */
      cov_1wusvwecbs().s[137]++;
      await _client.apiClient.post(`/jobs/${id}/cancel`);
      /* istanbul ignore next */
      cov_1wusvwecbs().s[138]++;
      _sonner.toast.info('ジョブをキャンセルしました');
    } catch (error) {
      /* istanbul ignore next */
      cov_1wusvwecbs().s[139]++;
      _sonner.toast.error('キャンセルに失敗しました');
    }
  };
  /**
  * ジョブ一時停止
  */
  /* istanbul ignore next */
  cov_1wusvwecbs().s[140]++;
  const pauseJob = async id => {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[27]++;
    cov_1wusvwecbs().s[141]++;
    try {
      /* istanbul ignore next */
      cov_1wusvwecbs().s[142]++;
      await _client.apiClient.post(`/jobs/${id}/pause`);
      /* istanbul ignore next */
      cov_1wusvwecbs().s[143]++;
      _sonner.toast.info('ジョブを一時停止しました');
    } catch (error) {
      /* istanbul ignore next */
      cov_1wusvwecbs().s[144]++;
      _sonner.toast.error('一時停止に失敗しました');
    }
  };
  /**
  * ジョブ再開
  */
  /* istanbul ignore next */
  cov_1wusvwecbs().s[145]++;
  const resumeJob = async id => {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[28]++;
    cov_1wusvwecbs().s[146]++;
    try {
      /* istanbul ignore next */
      cov_1wusvwecbs().s[147]++;
      await _client.apiClient.post(`/jobs/${id}/resume`);
      /* istanbul ignore next */
      cov_1wusvwecbs().s[148]++;
      _sonner.toast.info('ジョブを再開しました');
    } catch (error) {
      /* istanbul ignore next */
      cov_1wusvwecbs().s[149]++;
      _sonner.toast.error('再開に失敗しました');
    }
  };
  /**
  * 実行時間計算
  */
  /* istanbul ignore next */
  cov_1wusvwecbs().s[150]++;
  const getElapsedTime = job => {
    /* istanbul ignore next */
    cov_1wusvwecbs().f[29]++;
    const start =
    /* istanbul ignore next */
    (cov_1wusvwecbs().s[151]++, new Date(job.startedAt).getTime());
    const end =
    /* istanbul ignore next */
    (cov_1wusvwecbs().s[152]++, job.completedAt ?
    /* istanbul ignore next */
    (cov_1wusvwecbs().b[40][0]++, new Date(job.completedAt).getTime()) :
    /* istanbul ignore next */
    (cov_1wusvwecbs().b[40][1]++, Date.now()));
    const elapsed =
    /* istanbul ignore next */
    (cov_1wusvwecbs().s[153]++, Math.floor((end - start) / 1000));
    /* istanbul ignore next */
    cov_1wusvwecbs().s[154]++;
    if (elapsed < 60) {
      /* istanbul ignore next */
      cov_1wusvwecbs().b[41][0]++;
      cov_1wusvwecbs().s[155]++;
      return `${elapsed}秒`;
    } else
    /* istanbul ignore next */
    {
      cov_1wusvwecbs().b[41][1]++;
    }
    cov_1wusvwecbs().s[156]++;
    if (elapsed < 3600) {
      /* istanbul ignore next */
      cov_1wusvwecbs().b[42][0]++;
      cov_1wusvwecbs().s[157]++;
      return `${Math.floor(elapsed / 60)}分`;
    } else
    /* istanbul ignore next */
    {
      cov_1wusvwecbs().b[42][1]++;
    }
    cov_1wusvwecbs().s[158]++;
    return `${Math.floor(elapsed / 3600)}時間`;
  };
  // 履歴表示UI
  /* istanbul ignore next */
  cov_1wusvwecbs().s[159]++;
  if (showHistory) {
    /* istanbul ignore next */
    cov_1wusvwecbs().b[43][0]++;
    cov_1wusvwecbs().s[160]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
          children: "ジョブ履歴"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardDescription, {
          children: ["アクティブ: ", activeJobs.size, " / 完了: ", completedJobs.length]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
          className: "h-96",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "space-y-2",
            children: [Array.from(activeJobs.values()).map(job => {
              /* istanbul ignore next */
              cov_1wusvwecbs().f[30]++;
              cov_1wusvwecbs().s[161]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between p-3 border rounded-lg bg-muted/50",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center gap-3",
                  children: [getStatusIcon(job.status), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "font-medium text-sm",
                      children: job.name
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-xs text-muted-foreground",
                      children:
                      /* istanbul ignore next */
                      (cov_1wusvwecbs().b[44][0]++, job.metadata?.stepName) ||
                      /* istanbul ignore next */
                      (cov_1wusvwecbs().b[44][1]++, getDefaultMessage(job))
                    })]
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center gap-2",
                  children: [
                  /* istanbul ignore next */
                  (cov_1wusvwecbs().b[45][0]++, job.progress !== undefined) &&
                  /* istanbul ignore next */
                  (cov_1wusvwecbs().b[45][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "w-24",
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_progress.Progress, {
                      value: job.progress,
                      className: "h-2"
                    })
                  })), job.status === 'paused' ?
                  /* istanbul ignore next */
                  (/*#__PURE__*/cov_1wusvwecbs().b[46][0]++, (0, _jsxruntime.jsx)(_button.Button, {
                    variant: "ghost",
                    size: "icon",
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_1wusvwecbs().f[31]++;
                      cov_1wusvwecbs().s[162]++;
                      return resumeJob(job.id);
                    },
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Play, {
                      className: "h-3 w-3"
                    })
                  })) :
                  /* istanbul ignore next */
                  (/*#__PURE__*/cov_1wusvwecbs().b[46][1]++, (0, _jsxruntime.jsx)(_button.Button, {
                    variant: "ghost",
                    size: "icon",
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_1wusvwecbs().f[32]++;
                      cov_1wusvwecbs().s[163]++;
                      return pauseJob(job.id);
                    },
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Pause, {
                      className: "h-3 w-3"
                    })
                  })), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                    variant: "ghost",
                    size: "icon",
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_1wusvwecbs().f[33]++;
                      cov_1wusvwecbs().s[164]++;
                      return cancelJob(job.id);
                    },
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.X, {
                      className: "h-3 w-3"
                    })
                  })]
                })]
              }, job.id);
            }), completedJobs.map(job => {
              /* istanbul ignore next */
              cov_1wusvwecbs().f[34]++;
              cov_1wusvwecbs().s[165]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between p-3 border rounded-lg opacity-60",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center gap-3",
                  children: [getStatusIcon(job.status), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "font-medium text-sm",
                      children: job.name
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-xs text-muted-foreground",
                      children: getElapsedTime(job)
                    })]
                  })]
                }),
                /* istanbul ignore next */
                (cov_1wusvwecbs().b[47][0]++, job.status === 'failed') &&
                /* istanbul ignore next */
                (cov_1wusvwecbs().b[47][1]++, job.retryCount !== undefined) &&
                /* istanbul ignore next */
                (cov_1wusvwecbs().b[47][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                  variant: "ghost",
                  size: "sm",
                  onClick: () => {
                    /* istanbul ignore next */
                    cov_1wusvwecbs().f[35]++;
                    cov_1wusvwecbs().s[166]++;
                    return retryJob(job.id);
                  },
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                    className: "h-3 w-3"
                  })
                }))]
              }, job.id);
            })]
          })
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_1wusvwecbs().b[43][1]++;
  }
  // トースト通知のみ（UIなし）
  cov_1wusvwecbs().s[167]++;
  return null;
}
function JobProgressToastProvider({
  children
}) {
  /* istanbul ignore next */
  cov_1wusvwecbs().f[36]++;
  cov_1wusvwecbs().s[168]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
    children: [children, /*#__PURE__*/(0, _jsxruntime.jsx)(_sonner.Toaster, {
      position: "bottom-right"
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(JobProgressToast, {})]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,