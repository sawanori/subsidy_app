{"version":3,"names":["EvidencePickerModal","isOpen","onClose","evidence","onCitationsSelect","cov_1juhb4ro51","f","paragraphs","setParagraphs","s","_react","useState","selectedParagraphs","setSelectedParagraphs","Set","searchTerm","setSearchTerm","isProcessing","setIsProcessing","aiSuggestions","setAiSuggestions","useEffect","content","b","parsed","parseContentToParagraphs","lines","split","paragraphList","currentPage","currentLine","forEach","line","index","trimmed","trim","isHeader","test","level","match","length","includes","push","id","Date","now","text","replace","pageNumber","lineNumber","confidence","selected","toggleParagraph","paragraphId","prev","newSet","has","delete","add","toggleAll","size","filteredParagraphs","map","p","applyAISuggestions","suggestions","filter","hasNumbers","hasKeywords","isImportantPosition","slice","handleConfirm","citations","toLowerCase","getSelectionStats","totalChars","reduce","sum","pages","count","chars","stats","_jsxruntime","jsx","_dialog","Dialog","open","onOpenChange","jsxs","DialogContent","className","DialogHeader","DialogTitle","_lucidereact","FileText","DialogDescription","title","Search","_input","Input","placeholder","value","onChange","e","target","_button","Button","variant","onClick","Fragment","Square","CheckSquare","disabled","Sparkles","_badge","Badge","_scrollarea","ScrollArea","paragraph","_checkbox","Checkbox","checked","onCheckedChange","Hash","Math","round","navigator","clipboard","writeText","Copy","AlertCircle","_progress","Progress","_alert","Alert","AlertDescription","DialogFooter"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/evidence/evidence-picker-modal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Progress } from '@/components/ui/progress';\nimport {\n  FileText,\n  Search,\n  CheckSquare,\n  Square,\n  Hash,\n  AlertCircle,\n  Sparkles,\n  Copy,\n} from 'lucide-react';\n\n/**\n * エビデンスピッカーモーダル\n * APP-420: 段落別の引用チェック\n */\n\ninterface Evidence {\n  id: string;\n  title: string;\n  url: string;\n  content?: string;\n  status: 'pending' | 'fetching' | 'ingested' | 'failed';\n}\n\ninterface Citation {\n  id: string;\n  text: string;\n  pageNumber?: number;\n  confidence?: number;\n}\n\ninterface Paragraph {\n  id: string;\n  text: string;\n  pageNumber?: number;\n  lineNumber?: number;\n  isHeader?: boolean;\n  level?: number;\n  confidence?: number;\n  selected?: boolean;\n}\n\ninterface EvidencePickerModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  evidence: Evidence;\n  onCitationsSelect: (citations: Citation[]) => void;\n}\n\nexport function EvidencePickerModal({\n  isOpen,\n  onClose,\n  evidence,\n  onCitationsSelect,\n}: EvidencePickerModalProps) {\n  const [paragraphs, setParagraphs] = useState<Paragraph[]>([]);\n  const [selectedParagraphs, setSelectedParagraphs] = useState<Set<string>>(new Set());\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [aiSuggestions, setAiSuggestions] = useState<string[]>([]);\n\n  /**\n   * コンテンツを段落に分割\n   */\n  useEffect(() => {\n    if (evidence.content) {\n      const parsed = parseContentToParagraphs(evidence.content);\n      setParagraphs(parsed);\n    }\n  }, [evidence.content]);\n\n  /**\n   * 段落パース処理\n   */\n  const parseContentToParagraphs = (content: string): Paragraph[] => {\n    const lines = content.split(/\\n\\n+/);\n    const paragraphList: Paragraph[] = [];\n    let currentPage = 1;\n    let currentLine = 1;\n\n    lines.forEach((line, index) => {\n      const trimmed = line.trim();\n      if (!trimmed) return;\n\n      // ヘッダー判定\n      const isHeader = /^#{1,6}\\s/.test(trimmed) || /^[一二三四五六七八九十]+[\\.\\、]/.test(trimmed);\n      const level = isHeader ? (trimmed.match(/^#{1,6}/)?.[0].length || 1) : 0;\n\n      // ページ区切り判定\n      if (trimmed.includes('---Page') || trimmed.includes('ページ')) {\n        currentPage++;\n        currentLine = 1;\n        return;\n      }\n\n      paragraphList.push({\n        id: `para-${index}-${Date.now()}`,\n        text: trimmed.replace(/^#{1,6}\\s/, ''),\n        pageNumber: currentPage,\n        lineNumber: currentLine,\n        isHeader,\n        level,\n        confidence: 0.95, // デフォルト信頼度\n        selected: false,\n      });\n\n      currentLine += trimmed.split('\\n').length;\n    });\n\n    return paragraphList;\n  };\n\n  /**\n   * 段落選択トグル\n   */\n  const toggleParagraph = (paragraphId: string) => {\n    setSelectedParagraphs((prev) => {\n      const newSet = new Set(prev);\n      if (newSet.has(paragraphId)) {\n        newSet.delete(paragraphId);\n      } else {\n        newSet.add(paragraphId);\n      }\n      return newSet;\n    });\n  };\n\n  /**\n   * 全選択/全解除\n   */\n  const toggleAll = () => {\n    if (selectedParagraphs.size === filteredParagraphs.length) {\n      setSelectedParagraphs(new Set());\n    } else {\n      setSelectedParagraphs(new Set(filteredParagraphs.map((p) => p.id)));\n    }\n  };\n\n  /**\n   * AI提案による自動選択\n   */\n  const applyAISuggestions = async () => {\n    setIsProcessing(true);\n    try {\n      // AIが重要な段落を提案（実際はAPIコール）\n      const suggestions = paragraphs\n        .filter((p) => {\n          // 数値データ、金額、パーセンテージを含む段落を優先\n          const hasNumbers = /\\d+[万億円%]/.test(p.text);\n          // 重要キーワードを含む段落\n          const hasKeywords = /成長|増加|減少|課題|問題|解決|効果|実績/.test(p.text);\n          // ヘッダー直後の段落\n          const isImportantPosition = p.isHeader || p.lineNumber === 1;\n\n          return hasNumbers || hasKeywords || isImportantPosition;\n        })\n        .slice(0, 10) // 上位10段落\n        .map((p) => p.id);\n\n      setSelectedParagraphs(new Set(suggestions));\n      setAiSuggestions(suggestions);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  /**\n   * 選択確定\n   */\n  const handleConfirm = () => {\n    const citations: Citation[] = paragraphs\n      .filter((p) => selectedParagraphs.has(p.id))\n      .map((p) => ({\n        id: p.id,\n        text: p.text,\n        pageNumber: p.pageNumber,\n        confidence: p.confidence,\n      }));\n\n    onCitationsSelect(citations);\n    onClose();\n  };\n\n  /**\n   * 検索フィルタリング\n   */\n  const filteredParagraphs = paragraphs.filter((p) =>\n    p.text.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  /**\n   * 選択状態の統計\n   */\n  const getSelectionStats = () => {\n    const selected = paragraphs.filter((p) => selectedParagraphs.has(p.id));\n    const totalChars = selected.reduce((sum, p) => sum + p.text.length, 0);\n    const pages = new Set(selected.map((p) => p.pageNumber)).size;\n\n    return {\n      count: selected.length,\n      chars: totalChars,\n      pages,\n    };\n  };\n\n  const stats = getSelectionStats();\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] flex flex-col\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <FileText className=\"h-5 w-5\" />\n            引用箇所を選択\n          </DialogTitle>\n          <DialogDescription>\n            {evidence.title} から引用する段落を選択してください\n          </DialogDescription>\n        </DialogHeader>\n\n        {/* 検索とアクション */}\n        <div className=\"flex gap-2 py-2\">\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n            <Input\n              placeholder=\"段落を検索...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10\"\n            />\n          </div>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={toggleAll}\n            className=\"gap-2\"\n          >\n            {selectedParagraphs.size === filteredParagraphs.length ? (\n              <>\n                <Square className=\"h-4 w-4\" />\n                全解除\n              </>\n            ) : (\n              <>\n                <CheckSquare className=\"h-4 w-4\" />\n                全選択\n              </>\n            )}\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={applyAISuggestions}\n            disabled={isProcessing}\n            className=\"gap-2\"\n          >\n            <Sparkles className=\"h-4 w-4\" />\n            AI提案\n          </Button>\n        </div>\n\n        {/* 選択状態 */}\n        <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n          <span>{stats.count} 段落選択</span>\n          <span>{stats.chars} 文字</span>\n          <span>{stats.pages} ページ</span>\n          {aiSuggestions.length > 0 && (\n            <Badge variant=\"secondary\" className=\"gap-1\">\n              <Sparkles className=\"h-3 w-3\" />\n              AI提案適用中\n            </Badge>\n          )}\n        </div>\n\n        {/* 段落リスト */}\n        <ScrollArea className=\"flex-1 border rounded-lg p-4\">\n          <div className=\"space-y-2\">\n            {filteredParagraphs.length > 0 ? (\n              filteredParagraphs.map((paragraph) => (\n                <div\n                  key={paragraph.id}\n                  className={`flex items-start gap-3 p-3 rounded-lg transition-colors hover:bg-muted/50 ${\n                    selectedParagraphs.has(paragraph.id) ? 'bg-muted' : ''\n                  }`}\n                >\n                  <Checkbox\n                    checked={selectedParagraphs.has(paragraph.id)}\n                    onCheckedChange={() => toggleParagraph(paragraph.id)}\n                    className=\"mt-1\"\n                  />\n                  <div className=\"flex-1 space-y-1\">\n                    <div className=\"flex items-start gap-2\">\n                      {paragraph.isHeader && (\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          H{paragraph.level}\n                        </Badge>\n                      )}\n                      <p className={`text-sm ${paragraph.isHeader ? 'font-medium' : ''}`}>\n                        {paragraph.text}\n                      </p>\n                    </div>\n                    <div className=\"flex items-center gap-3 text-xs text-muted-foreground\">\n                      {paragraph.pageNumber && (\n                        <span className=\"flex items-center gap-1\">\n                          <FileText className=\"h-3 w-3\" />\n                          ページ {paragraph.pageNumber}\n                        </span>\n                      )}\n                      {paragraph.lineNumber && (\n                        <span className=\"flex items-center gap-1\">\n                          <Hash className=\"h-3 w-3\" />\n                          行 {paragraph.lineNumber}\n                        </span>\n                      )}\n                      {paragraph.confidence && (\n                        <Badge\n                          variant={\n                            paragraph.confidence >= 0.9\n                              ? 'default'\n                              : paragraph.confidence >= 0.7\n                              ? 'secondary'\n                              : 'outline'\n                          }\n                          className=\"text-xs\"\n                        >\n                          {Math.round(paragraph.confidence * 100)}%\n                        </Badge>\n                      )}\n                      {aiSuggestions.includes(paragraph.id) && (\n                        <Badge variant=\"secondary\" className=\"text-xs gap-1\">\n                          <Sparkles className=\"h-3 w-3\" />\n                          AI推奨\n                        </Badge>\n                      )}\n                    </div>\n                  </div>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => navigator.clipboard.writeText(paragraph.text)}\n                    className=\"opacity-0 group-hover:opacity-100 transition-opacity\"\n                  >\n                    <Copy className=\"h-3 w-3\" />\n                  </Button>\n                </div>\n              ))\n            ) : (\n              <div className=\"flex flex-col items-center justify-center py-8 text-muted-foreground\">\n                <AlertCircle className=\"h-8 w-8 mb-2\" />\n                <p className=\"text-sm\">段落が見つかりません</p>\n              </div>\n            )}\n          </div>\n        </ScrollArea>\n\n        {/* 処理中インジケータ */}\n        {isProcessing && (\n          <div className=\"py-2\">\n            <Progress value={50} className=\"h-2\" />\n            <p className=\"text-xs text-muted-foreground mt-1\">AI提案を生成中...</p>\n          </div>\n        )}\n\n        {/* 警告 */}\n        {stats.count > 20 && (\n          <Alert>\n            <AlertCircle className=\"h-4 w-4\" />\n            <AlertDescription>\n              多数の段落が選択されています。重要な箇所に絞ることをお勧めします。\n            </AlertDescription>\n          </Alert>\n        )}\n\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={onClose}>\n            キャンセル\n          </Button>\n          <Button\n            onClick={handleConfirm}\n            disabled={selectedParagraphs.size === 0}\n            className=\"gap-2\"\n          >\n            <CheckSquare className=\"h-4 w-4\" />\n            {stats.count > 0 ? `${stats.count}件を引用` : '引用箇所を選択'}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}"],"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","ignoreList":[]}