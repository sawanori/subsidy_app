418ddd980c5d158e314f21c1b5305c92
'use client';
"use strict";

/* istanbul ignore next */
function cov_plwd3x3sc() {
  var path = "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/ui/toast.tsx";
  var hash = "0a59d0fba19bed83653d21e06c99881204eff4db";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/ui/toast.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "9": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 41
        }
      },
      "10": {
        start: {
          line: 24,
          column: 22
        },
        end: {
          line: 24,
          column: 48
        }
      },
      "11": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 51
        }
      },
      "12": {
        start: {
          line: 26,
          column: 39
        },
        end: {
          line: 26,
          column: 51
        }
      },
      "13": {
        start: {
          line: 27,
          column: 28
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "14": {
        start: {
          line: 28,
          column: 27
        },
        end: {
          line: 28,
          column: 40
        }
      },
      "15": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 20
        }
      },
      "16": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 66
        }
      },
      "17": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "18": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 19
        }
      },
      "19": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "20": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "21": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 53
        }
      },
      "22": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "23": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 30
        }
      },
      "24": {
        start: {
          line: 46,
          column: 17
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "25": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 49,
          column: 88
        }
      },
      "26": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "27": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "28": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 52,
          column: 95
        }
      },
      "29": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "30": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 57
        }
      },
      "31": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 39
        }
      },
      "32": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 25
        }
      },
      "33": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "34": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 31
        }
      },
      "35": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 18
        }
      },
      "36": {
        start: {
          line: 66,
          column: 35
        },
        end: {
          line: 66,
          column: 66
        }
      },
      "37": {
        start: {
          line: 67,
          column: 17
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "38": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 68,
          column: 56
        }
      },
      "39": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "40": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 72
        }
      },
      "41": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 19
        }
      },
      "42": {
        start: {
          line: 74,
          column: 22
        },
        end: {
          line: 118,
          column: 1
        }
      },
      "43": {
        start: {
          line: 75,
          column: 32
        },
        end: {
          line: 75,
          column: 56
        }
      },
      "44": {
        start: {
          line: 76,
          column: 18
        },
        end: {
          line: 97,
          column: 10
        }
      },
      "45": {
        start: {
          line: 77,
          column: 19
        },
        end: {
          line: 77,
          column: 61
        }
      },
      "46": {
        start: {
          line: 78,
          column: 56
        },
        end: {
          line: 78,
          column: 63
        }
      },
      "47": {
        start: {
          line: 79,
          column: 25
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "48": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 89,
          column: 15
        }
      },
      "49": {
        start: {
          line: 86,
          column: 26
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "50": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "51": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 94,
          column: 25
        }
      },
      "52": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 73
        }
      },
      "53": {
        start: {
          line: 93,
          column: 34
        },
        end: {
          line: 93,
          column: 71
        }
      },
      "54": {
        start: {
          line: 93,
          column: 55
        },
        end: {
          line: 93,
          column: 70
        }
      },
      "55": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 18
        }
      },
      "56": {
        start: {
          line: 98,
          column: 20
        },
        end: {
          line: 100,
          column: 10
        }
      },
      "57": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 65
        }
      },
      "58": {
        start: {
          line: 99,
          column: 26
        },
        end: {
          line: 99,
          column: 63
        }
      },
      "59": {
        start: {
          line: 99,
          column: 47
        },
        end: {
          line: 99,
          column: 62
        }
      },
      "60": {
        start: {
          line: 101,
          column: 23
        },
        end: {
          line: 103,
          column: 10
        }
      },
      "61": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 22
        }
      },
      "62": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 117,
          column: 7
        }
      },
      "63": {
        start: {
          line: 119,
          column: 23
        },
        end: {
          line: 139,
          column: 1
        }
      },
      "64": {
        start: {
          line: 120,
          column: 34
        },
        end: {
          line: 120,
          column: 61
        }
      },
      "65": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 123,
          column: 11
        }
      },
      "66": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 25
        }
      },
      "67": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 30
        }
      },
      "68": {
        start: {
          line: 124,
          column: 18
        },
        end: {
          line: 124,
          column: 30
        }
      },
      "69": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 138,
          column: 23
        }
      },
      "70": {
        start: {
          line: 128,
          column: 52
        },
        end: {
          line: 137,
          column: 24
        }
      },
      "71": {
        start: {
          line: 133,
          column: 35
        },
        end: {
          line: 133,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 20
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 29,
            column: 40
          }
        },
        loc: {
          start: {
            line: 29,
            column: 61
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 33,
            column: 9
          },
          end: {
            line: 33,
            column: 34
          }
        },
        loc: {
          start: {
            line: 33,
            column: 53
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 33
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 67,
            column: 18
          }
        },
        loc: {
          start: {
            line: 67,
            column: 21
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 67
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 74,
            column: 22
          },
          end: {
            line: 74,
            column: 23
          }
        },
        loc: {
          start: {
            line: 74,
            column: 38
          },
          end: {
            line: 118,
            column: 1
          }
        },
        line: 74
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 76,
            column: 42
          },
          end: {
            line: 76,
            column: 43
          }
        },
        loc: {
          start: {
            line: 76,
            column: 85
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 76
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 86,
            column: 18
          },
          end: {
            line: 86,
            column: 19
          }
        },
        loc: {
          start: {
            line: 86,
            column: 26
          },
          end: {
            line: 89,
            column: 13
          }
        },
        line: 86
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 92,
            column: 23
          },
          end: {
            line: 92,
            column: 24
          }
        },
        loc: {
          start: {
            line: 92,
            column: 27
          },
          end: {
            line: 94,
            column: 13
          }
        },
        line: 92
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 93,
            column: 26
          },
          end: {
            line: 93,
            column: 27
          }
        },
        loc: {
          start: {
            line: 93,
            column: 34
          },
          end: {
            line: 93,
            column: 71
          }
        },
        line: 93
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 93,
            column: 46
          },
          end: {
            line: 93,
            column: 47
          }
        },
        loc: {
          start: {
            line: 93,
            column: 55
          },
          end: {
            line: 93,
            column: 70
          }
        },
        line: 93
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 98,
            column: 44
          },
          end: {
            line: 98,
            column: 45
          }
        },
        loc: {
          start: {
            line: 98,
            column: 50
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 98
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 99,
            column: 18
          },
          end: {
            line: 99,
            column: 19
          }
        },
        loc: {
          start: {
            line: 99,
            column: 26
          },
          end: {
            line: 99,
            column: 63
          }
        },
        line: 99
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 99,
            column: 38
          },
          end: {
            line: 99,
            column: 39
          }
        },
        loc: {
          start: {
            line: 99,
            column: 47
          },
          end: {
            line: 99,
            column: 62
          }
        },
        line: 99
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 101,
            column: 47
          },
          end: {
            line: 101,
            column: 48
          }
        },
        loc: {
          start: {
            line: 101,
            column: 51
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 101
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 119,
            column: 23
          },
          end: {
            line: 119,
            column: 24
          }
        },
        loc: {
          start: {
            line: 119,
            column: 48
          },
          end: {
            line: 139,
            column: 1
          }
        },
        line: 119
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 121,
            column: 26
          },
          end: {
            line: 121,
            column: 27
          }
        },
        loc: {
          start: {
            line: 121,
            column: 30
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 121
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 128,
            column: 29
          },
          end: {
            line: 128,
            column: 30
          }
        },
        loc: {
          start: {
            line: 128,
            column: 52
          },
          end: {
            line: 137,
            column: 24
          }
        },
        line: 128
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 133,
            column: 31
          },
          end: {
            line: 133,
            column: 32
          }
        },
        loc: {
          start: {
            line: 133,
            column: 35
          },
          end: {
            line: 133,
            column: 54
          }
        },
        line: 133
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 30,
            column: 45
          }
        }, {
          start: {
            line: 30,
            column: 48
          },
          end: {
            line: 30,
            column: 65
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 20
          }
        }, {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 27
          }
        }, {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 34,
            column: 45
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 20
          }
        }, {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 47
          }
        }, {
          start: {
            line: 37,
            column: 51
          },
          end: {
            line: 37,
            column: 76
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "7": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 31
          }
        }],
        line: 43
      },
      "8": {
        loc: {
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 53
          }
        }, {
          start: {
            line: 49,
            column: 57
          },
          end: {
            line: 49,
            column: 88
          }
        }],
        line: 49
      },
      "9": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "10": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 29
          }
        }, {
          start: {
            line: 51,
            column: 33
          },
          end: {
            line: 51,
            column: 79
          }
        }],
        line: 51
      },
      "11": {
        loc: {
          start: {
            line: 52,
            column: 23
          },
          end: {
            line: 52,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 47
          },
          end: {
            line: 52,
            column: 88
          }
        }, {
          start: {
            line: 52,
            column: 91
          },
          end: {
            line: 52,
            column: 95
          }
        }],
        line: 52
      },
      "12": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: 55,
            column: 19
          },
          end: {
            line: 57,
            column: 13
          }
        }],
        line: 53
      },
      "13": {
        loc: {
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 20
          }
        }, {
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 53,
            column: 33
          }
        }, {
          start: {
            line: 53,
            column: 37
          },
          end: {
            line: 53,
            column: 45
          }
        }],
        line: 53
      },
      "14": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "15": {
        loc: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "16": {
        loc: {
          start: {
            line: 76,
            column: 52
          },
          end: {
            line: 76,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 62
          },
          end: {
            line: 76,
            column: 68
          }
        }],
        line: 76
      },
      "17": {
        loc: {
          start: {
            line: 76,
            column: 70
          },
          end: {
            line: 76,
            column: 82
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 80
          },
          end: {
            line: 76,
            column: 82
          }
        }],
        line: 76
      },
      "18": {
        loc: {
          start: {
            line: 78,
            column: 16
          },
          end: {
            line: 78,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 78,
            column: 27
          },
          end: {
            line: 78,
            column: 31
          }
        }],
        line: 78
      },
      "19": {
        loc: {
          start: {
            line: 78,
            column: 33
          },
          end: {
            line: 78,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 78,
            column: 46
          },
          end: {
            line: 78,
            column: 51
          }
        }],
        line: 78
      },
      "20": {
        loc: {
          start: {
            line: 83,
            column: 22
          },
          end: {
            line: 83,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 35
          },
          end: {
            line: 83,
            column: 44
          }
        }, {
          start: {
            line: 83,
            column: 47
          },
          end: {
            line: 83,
            column: 55
          }
        }],
        line: 83
      },
      "21": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "22": {
        loc: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/ui/toast.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { cn } from '@/lib/utils';\nimport { ErrorMessage, ErrorMessageVariant } from '@/components/ui/error-message';\n\ninterface ToastItem {\n  id: string;\n  message: string;\n  variant: ErrorMessageVariant;\n  duration?: number;\n  persistent?: boolean;\n}\n\ninterface ToastContextType {\n  toast: (message: string, variant?: ErrorMessageVariant, options?: { duration?: number; persistent?: boolean }) => string;\n  dismiss: (id: string) => void;\n  dismissAll: () => void;\n}\n\nconst ToastContext = createContext<ToastContextType | null>(null);\n\nexport const useToast = () => {\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n  return context;\n};\n\ninterface ToastProviderProps {\n  children: React.ReactNode;\n}\n\nexport const ToastProvider: React.FC<ToastProviderProps> = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastItem[]>([]);\n\n  const toast = useCallback((\n    message: string,\n    variant: ErrorMessageVariant = 'info',\n    options: { duration?: number; persistent?: boolean } = {}\n  ): string => {\n    const id = Math.random().toString(36).substring(2, 9);\n    const { duration = 5000, persistent = false } = options;\n\n    const newToast: ToastItem = {\n      id,\n      message,\n      variant,\n      duration: persistent ? undefined : duration,\n      persistent,\n    };\n\n    setToasts(prev => [...prev, newToast]);\n\n    // Auto dismiss after duration (unless persistent)\n    if (!persistent) {\n      setTimeout(() => {\n        setToasts(prev => prev.filter(toast => toast.id !== id));\n      }, duration);\n    }\n\n    return id;\n  }, []);\n\n  const dismiss = useCallback((id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  const dismissAll = useCallback(() => {\n    setToasts([]);\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ toast, dismiss, dismissAll }}>\n      {children}\n      <ToastContainer toasts={toasts} onDismiss={dismiss} />\n    </ToastContext.Provider>\n  );\n};\n\ninterface ToastContainerProps {\n  toasts: ToastItem[];\n  onDismiss: (id: string) => void;\n}\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onDismiss }) => {\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) return null;\n\n  return createPortal(\n    <div\n      className=\"fixed bottom-0 right-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\"\n      aria-live=\"polite\"\n    >\n      {toasts.map((toast) => (\n        <div\n          key={toast.id}\n          className={cn(\n            \"relative overflow-hidden rounded-lg border p-4 pr-6 shadow-lg transition-all\",\n            \"data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)]\",\n            \"data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none\",\n            \"data-[state=open]:animate-in data-[state=closed]:animate-out\",\n            \"data-[swipe=end]:animate-out data-[state=closed]:fade-out-80\",\n            \"data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full\",\n            \"data-[state=open]:sm:slide-in-from-bottom-full\"\n          )}\n        >\n          <ErrorMessage\n            message={toast.message}\n            variant={toast.variant}\n            onDismiss={() => onDismiss(toast.id)}\n            aria-live=\"assertive\"\n            id={`toast-${toast.id}`}\n          />\n        </div>\n      ))}\n    </div>,\n    document.body\n  );\n};"],
      names: ["ToastProvider", "useToast", "ToastContext", "createContext", "context", "useContext", "Error", "children", "toasts", "setToasts", "useState", "toast", "useCallback", "message", "variant", "options", "id", "Math", "random", "toString", "substring", "duration", "persistent", "newToast", "undefined", "prev", "setTimeout", "filter", "dismiss", "dismissAll", "Provider", "value", "ToastContainer", "onDismiss", "mounted", "setMounted", "useEffect", "createPortal", "div", "className", "aria-live", "map", "cn", "ErrorMessage", "document", "body"],
      mappings: "AAAA;;;;;;;;;;;;QAmCaA;eAAAA;;QAZAC;eAAAA;;;;+DArBsE;0BACtD;uBACV;8BAC+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBlD,MAAMC,6BAAeC,IAAAA,oBAAa,EAA0B;AAErD,MAAMF,WAAW;IACtB,MAAMG,UAAUC,IAAAA,iBAAU,EAACH;IAC3B,IAAI,CAACE,SAAS;QACZ,MAAM,IAAIE,MAAM;IAClB;IACA,OAAOF;AACT;AAMO,MAAMJ,gBAA8C,CAAC,EAAEO,QAAQ,EAAE;IACtE,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAAc,EAAE;IAEpD,MAAMC,QAAQC,IAAAA,kBAAW,EAAC,CACxBC,SACAC,UAA+B,MAAM,EACrCC,UAAuD,CAAC,CAAC;QAEzD,MAAMC,KAAKC,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,SAAS,CAAC,GAAG;QACnD,MAAM,EAAEC,WAAW,IAAI,EAAEC,aAAa,KAAK,EAAE,GAAGP;QAEhD,MAAMQ,WAAsB;YAC1BP;YACAH;YACAC;YACAO,UAAUC,aAAaE,YAAYH;YACnCC;QACF;QAEAb,UAAUgB,CAAAA,OAAQ;mBAAIA;gBAAMF;aAAS;QAErC,kDAAkD;QAClD,IAAI,CAACD,YAAY;YACfI,WAAW;gBACTjB,UAAUgB,CAAAA,OAAQA,KAAKE,MAAM,CAAChB,CAAAA,QAASA,MAAMK,EAAE,KAAKA;YACtD,GAAGK;QACL;QAEA,OAAOL;IACT,GAAG,EAAE;IAEL,MAAMY,UAAUhB,IAAAA,kBAAW,EAAC,CAACI;QAC3BP,UAAUgB,CAAAA,OAAQA,KAAKE,MAAM,CAAChB,CAAAA,QAASA,MAAMK,EAAE,KAAKA;IACtD,GAAG,EAAE;IAEL,MAAMa,aAAajB,IAAAA,kBAAW,EAAC;QAC7BH,UAAU,EAAE;IACd,GAAG,EAAE;IAEL,qBACE,sBAACP,aAAa4B,QAAQ;QAACC,OAAO;YAAEpB;YAAOiB;YAASC;QAAW;;YACxDtB;0BACD,qBAACyB;gBAAexB,QAAQA;gBAAQyB,WAAWL;;;;AAGjD;AAOA,MAAMI,iBAAgD,CAAC,EAAExB,MAAM,EAAEyB,SAAS,EAAE;IAC1E,MAAM,CAACC,SAASC,WAAW,GAAGzB,IAAAA,eAAQ,EAAC;IAEvC0B,IAAAA,gBAAS,EAAC;QACRD,WAAW;IACb,GAAG,EAAE;IAEL,IAAI,CAACD,SAAS,OAAO;IAErB,qBAAOG,IAAAA,sBAAY,gBACjB,qBAACC;QACCC,WAAU;QACVC,aAAU;kBAEThC,OAAOiC,GAAG,CAAC,CAAC9B,sBACX,qBAAC2B;gBAECC,WAAWG,IAAAA,SAAE,EACX,gFACA,mGACA,qGACA,gEACA,gEACA,wFACA;0BAGF,cAAA,qBAACC,0BAAY;oBACX9B,SAASF,MAAME,OAAO;oBACtBC,SAASH,MAAMG,OAAO;oBACtBmB,WAAW,IAAMA,UAAUtB,MAAMK,EAAE;oBACnCwB,aAAU;oBACVxB,IAAI,CAAC,MAAM,EAAEL,MAAMK,EAAE,EAAE;;eAhBpBL,MAAMK,EAAE;QAqBnB4B,SAASC,IAAI;AAEjB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0a59d0fba19bed83653d21e06c99881204eff4db"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_plwd3x3sc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_plwd3x3sc();
cov_plwd3x3sc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_plwd3x3sc().f[0]++;
  cov_plwd3x3sc().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_plwd3x3sc().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_plwd3x3sc().s[3]++;
_export(exports, {
  get ToastProvider() {
    /* istanbul ignore next */
    cov_plwd3x3sc().f[1]++;
    cov_plwd3x3sc().s[4]++;
    return ToastProvider;
  },
  get useToast() {
    /* istanbul ignore next */
    cov_plwd3x3sc().f[2]++;
    cov_plwd3x3sc().s[5]++;
    return useToast;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_plwd3x3sc().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_plwd3x3sc().s[7]++, _interop_require_wildcard(require("react")));
const _reactdom =
/* istanbul ignore next */
(cov_plwd3x3sc().s[8]++, require("react-dom"));
const _utils =
/* istanbul ignore next */
(cov_plwd3x3sc().s[9]++, require("../../lib/utils"));
const _errormessage =
/* istanbul ignore next */
(cov_plwd3x3sc().s[10]++, require("./error-message"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_plwd3x3sc().f[3]++;
  cov_plwd3x3sc().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_plwd3x3sc().b[0][0]++;
    cov_plwd3x3sc().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_plwd3x3sc().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_plwd3x3sc().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_plwd3x3sc().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_plwd3x3sc().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_plwd3x3sc().f[4]++;
    cov_plwd3x3sc().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_plwd3x3sc().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_plwd3x3sc().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_plwd3x3sc().f[5]++;
  cov_plwd3x3sc().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_plwd3x3sc().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_plwd3x3sc().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_plwd3x3sc().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_plwd3x3sc().b[2][0]++;
    cov_plwd3x3sc().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_plwd3x3sc().b[2][1]++;
  }
  cov_plwd3x3sc().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_plwd3x3sc().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_plwd3x3sc().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_plwd3x3sc().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_plwd3x3sc().b[4][0]++;
    cov_plwd3x3sc().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_plwd3x3sc().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_plwd3x3sc().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_plwd3x3sc().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_plwd3x3sc().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_plwd3x3sc().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_plwd3x3sc().b[6][0]++;
    cov_plwd3x3sc().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_plwd3x3sc().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_plwd3x3sc().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_plwd3x3sc().s[25]++,
  /* istanbul ignore next */
  (cov_plwd3x3sc().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_plwd3x3sc().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_plwd3x3sc().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_plwd3x3sc().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_plwd3x3sc().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_plwd3x3sc().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_plwd3x3sc().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_plwd3x3sc().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_plwd3x3sc().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_plwd3x3sc().b[11][1]++, null));
      /* istanbul ignore next */
      cov_plwd3x3sc().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_plwd3x3sc().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_plwd3x3sc().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_plwd3x3sc().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_plwd3x3sc().b[12][0]++;
        cov_plwd3x3sc().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_plwd3x3sc().b[12][1]++;
        cov_plwd3x3sc().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_plwd3x3sc().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_plwd3x3sc().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_plwd3x3sc().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_plwd3x3sc().b[14][0]++;
    cov_plwd3x3sc().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_plwd3x3sc().b[14][1]++;
  }
  cov_plwd3x3sc().s[35]++;
  return newObj;
}
const ToastContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_plwd3x3sc().s[36]++, (0, _react.createContext)(null));
/* istanbul ignore next */
cov_plwd3x3sc().s[37]++;
const useToast = () => {
  /* istanbul ignore next */
  cov_plwd3x3sc().f[6]++;
  const context =
  /* istanbul ignore next */
  (cov_plwd3x3sc().s[38]++, (0, _react.useContext)(ToastContext));
  /* istanbul ignore next */
  cov_plwd3x3sc().s[39]++;
  if (!context) {
    /* istanbul ignore next */
    cov_plwd3x3sc().b[15][0]++;
    cov_plwd3x3sc().s[40]++;
    throw new Error('useToast must be used within a ToastProvider');
  } else
  /* istanbul ignore next */
  {
    cov_plwd3x3sc().b[15][1]++;
  }
  cov_plwd3x3sc().s[41]++;
  return context;
};
/* istanbul ignore next */
cov_plwd3x3sc().s[42]++;
const ToastProvider = ({
  children
}) => {
  /* istanbul ignore next */
  cov_plwd3x3sc().f[7]++;
  const [toasts, setToasts] =
  /* istanbul ignore next */
  (cov_plwd3x3sc().s[43]++, (0, _react.useState)([]));
  const toast =
  /* istanbul ignore next */
  (cov_plwd3x3sc().s[44]++, (0, _react.useCallback)((message, variant =
  /* istanbul ignore next */
  (cov_plwd3x3sc().b[16][0]++, 'info'), options =
  /* istanbul ignore next */
  (cov_plwd3x3sc().b[17][0]++, {})) => {
    /* istanbul ignore next */
    cov_plwd3x3sc().f[8]++;
    const id =
    /* istanbul ignore next */
    (cov_plwd3x3sc().s[45]++, Math.random().toString(36).substring(2, 9));
    const {
      duration =
      /* istanbul ignore next */
      (cov_plwd3x3sc().b[18][0]++, 5000),
      persistent =
      /* istanbul ignore next */
      (cov_plwd3x3sc().b[19][0]++, false)
    } =
    /* istanbul ignore next */
    (cov_plwd3x3sc().s[46]++, options);
    const newToast =
    /* istanbul ignore next */
    (cov_plwd3x3sc().s[47]++, {
      id,
      message,
      variant,
      duration: persistent ?
      /* istanbul ignore next */
      (cov_plwd3x3sc().b[20][0]++, undefined) :
      /* istanbul ignore next */
      (cov_plwd3x3sc().b[20][1]++, duration),
      persistent
    });
    /* istanbul ignore next */
    cov_plwd3x3sc().s[48]++;
    setToasts(prev => {
      /* istanbul ignore next */
      cov_plwd3x3sc().f[9]++;
      cov_plwd3x3sc().s[49]++;
      return [...prev, newToast];
    });
    // Auto dismiss after duration (unless persistent)
    /* istanbul ignore next */
    cov_plwd3x3sc().s[50]++;
    if (!persistent) {
      /* istanbul ignore next */
      cov_plwd3x3sc().b[21][0]++;
      cov_plwd3x3sc().s[51]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_plwd3x3sc().f[10]++;
        cov_plwd3x3sc().s[52]++;
        setToasts(prev => {
          /* istanbul ignore next */
          cov_plwd3x3sc().f[11]++;
          cov_plwd3x3sc().s[53]++;
          return prev.filter(toast => {
            /* istanbul ignore next */
            cov_plwd3x3sc().f[12]++;
            cov_plwd3x3sc().s[54]++;
            return toast.id !== id;
          });
        });
      }, duration);
    } else
    /* istanbul ignore next */
    {
      cov_plwd3x3sc().b[21][1]++;
    }
    cov_plwd3x3sc().s[55]++;
    return id;
  }, []));
  const dismiss =
  /* istanbul ignore next */
  (cov_plwd3x3sc().s[56]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_plwd3x3sc().f[13]++;
    cov_plwd3x3sc().s[57]++;
    setToasts(prev => {
      /* istanbul ignore next */
      cov_plwd3x3sc().f[14]++;
      cov_plwd3x3sc().s[58]++;
      return prev.filter(toast => {
        /* istanbul ignore next */
        cov_plwd3x3sc().f[15]++;
        cov_plwd3x3sc().s[59]++;
        return toast.id !== id;
      });
    });
  }, []));
  const dismissAll =
  /* istanbul ignore next */
  (cov_plwd3x3sc().s[60]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_plwd3x3sc().f[16]++;
    cov_plwd3x3sc().s[61]++;
    setToasts([]);
  }, []));
  /* istanbul ignore next */
  cov_plwd3x3sc().s[62]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(ToastContext.Provider, {
    value: {
      toast,
      dismiss,
      dismissAll
    },
    children: [children, /*#__PURE__*/(0, _jsxruntime.jsx)(ToastContainer, {
      toasts: toasts,
      onDismiss: dismiss
    })]
  });
};
/* istanbul ignore next */
cov_plwd3x3sc().s[63]++;
const ToastContainer = ({
  toasts,
  onDismiss
}) => {
  /* istanbul ignore next */
  cov_plwd3x3sc().f[17]++;
  const [mounted, setMounted] =
  /* istanbul ignore next */
  (cov_plwd3x3sc().s[64]++, (0, _react.useState)(false));
  /* istanbul ignore next */
  cov_plwd3x3sc().s[65]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_plwd3x3sc().f[18]++;
    cov_plwd3x3sc().s[66]++;
    setMounted(true);
  }, []);
  /* istanbul ignore next */
  cov_plwd3x3sc().s[67]++;
  if (!mounted) {
    /* istanbul ignore next */
    cov_plwd3x3sc().b[22][0]++;
    cov_plwd3x3sc().s[68]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_plwd3x3sc().b[22][1]++;
  }
  cov_plwd3x3sc().s[69]++;
  return /*#__PURE__*/(0, _reactdom.createPortal)(/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "fixed bottom-0 right-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",
    "aria-live": "polite",
    children: toasts.map(toast => {
      /* istanbul ignore next */
      cov_plwd3x3sc().f[19]++;
      cov_plwd3x3sc().s[70]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: (0, _utils.cn)("relative overflow-hidden rounded-lg border p-4 pr-6 shadow-lg transition-all", "data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)]", "data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none", "data-[state=open]:animate-in data-[state=closed]:animate-out", "data-[swipe=end]:animate-out data-[state=closed]:fade-out-80", "data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full", "data-[state=open]:sm:slide-in-from-bottom-full"),
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_errormessage.ErrorMessage, {
          message: toast.message,
          variant: toast.variant,
          onDismiss: () => {
            /* istanbul ignore next */
            cov_plwd3x3sc().f[20]++;
            cov_plwd3x3sc().s[71]++;
            return onDismiss(toast.id);
          },
          "aria-live": "assertive",
          id: `toast-${toast.id}`
        })
      }, toast.id);
    })
  }), document.body);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,