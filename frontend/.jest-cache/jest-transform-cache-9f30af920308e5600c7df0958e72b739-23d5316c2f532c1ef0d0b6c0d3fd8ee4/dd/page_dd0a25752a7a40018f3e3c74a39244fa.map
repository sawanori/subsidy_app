{"version":3,"names":["LoginPage","cov_2nsryp5l08","f","router","s","_navigation","useRouter","searchParams","useSearchParams","isLoading","setIsLoading","_react","useState","error","setError","registered","get","formData","setFormData","email","password","handleSubmit","e","preventDefault","supabase","_client","createClient","data","signInError","auth","signInWithPassword","b","message","includes","user","redirectTo","push","refresh","err","console","_jsxruntime","jsx","className","jsxs","_card","Card","CardHeader","CardTitle","CardDescription","onSubmit","CardContent","_alert","Alert","AlertDescription","variant","_label","Label","htmlFor","_input","Input","id","type","placeholder","value","onChange","target","required","disabled","_link","default","href","CardFooter","_button","Button","_icons","Icons","spinner"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/app/[locale]/(auth)/login/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useRouter, useSearchParams } from 'next/navigation'\nimport Link from 'next/link'\nimport { createClient } from '@/lib/supabase/client'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { Icons } from '@/components/ui/icons'\n\nexport default function LoginPage() {\n  const router = useRouter()\n  const searchParams = useSearchParams()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  const registered = searchParams.get('registered')\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  })\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setError(null)\n    setIsLoading(true)\n\n    try {\n      const supabase = createClient()\n\n      // Sign in with email and password\n      const { data, error: signInError } = await supabase.auth.signInWithPassword({\n        email: formData.email,\n        password: formData.password,\n      })\n\n      if (signInError) {\n        // Handle specific error messages\n        if (signInError.message.includes('Invalid login credentials')) {\n          setError('メールアドレスまたはパスワードが正しくありません')\n        } else if (signInError.message.includes('Email not confirmed')) {\n          setError('メールアドレスの確認が必要です。確認メールをご確認ください。')\n        } else {\n          setError(signInError.message || 'ログインに失敗しました')\n        }\n        return\n      }\n\n      if (data?.user) {\n        // Successful login - redirect to dashboard\n        const redirectTo = searchParams.get('redirectedFrom') || '/ja/applications'\n        router.push(redirectTo)\n        router.refresh()\n      }\n    } catch (err: any) {\n      console.error('Login error:', err)\n      setError('ログイン中にエラーが発生しました。もう一度お試しください。')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"space-y-1\">\n          <CardTitle className=\"text-2xl font-bold text-center\">\n            ログイン\n          </CardTitle>\n          <CardDescription className=\"text-center\">\n            補助金申請システムにログイン\n          </CardDescription>\n        </CardHeader>\n\n        <form onSubmit={handleSubmit}>\n          <CardContent className=\"space-y-4\">\n            {registered && (\n              <Alert className=\"alert\">\n                <AlertDescription>\n                  アカウントを作成しました。ログインしてください。\n                </AlertDescription>\n              </Alert>\n            )}\n\n            {error && (\n              <Alert variant=\"destructive\" className=\"alert\">\n                <AlertDescription>{error}</AlertDescription>\n              </Alert>\n            )}\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">メールアドレス</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"example@company.com\"\n                value={formData.email}\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                required\n                disabled={isLoading}\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"password\">パスワード</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"パスワードを入力\"\n                value={formData.password}\n                onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n                required\n                disabled={isLoading}\n              />\n            </div>\n\n            <div className=\"text-sm text-right\">\n              <Link href=\"/ja/forgot-password\" className=\"text-primary hover:underline\">\n                パスワードをお忘れですか？\n              </Link>\n            </div>\n          </CardContent>\n\n          <CardFooter className=\"flex flex-col space-y-4\">\n            <Button\n              type=\"submit\"\n              className=\"w-full\"\n              disabled={isLoading}\n            >\n              {isLoading && (\n                <Icons.spinner className=\"mr-2 h-4 w-4 animate-spin\" />\n              )}\n              ログイン\n            </Button>\n\n            <div className=\"text-sm text-center text-muted-foreground\">\n              アカウントをお持ちでない方は{' '}\n              <Link href=\"/ja/signup\" className=\"text-primary hover:underline\">\n                新規登録\n              </Link>\n            </div>\n          </CardFooter>\n        </form>\n      </Card>\n    </div>\n  )\n}"],"mappings":"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","ignoreList":[]}