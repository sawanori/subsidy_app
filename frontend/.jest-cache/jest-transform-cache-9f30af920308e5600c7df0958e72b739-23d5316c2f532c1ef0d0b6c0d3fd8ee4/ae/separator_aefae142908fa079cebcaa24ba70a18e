2fc7167dca6933da2b5417f62f8d38e6
"use client";
"use strict";

/* istanbul ignore next */
function cov_29095q70zl() {
  var path = "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/ui/separator.tsx";
  var hash = "62658c1afb3b6e63ad537598db1112f18acbad21";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/ui/separator.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 25
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 38
        },
        end: {
          line: 14,
          column: 101
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 39
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "9": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "10": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "11": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 20
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "15": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "17": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "18": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "19": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "20": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "21": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 88
        }
      },
      "22": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "23": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "24": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 95
        }
      },
      "25": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "26": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 57
        }
      },
      "27": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 39
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 25
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "30": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "31": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 18
        }
      },
      "32": {
        start: {
          line: 57,
          column: 32
        },
        end: {
          line: 63,
          column: 7
        }
      },
      "33": {
        start: {
          line: 57,
          column: 143
        },
        end: {
          line: 63,
          column: 6
        }
      },
      "34": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 64,
          column: 57
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 47
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 20,
            column: 40
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 34
          }
        },
        loc: {
          start: {
            line: 24,
            column: 53
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 57,
            column: 50
          },
          end: {
            line: 57,
            column: 51
          }
        },
        loc: {
          start: {
            line: 57,
            column: 143
          },
          end: {
            line: 63,
            column: 6
          }
        },
        line: 57
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 21,
            column: 45
          }
        }, {
          start: {
            line: 21,
            column: 48
          },
          end: {
            line: 21,
            column: 65
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 27
          }
        }, {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 25,
            column: 45
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 20
          }
        }, {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 47
          }
        }, {
          start: {
            line: 28,
            column: 51
          },
          end: {
            line: 28,
            column: 76
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "7": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 31
          }
        }],
        line: 34
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 53
          }
        }, {
          start: {
            line: 40,
            column: 57
          },
          end: {
            line: 40,
            column: 88
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 29
          }
        }, {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 79
          }
        }],
        line: 42
      },
      "11": {
        loc: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 43,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 47
          },
          end: {
            line: 43,
            column: 88
          }
        }, {
          start: {
            line: 43,
            column: 91
          },
          end: {
            line: 43,
            column: 95
          }
        }],
        line: 43
      },
      "12": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 48,
            column: 13
          }
        }],
        line: 44
      },
      "13": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 33
          }
        }, {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 45
          }
        }],
        line: 44
      },
      "14": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "15": {
        loc: {
          start: {
            line: 57,
            column: 64
          },
          end: {
            line: 57,
            column: 90
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 57,
            column: 78
          },
          end: {
            line: 57,
            column: 90
          }
        }],
        line: 57
      },
      "16": {
        loc: {
          start: {
            line: 57,
            column: 92
          },
          end: {
            line: 57,
            column: 109
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 57,
            column: 105
          },
          end: {
            line: 57,
            column: 109
          }
        }],
        line: 57
      },
      "17": {
        loc: {
          start: {
            line: 61,
            column: 56
          },
          end: {
            line: 61,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 87
          },
          end: {
            line: 61,
            column: 103
          }
        }, {
          start: {
            line: 61,
            column: 106
          },
          end: {
            line: 61,
            column: 122
          }
        }],
        line: 61
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/ui/separator.tsx"],
      sourcesContent: ["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }"],
      names: ["Separator", "React", "forwardRef", "className", "orientation", "decorative", "props", "ref", "SeparatorPrimitive", "Root", "cn", "displayName"],
      mappings: "AAAA;;;;;+BA8BSA;;;eAAAA;;;;+DA5Bc;wEACa;uBAEjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEnB,MAAMA,0BAAYC,OAAMC,UAAU,CAIhC,CACE,EAAEC,SAAS,EAAEC,cAAc,YAAY,EAAEC,aAAa,IAAI,EAAE,GAAGC,OAAO,EACtEC,oBAEA,qBAACC,gBAAmBC,IAAI;QACtBF,KAAKA;QACLF,YAAYA;QACZD,aAAaA;QACbD,WAAWO,IAAAA,SAAE,EACX,sBACAN,gBAAgB,eAAe,mBAAmB,kBAClDD;QAED,GAAGG,KAAK;;AAIfN,UAAUW,WAAW,GAAGH,gBAAmBC,IAAI,CAACE,WAAW"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "62658c1afb3b6e63ad537598db1112f18acbad21"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29095q70zl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29095q70zl();
cov_29095q70zl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_29095q70zl().s[1]++;
Object.defineProperty(exports, "Separator", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_29095q70zl().f[0]++;
    cov_29095q70zl().s[2]++;
    return Separator;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_29095q70zl().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_29095q70zl().s[4]++, _interop_require_wildcard(require("react")));
const _reactseparator =
/* istanbul ignore next */
(/*#__PURE__*/cov_29095q70zl().s[5]++, _interop_require_wildcard(require("@radix-ui/react-separator")));
const _utils =
/* istanbul ignore next */
(cov_29095q70zl().s[6]++, require("../../lib/utils"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_29095q70zl().f[1]++;
  cov_29095q70zl().s[7]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_29095q70zl().b[0][0]++;
    cov_29095q70zl().s[8]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_29095q70zl().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_29095q70zl().s[9]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_29095q70zl().s[10]++, new WeakMap());
  /* istanbul ignore next */
  cov_29095q70zl().s[11]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_29095q70zl().f[2]++;
    cov_29095q70zl().s[12]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_29095q70zl().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_29095q70zl().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_29095q70zl().f[3]++;
  cov_29095q70zl().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_29095q70zl().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_29095q70zl().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_29095q70zl().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_29095q70zl().b[2][0]++;
    cov_29095q70zl().s[14]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_29095q70zl().b[2][1]++;
  }
  cov_29095q70zl().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_29095q70zl().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_29095q70zl().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_29095q70zl().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_29095q70zl().b[4][0]++;
    cov_29095q70zl().s[16]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_29095q70zl().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_29095q70zl().s[17]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_29095q70zl().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_29095q70zl().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_29095q70zl().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_29095q70zl().b[6][0]++;
    cov_29095q70zl().s[19]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_29095q70zl().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_29095q70zl().s[20]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_29095q70zl().s[21]++,
  /* istanbul ignore next */
  (cov_29095q70zl().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_29095q70zl().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_29095q70zl().s[22]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_29095q70zl().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_29095q70zl().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_29095q70zl().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_29095q70zl().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_29095q70zl().s[24]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_29095q70zl().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_29095q70zl().b[11][1]++, null));
      /* istanbul ignore next */
      cov_29095q70zl().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_29095q70zl().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_29095q70zl().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_29095q70zl().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_29095q70zl().b[12][0]++;
        cov_29095q70zl().s[26]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_29095q70zl().b[12][1]++;
        cov_29095q70zl().s[27]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_29095q70zl().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_29095q70zl().s[28]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_29095q70zl().s[29]++;
  if (cache) {
    /* istanbul ignore next */
    cov_29095q70zl().b[14][0]++;
    cov_29095q70zl().s[30]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_29095q70zl().b[14][1]++;
  }
  cov_29095q70zl().s[31]++;
  return newObj;
}
const Separator =
/* istanbul ignore next */
(/*#__PURE__*/cov_29095q70zl().s[32]++, _react.forwardRef(({
  className,
  orientation =
  /* istanbul ignore next */
  (cov_29095q70zl().b[15][0]++, "horizontal"),
  decorative =
  /* istanbul ignore next */
  (cov_29095q70zl().b[16][0]++, true),
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_29095q70zl().f[4]++;
  cov_29095q70zl().s[33]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_reactseparator.Root, {
    ref: ref,
    decorative: decorative,
    orientation: orientation,
    className: (0, _utils.cn)("shrink-0 bg-border", orientation === "horizontal" ?
    /* istanbul ignore next */
    (cov_29095q70zl().b[17][0]++, "h-[1px] w-full") :
    /* istanbul ignore next */
    (cov_29095q70zl().b[17][1]++, "h-full w-[1px]"), className),
    ...props
  });
}));
/* istanbul ignore next */
cov_29095q70zl().s[34]++;
Separator.displayName = _reactseparator.Root.displayName;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTZXBhcmF0b3IiLCJjb3ZfMjkwOTVxNzB6bCIsInMiLCJfcmVhY3QiLCJmb3J3YXJkUmVmIiwiY2xhc3NOYW1lIiwib3JpZW50YXRpb24iLCJiIiwiZGVjb3JhdGl2ZSIsInByb3BzIiwicmVmIiwiZiIsIl9qc3hydW50aW1lIiwianN4IiwiX3JlYWN0c2VwYXJhdG9yIiwiUm9vdCIsIl91dGlscyIsImNuIiwiZGlzcGxheU5hbWUiXSwic291cmNlcyI6WyIvVXNlcnMvbm9yaXRha2FzYXdhZGEvQUlfUC9zdWJzaWR5QXBwL2Zyb250ZW5kL3NyYy9jb21wb25lbnRzL3VpL3NlcGFyYXRvci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCAqIGFzIFNlcGFyYXRvclByaW1pdGl2ZSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXNlcGFyYXRvclwiXG5cbmltcG9ydCB7IGNuIH0gZnJvbSBcIkAvbGliL3V0aWxzXCJcblxuY29uc3QgU2VwYXJhdG9yID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgU2VwYXJhdG9yUHJpbWl0aXZlLlJvb3Q+LFxuICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFNlcGFyYXRvclByaW1pdGl2ZS5Sb290PlxuPihcbiAgKFxuICAgIHsgY2xhc3NOYW1lLCBvcmllbnRhdGlvbiA9IFwiaG9yaXpvbnRhbFwiLCBkZWNvcmF0aXZlID0gdHJ1ZSwgLi4ucHJvcHMgfSxcbiAgICByZWZcbiAgKSA9PiAoXG4gICAgPFNlcGFyYXRvclByaW1pdGl2ZS5Sb290XG4gICAgICByZWY9e3JlZn1cbiAgICAgIGRlY29yYXRpdmU9e2RlY29yYXRpdmV9XG4gICAgICBvcmllbnRhdGlvbj17b3JpZW50YXRpb259XG4gICAgICBjbGFzc05hbWU9e2NuKFxuICAgICAgICBcInNocmluay0wIGJnLWJvcmRlclwiLFxuICAgICAgICBvcmllbnRhdGlvbiA9PT0gXCJob3Jpem9udGFsXCIgPyBcImgtWzFweF0gdy1mdWxsXCIgOiBcImgtZnVsbCB3LVsxcHhdXCIsXG4gICAgICAgIGNsYXNzTmFtZVxuICAgICAgKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICAvPlxuICApXG4pXG5TZXBhcmF0b3IuZGlzcGxheU5hbWUgPSBTZXBhcmF0b3JQcmltaXRpdmUuUm9vdC5kaXNwbGF5TmFtZVxuXG5leHBvcnQgeyBTZXBhcmF0b3IgfSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQThCUzs7Ozs7O1dBQUFBLFNBQUE7Ozs7Ozs7O3lFQTVCYzs7O3lFQUNhOzs7a0NBRWpCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRW5CLE1BQU1BLFNBQUE7QUFBQTtBQUFBLGNBQUFDLGNBQUEsR0FBQUMsQ0FBQSxRQUFZQyxNQUFBLENBQU1DLFVBQVUsQ0FJaEMsQ0FDRTtFQUFFQyxTQUFTO0VBQUVDLFdBQUE7RUFBQTtFQUFBLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSxXQUFjLFlBQVk7RUFBRUMsVUFBQTtFQUFBO0VBQUEsQ0FBQVAsY0FBQSxHQUFBTSxDQUFBLFdBQWEsSUFBSTtFQUFFLEdBQUdFO0FBQUEsQ0FBTyxFQUN0RUMsR0FBQSxLQUVBO0VBQUE7RUFBQVQsY0FBQSxHQUFBVSxDQUFBO0VBQUFWLGNBQUEsR0FBQUMsQ0FBQTtFQUFBLE9BRkEsYUFFQSxJQUFBVSxXQUFBLENBQUFDLEdBQUEsRUFBQ0MsZUFBQSxDQUFtQkMsSUFBSTtJQUN0QkwsR0FBQSxFQUFLQSxHQUFBO0lBQ0xGLFVBQUEsRUFBWUEsVUFBQTtJQUNaRixXQUFBLEVBQWFBLFdBQUE7SUFDYkQsU0FBQSxFQUFXLElBQUFXLE1BQUEsQ0FBQUMsRUFBRSxFQUNYLHNCQUNBWCxXQUFBLEtBQWdCO0lBQUE7SUFBQSxDQUFBTCxjQUFBLEdBQUFNLENBQUEsV0FBZTtJQUFBO0lBQUEsQ0FBQU4sY0FBQSxHQUFBTSxDQUFBLFdBQW1CLG1CQUNsREYsU0FBQTtJQUVELEdBQUdJOzs7OztBQUlWVCxTQUFBLENBQVVrQixXQUFXLEdBQUdKLGVBQUEsQ0FBbUJDLElBQUksQ0FBQ0csV0FBVyIsImlnbm9yZUxpc3QiOltdfQ==