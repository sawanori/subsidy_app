{"version":3,"names":["SolutionForm","applicationId","backgroundId","data","onChange","onValidate","cov_2ljybkcmd3","f","formData","setFormData","s","_react","useState","b","isGenerating","setIsGenerating","generationProgress","setGenerationProgress","errors","setErrors","activeTab","setActiveTab","CHARACTER_LIMITS","mainSolution","implementation","differentiation","riskMitigation","handleFieldChange","field","value","newData","prev","newErrors","handleAutoGenerate","generation","response","_client","apiClient","post","application_id","background_id","generatedContent","parseGeneratedSolution","content","evidence","citations","map","c","id","evidence_id","text","url","setTimeout","error","message","sections","mainMatch","match","trim","implMatch","diffMatch","riskMatch","itemsMatch","items","lines","split","line","startsWith","parts","substring","length","push","Date","now","Math","random","title","description","expectedEffect","priority","solutionItems","addSolutionItem","newItem","updateSolutionItem","item","removeSolutionItem","filter","getPriorityColor","validateForm","Object","keys","_jsxruntime","jsxs","_card","Card","CardHeader","CardTitle","className","jsx","_lucidereact","Lightbulb","CardDescription","CardContent","_tabs","Tabs","onValueChange","TabsList","TabsTrigger","TabsContent","_label","Label","htmlFor","e","target","placeholder","rows","_button","Button","type","variant","size","onClick","Plus","index","_badge","Badge","X","_input","Input","budget","parseInt","_alert","Alert","Sparkles","AlertDescription","disabled","Loader2","_progress","Progress","AlertCircle","Target","Zap","Shield","Info"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/forms/solution-form.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Lightbulb,\n  Sparkles,\n  Plus,\n  X,\n  AlertCircle,\n  Info,\n  Loader2,\n  Target,\n  Zap,\n  Shield,\n} from 'lucide-react';\nimport { apiClient } from '@/lib/api/client';\nimport { GenerateResponse } from '@/lib/api/types';\n\ninterface SolutionItem {\n  id: string;\n  title: string;\n  description: string;\n  expectedEffect: string;\n  priority: 'high' | 'medium' | 'low';\n  budget?: number;\n}\n\ninterface SolutionData {\n  mainSolution?: string;\n  solutionItems?: SolutionItem[];\n  implementation?: string;\n  differentiation?: string;\n  riskMitigation?: string;\n  evidence?: Array<{\n    id: string;\n    text: string;\n    url: string;\n  }>;\n}\n\ninterface SolutionFormProps {\n  applicationId: string;\n  backgroundId?: string;\n  data?: SolutionData;\n  onChange: (data: SolutionData) => void;\n  onValidate?: () => Promise<boolean>;\n}\n\nexport function SolutionForm({\n  applicationId,\n  backgroundId,\n  data,\n  onChange,\n  onValidate,\n}: SolutionFormProps) {\n  const [formData, setFormData] = useState<SolutionData>(data || {});\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generationProgress, setGenerationProgress] = useState(0);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [activeTab, setActiveTab] = useState('manual');\n\n  const CHARACTER_LIMITS = {\n    mainSolution: 800,\n    implementation: 600,\n    differentiation: 400,\n    riskMitigation: 400,\n  };\n\n  const handleFieldChange = (field: string, value: any) => {\n    const newData = { ...formData, [field]: value };\n    setFormData(newData);\n    onChange(newData);\n\n    // エラークリア\n    if (errors[field]) {\n      setErrors((prev) => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  const handleAutoGenerate = async () => {\n    if (!backgroundId) {\n      setErrors({ generation: '背景情報を先に入力してください' });\n      return;\n    }\n\n    setIsGenerating(true);\n    setGenerationProgress(10);\n\n    try {\n      setGenerationProgress(30);\n      const response = await apiClient.post<GenerateResponse>('/generate/solution', {\n        application_id: applicationId,\n        background_id: backgroundId,\n      });\n\n      setGenerationProgress(70);\n\n      const generatedContent = parseGeneratedSolution(response.content);\n\n      setGenerationProgress(90);\n\n      const newData: SolutionData = {\n        ...formData,\n        ...generatedContent,\n        evidence: response.citations.map((c) => ({\n          id: c.evidence_id,\n          text: c.text,\n          url: c.url,\n        })),\n      };\n\n      setFormData(newData);\n      onChange(newData);\n      setGenerationProgress(100);\n\n      setTimeout(() => {\n        setGenerationProgress(0);\n        setActiveTab('manual');\n      }, 1000);\n    } catch (error: any) {\n      setErrors({ generation: error.message || '生成に失敗しました' });\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const parseGeneratedSolution = (content: string): Partial<SolutionData> => {\n    const sections: Partial<SolutionData> = {};\n\n    // メイン解決策の抽出\n    const mainMatch = content.match(/【解決策】\\s*([\\s\\S]*?)(?=【|$)/);\n    if (mainMatch) {\n      sections.mainSolution = mainMatch[1].trim();\n    }\n\n    // 実装方法の抽出\n    const implMatch = content.match(/【実装方法】\\s*([\\s\\S]*?)(?=【|$)/);\n    if (implMatch) {\n      sections.implementation = implMatch[1].trim();\n    }\n\n    // 差別化の抽出\n    const diffMatch = content.match(/【差別化要素】\\s*([\\s\\S]*?)(?=【|$)/);\n    if (diffMatch) {\n      sections.differentiation = diffMatch[1].trim();\n    }\n\n    // リスク対策の抽出\n    const riskMatch = content.match(/【リスク対策】\\s*([\\s\\S]*?)(?=【|$)/);\n    if (riskMatch) {\n      sections.riskMitigation = riskMatch[1].trim();\n    }\n\n    // 施策項目の抽出\n    const itemsMatch = content.match(/【施策項目】\\s*([\\s\\S]*?)(?=【|$)/);\n    if (itemsMatch) {\n      const items: SolutionItem[] = [];\n      const lines = itemsMatch[1].split('\\n');\n\n      for (const line of lines) {\n        if (line.trim().startsWith('・')) {\n          const parts = line.substring(1).trim().split('：');\n          if (parts.length >= 2) {\n            items.push({\n              id: `item_${Date.now()}_${Math.random()}`,\n              title: parts[0].trim(),\n              description: parts[1].trim(),\n              expectedEffect: '',\n              priority: 'medium',\n            });\n          }\n        }\n      }\n\n      sections.solutionItems = items;\n    }\n\n    return sections;\n  };\n\n  const addSolutionItem = () => {\n    const newItem: SolutionItem = {\n      id: `item_${Date.now()}`,\n      title: '',\n      description: '',\n      expectedEffect: '',\n      priority: 'medium',\n    };\n\n    const items = [...(formData.solutionItems || []), newItem];\n    handleFieldChange('solutionItems', items);\n  };\n\n  const updateSolutionItem = (id: string, field: keyof SolutionItem, value: any) => {\n    const items = (formData.solutionItems || []).map((item) =>\n      item.id === id ? { ...item, [field]: value } : item\n    );\n    handleFieldChange('solutionItems', items);\n  };\n\n  const removeSolutionItem = (id: string) => {\n    const items = (formData.solutionItems || []).filter((item) => item.id !== id);\n    handleFieldChange('solutionItems', items);\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'high':\n        return 'destructive';\n      case 'medium':\n        return 'secondary';\n      case 'low':\n        return 'outline';\n      default:\n        return 'outline';\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.mainSolution) {\n      newErrors.mainSolution = '解決策の概要は必須です';\n    }\n    if (!formData.solutionItems || formData.solutionItems.length === 0) {\n      newErrors.solutionItems = '施策項目を少なくとも1つ入力してください';\n    }\n    if (!formData.implementation) {\n      newErrors.implementation = '実装方法は必須です';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Lightbulb className=\"h-5 w-5\" />\n          解決策・施策内容\n        </CardTitle>\n        <CardDescription>\n          課題を解決するための具体的な施策を記入してください。AIによる自動生成も利用できます。\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Tabs value={activeTab} onValueChange={setActiveTab}>\n          <TabsList className=\"grid w-full grid-cols-2\">\n            <TabsTrigger value=\"manual\">手動入力</TabsTrigger>\n            <TabsTrigger value=\"generate\">AI生成</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"manual\" className=\"space-y-6 mt-6\">\n            {/* 解決策の概要 */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"mainSolution\">\n                解決策の概要 <span className=\"text-destructive\">*</span>\n              </Label>\n              <textarea\n                id=\"mainSolution\"\n                value={formData.mainSolution || ''}\n                onChange={(e) => handleFieldChange('mainSolution', e.target.value)}\n                placeholder=\"課題を解決するための全体的なアプローチ、戦略を記載\"\n                className=\"flex min-h-[120px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\n                rows={5}\n              />\n              {errors.mainSolution && (\n                <p className=\"text-sm text-destructive\">{errors.mainSolution}</p>\n              )}\n            </div>\n\n            {/* 施策項目 */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <Label>\n                  具体的な施策項目 <span className=\"text-destructive\">*</span>\n                </Label>\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={addSolutionItem}\n                  className=\"gap-1\"\n                >\n                  <Plus className=\"h-3 w-3\" />\n                  項目追加\n                </Button>\n              </div>\n\n              {(formData.solutionItems || []).map((item, index) => (\n                <div key={item.id} className=\"rounded-lg border p-4 space-y-3\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <Badge variant={getPriorityColor(item.priority)}>\n                        {item.priority === 'high' && '高'}\n                        {item.priority === 'medium' && '中'}\n                        {item.priority === 'low' && '低'}\n                      </Badge>\n                      <span className=\"text-sm font-medium\">施策 {index + 1}</span>\n                    </div>\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => removeSolutionItem(item.id)}\n                    >\n                      <X className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n\n                  <div className=\"grid gap-3\">\n                    <div>\n                      <Label>タイトル</Label>\n                      <Input\n                        value={item.title}\n                        onChange={(e) => updateSolutionItem(item.id, 'title', e.target.value)}\n                        placeholder=\"DXツール導入\"\n                      />\n                    </div>\n\n                    <div>\n                      <Label>内容</Label>\n                      <textarea\n                        value={item.description}\n                        onChange={(e) =>\n                          updateSolutionItem(item.id, 'description', e.target.value)\n                        }\n                        placeholder=\"業務プロセスのデジタル化により効率化を実現\"\n                        className=\"flex min-h-[60px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\n                        rows={2}\n                      />\n                    </div>\n\n                    <div>\n                      <Label>期待効果</Label>\n                      <Input\n                        value={item.expectedEffect}\n                        onChange={(e) =>\n                          updateSolutionItem(item.id, 'expectedEffect', e.target.value)\n                        }\n                        placeholder=\"業務時間30%削減\"\n                      />\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div>\n                        <Label>優先度</Label>\n                        <select\n                          value={item.priority}\n                          onChange={(e) =>\n                            updateSolutionItem(\n                              item.id,\n                              'priority',\n                              e.target.value as 'high' | 'medium' | 'low'\n                            )\n                          }\n                          className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\n                        >\n                          <option value=\"high\">高</option>\n                          <option value=\"medium\">中</option>\n                          <option value=\"low\">低</option>\n                        </select>\n                      </div>\n\n                      <div>\n                        <Label>予算（円）</Label>\n                        <Input\n                          type=\"number\"\n                          value={item.budget || ''}\n                          onChange={(e) =>\n                            updateSolutionItem(item.id, 'budget', parseInt(e.target.value))\n                          }\n                          placeholder=\"1000000\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n\n              {errors.solutionItems && (\n                <p className=\"text-sm text-destructive\">{errors.solutionItems}</p>\n              )}\n            </div>\n\n            {/* 実装方法 */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"implementation\">\n                実装方法 <span className=\"text-destructive\">*</span>\n              </Label>\n              <textarea\n                id=\"implementation\"\n                value={formData.implementation || ''}\n                onChange={(e) => handleFieldChange('implementation', e.target.value)}\n                placeholder=\"施策を実行するための具体的なステップ、必要なリソース、体制など\"\n                className=\"flex min-h-[100px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\n                rows={4}\n              />\n              {errors.implementation && (\n                <p className=\"text-sm text-destructive\">{errors.implementation}</p>\n              )}\n            </div>\n\n            {/* 差別化要素 */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"differentiation\">\n                差別化要素\n              </Label>\n              <textarea\n                id=\"differentiation\"\n                value={formData.differentiation || ''}\n                onChange={(e) => handleFieldChange('differentiation', e.target.value)}\n                placeholder=\"競合と比較した優位性、独自性など\"\n                className=\"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\n                rows={3}\n              />\n            </div>\n\n            {/* リスク対策 */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"riskMitigation\">\n                リスク対策\n              </Label>\n              <textarea\n                id=\"riskMitigation\"\n                value={formData.riskMitigation || ''}\n                onChange={(e) => handleFieldChange('riskMitigation', e.target.value)}\n                placeholder=\"想定されるリスクと対策\"\n                className=\"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\n                rows={3}\n              />\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"generate\" className=\"space-y-6 mt-6\">\n            <Alert>\n              <Sparkles className=\"h-4 w-4\" />\n              <AlertDescription>\n                背景情報を基にAIが最適な解決策を提案します。生成後は自由に編集できます。\n              </AlertDescription>\n            </Alert>\n\n            <div className=\"space-y-4\">\n              {!isGenerating && (\n                <Button\n                  onClick={handleAutoGenerate}\n                  className=\"w-full gap-2\"\n                  size=\"lg\"\n                  disabled={!backgroundId}\n                >\n                  <Sparkles className=\"h-4 w-4\" />\n                  解決策を自動生成\n                </Button>\n              )}\n\n              {isGenerating && (\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-center py-8\">\n                    <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n                  </div>\n                  <Progress value={generationProgress} className=\"h-2\" />\n                  <p className=\"text-center text-sm text-muted-foreground\">\n                    {generationProgress < 30 && '課題を分析中...'}\n                    {generationProgress >= 30 && generationProgress < 70 && '解決策を生成中...'}\n                    {generationProgress >= 70 && generationProgress < 90 && '施策を最適化中...'}\n                    {generationProgress >= 90 && '最終調整中...'}\n                  </p>\n                </div>\n              )}\n\n              {!backgroundId && (\n                <Alert>\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>\n                    背景情報を先に入力してください。背景情報を基に最適な解決策を生成します。\n                  </AlertDescription>\n                </Alert>\n              )}\n\n              {errors.generation && (\n                <Alert variant=\"destructive\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>{errors.generation}</AlertDescription>\n                </Alert>\n              )}\n            </div>\n\n            <div className=\"grid grid-cols-3 gap-4\">\n              <div className=\"text-center p-4 border rounded-lg\">\n                <Target className=\"h-8 w-8 mx-auto mb-2 text-primary\" />\n                <p className=\"text-sm font-medium\">的確性</p>\n                <p className=\"text-xs text-muted-foreground\">課題に対応した解決策</p>\n              </div>\n              <div className=\"text-center p-4 border rounded-lg\">\n                <Zap className=\"h-8 w-8 mx-auto mb-2 text-primary\" />\n                <p className=\"text-sm font-medium\">実現性</p>\n                <p className=\"text-xs text-muted-foreground\">実行可能な施策</p>\n              </div>\n              <div className=\"text-center p-4 border rounded-lg\">\n                <Shield className=\"h-8 w-8 mx-auto mb-2 text-primary\" />\n                <p className=\"text-sm font-medium\">持続性</p>\n                <p className=\"text-xs text-muted-foreground\">長期的な効果</p>\n              </div>\n            </div>\n          </TabsContent>\n        </Tabs>\n\n        <div className=\"mt-6\">\n          <Alert>\n            <Info className=\"h-4 w-4\" />\n            <AlertDescription>\n              解決策は具体的で測定可能な内容にしてください。\n              実装の実現性と期待される効果を明確に示すことが重要です。\n            </AlertDescription>\n          </Alert>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}"],"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","ignoreList":[]}