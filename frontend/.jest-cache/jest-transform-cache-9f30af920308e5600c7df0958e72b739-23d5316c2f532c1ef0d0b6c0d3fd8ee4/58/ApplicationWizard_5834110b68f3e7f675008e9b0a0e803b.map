{"version":3,"names":["ApplicationWizard","STEPS","cov_2ngz54udm1","s","id","title","description","icon","_lucidereact","Building2","FileText","Sparkles","Upload","CheckCircle","onComplete","f","router","_navigation","useRouter","currentStep","setCurrentStep","_react","useState","user","setUser","isSubmitting","setIsSubmitting","applicationData","setApplicationData","basicInfo","companyName","representativeName","postalCode","address","phone","email","employeeCount","capital","establishedYear","Date","getFullYear","businessType","businessPlan","projectTitle","projectDescription","requestedAmount","totalProjectCost","implementationPeriod","start","end","expectedEffects","salesTarget","year1","year2","year3","evidence","files","processedDocuments","purposeBackground","currentIssues","painPoints","rootCause","solution","approach","uniqueValue","detailedPlans","kpiTargets","useEffect","checkAuth","supabase","_client","createClient","data","auth","getUser","b","push","progress","length","handleNext","handlePrevious","handleStepComplete","stepData","stepId","fieldMap","fieldName","prev","handleSubmit","session","getSession","Error","response","fetch","process","env","NEXT_PUBLIC_API_URL","method","headers","access_token","body","JSON","stringify","locale","status","metadata","ok","result","json","error","console","alert","renderStepContent","_jsxruntime","jsx","_BasicInfoStep","BasicInfoStep","_PurposeBackgroundStep","PurposeBackgroundStep","_DetailedPlanStep","DetailedPlanStep","_KPITargetStep","KPITargetStep","mockAppId","now","jsxs","_AutoPlanForm","AutoPlanForm","applicationId","className","_button","Button","onClick","_BusinessPlanStep","BusinessPlanStep","_EvidenceUploadStep","EvidenceUploadStep","_ReviewStep","ReviewStep","Math","round","_progress","Progress","value","map","step","index","Icon","isActive","isCompleted","_card","Card","CardHeader","CardTitle","CardDescription","CardContent","variant","disabled","ChevronLeft","stepContent","document","querySelector","dispatchEvent","Event","bubbles","ChevronRight"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/application/ApplicationWizard.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Progress } from '@/components/ui/progress';\nimport {\n  ChevronRight,\n  ChevronLeft,\n  Building2,\n  FileText,\n  Upload,\n  CheckCircle,\n  Sparkles\n} from 'lucide-react';\nimport { BasicInfoStep } from './steps/BasicInfoStep';\nimport { BusinessPlanStep } from './steps/BusinessPlanStep';\nimport { EvidenceUploadStep } from './steps/EvidenceUploadStep';\nimport { ReviewStep } from './steps/ReviewStep';\nimport { PurposeBackgroundStep } from './steps/PurposeBackgroundStep';\nimport { DetailedPlanStep } from './steps/DetailedPlanStep';\nimport { KPITargetStep } from './steps/KPITargetStep';\nimport { AutoPlanForm } from '../auto-plan/AutoPlanForm';\nimport { createClient } from '@/lib/supabase/client';\nimport { useRouter } from 'next/navigation';\nimport type {\n  PurposeBackground,\n  DetailedPlan,\n  KpiTarget\n} from '@/types/application-extended';\n\ninterface ApplicationWizardProps {\n  onComplete: (applicationId: string) => void;\n}\n\nexport interface ApplicationData {\n  basicInfo: {\n    companyName: string;\n    representativeName: string;\n    postalCode: string;\n    address: string;\n    phone: string;\n    email: string;\n    employeeCount: number;\n    capital: number;\n    establishedYear: number;\n    businessType: string;\n  };\n  businessPlan: {\n    projectTitle: string;\n    projectDescription: string;\n    requestedAmount: number;\n    totalProjectCost: number;\n    implementationPeriod: {\n      start: string;\n      end: string;\n    };\n    expectedEffects: string;\n    salesTarget: {\n      year1: number;\n      year2: number;\n      year3: number;\n    };\n  };\n  evidence: {\n    files: File[];\n    processedDocuments: any[];\n  };\n  // Phase 2 Extended Fields\n  purposeBackground?: PurposeBackground;\n  detailedPlans?: DetailedPlan[];\n  kpiTargets?: KpiTarget[];\n}\n\nconst STEPS = [\n  {\n    id: 'basic-info',\n    title: '基本情報',\n    description: '事業者の基本情報を入力',\n    icon: Building2,\n  },\n  {\n    id: 'purpose-background',\n    title: '目的・背景',\n    description: '課題と解決策を入力',\n    icon: FileText,\n  },\n  {\n    id: 'detailed-plan',\n    title: '取組内容',\n    description: '5W1Hで具体化',\n    icon: FileText,\n  },\n  {\n    id: 'kpi-targets',\n    title: 'KPI設定',\n    description: '数値目標を設定',\n    icon: FileText,\n  },\n  {\n    id: 'auto-generate',\n    title: 'AI自動生成',\n    description: 'KPI・計画を自動生成',\n    icon: Sparkles,\n  },\n  {\n    id: 'business-plan',\n    title: '事業計画',\n    description: '補助事業の計画を入力',\n    icon: FileText,\n  },\n  {\n    id: 'evidence',\n    title: '証拠書類',\n    description: '必要書類をアップロード',\n    icon: Upload,\n  },\n  {\n    id: 'review',\n    title: '確認・送信',\n    description: '入力内容を確認',\n    icon: CheckCircle,\n  },\n];\n\nexport function ApplicationWizard({ onComplete }: ApplicationWizardProps) {\n  const router = useRouter();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [user, setUser] = useState<any>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [applicationData, setApplicationData] = useState<ApplicationData>({\n    basicInfo: {\n      companyName: '',\n      representativeName: '',\n      postalCode: '',\n      address: '',\n      phone: '',\n      email: '',\n      employeeCount: 0,\n      capital: 0,\n      establishedYear: new Date().getFullYear(),\n      businessType: '',\n    },\n    businessPlan: {\n      projectTitle: '',\n      projectDescription: '',\n      requestedAmount: 0,\n      totalProjectCost: 0,\n      implementationPeriod: {\n        start: '',\n        end: '',\n      },\n      expectedEffects: '',\n      salesTarget: {\n        year1: 0,\n        year2: 0,\n        year3: 0,\n      },\n    },\n    evidence: {\n      files: [],\n      processedDocuments: [],\n    },\n    // Phase 2 Extended Fields\n    purposeBackground: {\n      currentIssues: [],\n      painPoints: '',\n      rootCause: '',\n      solution: '',\n      approach: '',\n      uniqueValue: '',\n    },\n    detailedPlans: [],\n    kpiTargets: [],\n  });\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const supabase = createClient();\n      const { data: { user } } = await supabase.auth.getUser();\n\n      if (!user) {\n        // Redirect to login if not authenticated\n        router.push('/ja/login?redirectedFrom=/ja/application/new');\n      } else {\n        setUser(user);\n      }\n    };\n\n    checkAuth();\n  }, [router]);\n\n  const progress = ((currentStep + 1) / STEPS.length) * 100;\n\n  const handleNext = () => {\n    if (currentStep < STEPS.length - 1) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const handleStepComplete = (stepData: any) => {\n    const stepId = STEPS[currentStep].id;\n    \n    const fieldMap: Record<string, string> = {\n      'basic-info': 'basicInfo',\n      'purpose-background': 'purposeBackground',\n      'detailed-plan': 'detailedPlans',\n      'kpi-targets': 'kpiTargets',\n      'business-plan': 'businessPlan',\n      'evidence': 'evidence',\n    };\n    \n    const fieldName = fieldMap[stepId];\n    if (fieldName) {\n      setApplicationData(prev => ({\n        ...prev,\n        [fieldName]: stepData,\n      }));\n    }\n\n    if (currentStep === STEPS.length - 1) {\n      // Final step - submit application\n      handleSubmit();\n    } else {\n      handleNext();\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!user) {\n      router.push('/ja/login?redirectedFrom=/ja/application/new');\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      // Get auth token\n      const supabase = createClient();\n      const { data: { session } } = await supabase.auth.getSession();\n\n      if (!session) {\n        throw new Error('No active session');\n      }\n\n      // Create application via backend API\n      const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/applications`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${session.access_token}`,\n        },\n        body: JSON.stringify({\n          title: applicationData.businessPlan.projectTitle || '新規申請',\n          locale: 'ja',\n          status: 'DRAFT',\n          // Additional application data can be added here\n          metadata: applicationData,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to create application');\n      }\n\n      const result = await response.json();\n      onComplete(result.data.id);\n    } catch (error) {\n      console.error('Failed to submit application:', error);\n      alert('申請の作成に失敗しました。もう一度お試しください。');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const renderStepContent = () => {\n    switch (STEPS[currentStep].id) {\n      case 'basic-info':\n        return (\n          <BasicInfoStep\n            data={applicationData.basicInfo}\n            onComplete={handleStepComplete}\n          />\n        );\n      case 'purpose-background':\n        return (\n          <PurposeBackgroundStep\n            data={applicationData.purposeBackground || {\n              currentIssues: [],\n              painPoints: '',\n              solution: '',\n              approach: '',\n            }}\n            onComplete={handleStepComplete}\n          />\n        );\n      case 'detailed-plan':\n        return (\n          <DetailedPlanStep\n            data={applicationData.detailedPlans || []}\n            onComplete={handleStepComplete}\n          />\n        );\n      case 'kpi-targets':\n        return (\n          <KPITargetStep\n            data={applicationData.kpiTargets || []}\n            onComplete={handleStepComplete}\n          />\n        );\n      case 'auto-generate':\n        // Use mock application ID for now\n        const mockAppId = `app_demo_${Date.now()}`;\n        return (\n          <div>\n            <AutoPlanForm applicationId={mockAppId} />\n            <div className=\"mt-4 flex justify-end\">\n              <Button onClick={handleNext}>次へ進む</Button>\n            </div>\n          </div>\n        );\n      case 'business-plan':\n        return (\n          <BusinessPlanStep\n            data={applicationData.businessPlan}\n            onComplete={handleStepComplete}\n          />\n        );\n      case 'evidence':\n        return (\n          <EvidenceUploadStep\n            data={applicationData.evidence}\n            onComplete={handleStepComplete}\n          />\n        );\n      case 'review':\n        return (\n          <ReviewStep\n            data={applicationData}\n            onComplete={handleStepComplete}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Progress Bar */}\n      <div className=\"space-y-2\">\n        <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400\">\n          <span>ステップ {currentStep + 1} / {STEPS.length}</span>\n          <span>{Math.round(progress)}% 完了</span>\n        </div>\n        <Progress value={progress} className=\"h-2\" />\n      </div>\n\n      {/* Step Indicators */}\n      <div className=\"flex justify-between\">\n        {STEPS.map((step, index) => {\n          const Icon = step.icon;\n          const isActive = index === currentStep;\n          const isCompleted = index < currentStep;\n\n          return (\n            <div\n              key={step.id}\n              className={`flex flex-col items-center space-y-2 ${\n                index !== STEPS.length - 1 ? 'flex-1' : ''\n              }`}\n            >\n              <div className=\"flex items-center w-full\">\n                <div\n                  className={`\n                    flex items-center justify-center w-10 h-10 rounded-full\n                    ${isActive ? 'bg-primary text-white' : \n                      isCompleted ? 'bg-green-600 text-white' : \n                      'bg-gray-200 dark:bg-gray-700 text-gray-500'}\n                  `}\n                >\n                  {isCompleted ? (\n                    <CheckCircle className=\"h-5 w-5\" />\n                  ) : (\n                    <Icon className=\"h-5 w-5\" />\n                  )}\n                </div>\n                {index !== STEPS.length - 1 && (\n                  <div\n                    className={`flex-1 h-0.5 mx-2 ${\n                      isCompleted ? 'bg-green-600' : 'bg-gray-200 dark:bg-gray-700'\n                    }`}\n                  />\n                )}\n              </div>\n              <div className=\"text-center\">\n                <p className={`text-sm font-medium ${\n                  isActive ? 'text-primary' : 'text-gray-600 dark:text-gray-400'\n                }`}>\n                  {step.title}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-500 hidden md:block\">\n                  {step.description}\n                </p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Step Content */}\n      <Card>\n        <CardHeader>\n          <CardTitle>{STEPS[currentStep].title}</CardTitle>\n          <CardDescription>{STEPS[currentStep].description}</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {renderStepContent()}\n        </CardContent>\n      </Card>\n\n      {/* Navigation Buttons */}\n      <div className=\"flex justify-between\">\n        <Button\n          variant=\"outline\"\n          onClick={handlePrevious}\n          disabled={currentStep === 0}\n        >\n          <ChevronLeft className=\"mr-2 h-4 w-4\" />\n          前へ\n        </Button>\n\n        {currentStep < STEPS.length - 1 && (\n          <Button onClick={() => {\n            // Validate current step before proceeding\n            const stepContent = document.querySelector('form');\n            if (stepContent) {\n              stepContent.dispatchEvent(new Event('submit', { bubbles: true }));\n            }\n          }}>\n            次へ\n            <ChevronRight className=\"ml-2 h-4 w-4\" />\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}"],"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","ignoreList":[]}