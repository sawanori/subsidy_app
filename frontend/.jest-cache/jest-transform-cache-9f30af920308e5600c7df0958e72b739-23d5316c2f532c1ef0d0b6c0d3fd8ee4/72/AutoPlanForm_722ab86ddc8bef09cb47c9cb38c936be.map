{"version":3,"names":["AutoPlanForm","applicationId","cov_1wsu7g2xhq","f","initiatives","setInitiatives","s","_react","useState","months","setMonths","budgetMax","setBudgetMax","loading","setLoading","result","setResult","error","setError","editedKpis","setEditedKpis","handleGenerate","baselineRes","fetch","method","headers","body","JSON","stringify","application_id","ok","b","Error","planRes","text","tags","split","filter","t","length","slice","constraints","budget_max","prefer","kpi_count","data","json","kpis","err","message","_jsxruntime","jsxs","className","_card","Card","CardHeader","CardTitle","jsx","_lucidereact","Sparkles","CardDescription","CardContent","_label","Label","htmlFor","_textarea","Textarea","id","value","onChange","e","target","placeholder","rows","_input","Input","type","Number","min","max","_button","Button","onClick","disabled","Fragment","Loader2","_alert","Alert","variant","AlertCircle","AlertDescription","map","kpi","index","_EditableKPICard","EditableKPICard","onUpdate","idx","updatedKpi","newKpis","plan","background","solution","themes","theme","i","name","measures","measure","j","tasks","join","schedule","wbs","task","start","end","warnings","w"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/auto-plan/AutoPlanForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Loader2, Sparkles, AlertCircle } from 'lucide-react';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { EditableKPICard } from './EditableKPICard';\n\ninterface KPI {\n  name: string;\n  baseline?: number;\n  target: number;\n  unit: string;\n  method: string;\n  frequency: string;\n  rationale?: string;\n  sourceRef?: string;\n}\n\ninterface AutoPlanResponse {\n  kpis: KPI[];\n  plan: {\n    background: string;\n    solution: {\n      themes: Array<{\n        name: string;\n        measures: Array<{\n          name: string;\n          tasks: string[];\n        }>;\n      }>;\n    };\n    schedule: {\n      wbs: Array<{\n        task: string;\n        start: string;\n        end: string;\n      }>;\n    };\n  };\n  warnings?: any[];\n  fixes?: any[];\n}\n\nexport function AutoPlanForm({ applicationId }: { applicationId: string }) {\n  const [initiatives, setInitiatives] = useState('');\n  const [months, setMonths] = useState(6);\n  const [budgetMax, setBudgetMax] = useState(1500000);\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState<AutoPlanResponse | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [editedKpis, setEditedKpis] = useState<KPI[]>([]);\n\n  const handleGenerate = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Build baseline first\n      const baselineRes = await fetch('http://localhost:3001/v1/baseline/build', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ application_id: applicationId }),\n      });\n\n      if (!baselineRes.ok) throw new Error('ベースライン構築に失敗しました');\n\n      // Generate KPIs and Plan\n      const planRes = await fetch('http://localhost:3001/v1/plan/auto', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          application_id: applicationId,\n          initiatives: [{\n            text: initiatives,\n            tags: initiatives.split(/[\\s、,]+/).filter(t => t.length > 0).slice(0, 5),\n          }],\n          constraints: { months, budget_max: budgetMax },\n          prefer: { kpi_count: 4 },\n        }),\n      });\n\n      if (!planRes.ok) throw new Error('KPI生成に失敗しました');\n\n      const data = await planRes.json();\n      setResult(data);\n      setEditedKpis(data.kpis || []);\n    } catch (err: any) {\n      setError(err.message || '生成中にエラーが発生しました');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Sparkles className=\"h-5 w-5\" />\n            KPI・事業計画 自動生成\n          </CardTitle>\n          <CardDescription>\n            取組内容を入力すると、確定申告データから現状を推定し、KPIと事業計画を自動生成します\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div>\n            <Label htmlFor=\"initiatives\">取組内容</Label>\n            <Textarea\n              id=\"initiatives\"\n              value={initiatives}\n              onChange={(e) => setInitiatives(e.target.value)}\n              placeholder=\"例: ECサイトのCVR改善と新規顧客獲得強化\"\n              className=\"mt-1\"\n              rows={3}\n            />\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"months\">実施期間（月）</Label>\n              <Input\n                id=\"months\"\n                type=\"number\"\n                value={months}\n                onChange={(e) => setMonths(Number(e.target.value))}\n                min={1}\n                max={12}\n                className=\"mt-1\"\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"budget\">予算上限（円）</Label>\n              <Input\n                id=\"budget\"\n                type=\"number\"\n                value={budgetMax}\n                onChange={(e) => setBudgetMax(Number(e.target.value))}\n                min={0}\n                className=\"mt-1\"\n              />\n            </div>\n          </div>\n\n          <Button\n            onClick={handleGenerate}\n            disabled={loading || !initiatives}\n            className=\"w-full\"\n          >\n            {loading ? (\n              <>\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                生成中...\n              </>\n            ) : (\n              <>\n                <Sparkles className=\"mr-2 h-4 w-4\" />\n                KPI・計画を自動生成\n              </>\n            )}\n          </Button>\n\n          {error && (\n            <Alert variant=\"destructive\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n        </CardContent>\n      </Card>\n\n      {result && (\n        <>\n          {/* KPI Display */}\n          <Card>\n            <CardHeader>\n              <CardTitle>生成されたKPI</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid gap-4\">\n                {editedKpis.map((kpi, index) => (\n                  <EditableKPICard\n                    key={index}\n                    kpi={kpi}\n                    index={index}\n                    onUpdate={(idx, updatedKpi) => {\n                      const newKpis = [...editedKpis];\n                      newKpis[idx] = updatedKpi;\n                      setEditedKpis(newKpis);\n                    }}\n                  />\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Plan Display */}\n          <Card>\n            <CardHeader>\n              <CardTitle>事業計画概要</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div>\n                <h4 className=\"font-semibold mb-2\">背景</h4>\n                <p className=\"text-sm\">{result.plan.background}</p>\n              </div>\n\n              <div>\n                <h4 className=\"font-semibold mb-2\">解決策</h4>\n                {result.plan.solution.themes.map((theme, i) => (\n                  <div key={i} className=\"ml-4 mb-3\">\n                    <h5 className=\"font-medium\">{theme.name}</h5>\n                    {theme.measures.map((measure, j) => (\n                      <div key={j} className=\"ml-4 text-sm\">\n                        <span className=\"text-muted-foreground\">• {measure.name}: </span>\n                        {measure.tasks.join(', ')}\n                      </div>\n                    ))}\n                  </div>\n                ))}\n              </div>\n\n              <div>\n                <h4 className=\"font-semibold mb-2\">スケジュール</h4>\n                <div className=\"space-y-1\">\n                  {result.plan.schedule.wbs.map((task, i) => (\n                    <div key={i} className=\"text-sm\">\n                      <span className=\"font-medium\">{task.task}</span>\n                      <span className=\"text-muted-foreground ml-2\">\n                        ({task.start} 〜 {task.end})\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Warnings */}\n          {result.warnings && result.warnings.length > 0 && (\n            <Alert>\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>\n                <div className=\"font-semibold mb-1\">検証結果</div>\n                {result.warnings.map((w: any, i: number) => (\n                  <div key={i} className=\"text-sm\">• {w.message}</div>\n                ))}\n              </AlertDescription>\n            </Alert>\n          )}\n        </>\n      )}\n    </div>\n  );\n}"],"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","ignoreList":[]}