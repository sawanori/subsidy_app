ed7644265b675c9dbba2112ca3af8127
'use client';
"use strict";

/* istanbul ignore next */
function cov_1wsu7g2xhq() {
  var path = "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/auto-plan/AutoPlanForm.tsx";
  var hash = "b2e7c2b164f4d827db7fd345a00edd15be170627";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/auto-plan/AutoPlanForm.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 35
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "7": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 43
        }
      },
      "8": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 37
        }
      },
      "9": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "10": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "11": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 37
        }
      },
      "12": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 21,
          column: 53
        }
      },
      "13": {
        start: {
          line: 23,
          column: 42
        },
        end: {
          line: 23,
          column: 66
        }
      },
      "14": {
        start: {
          line: 24,
          column: 32
        },
        end: {
          line: 24,
          column: 55
        }
      },
      "15": {
        start: {
          line: 25,
          column: 38
        },
        end: {
          line: 25,
          column: 67
        }
      },
      "16": {
        start: {
          line: 26,
          column: 34
        },
        end: {
          line: 26,
          column: 61
        }
      },
      "17": {
        start: {
          line: 27,
          column: 32
        },
        end: {
          line: 27,
          column: 58
        }
      },
      "18": {
        start: {
          line: 28,
          column: 30
        },
        end: {
          line: 28,
          column: 56
        }
      },
      "19": {
        start: {
          line: 29,
          column: 40
        },
        end: {
          line: 29,
          column: 64
        }
      },
      "20": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "21": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 25
        }
      },
      "22": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 23
        }
      },
      "23": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "24": {
        start: {
          line: 35,
          column: 32
        },
        end: {
          line: 43,
          column: 14
        }
      },
      "25": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 68
        }
      },
      "26": {
        start: {
          line: 44,
          column: 33
        },
        end: {
          line: 44,
          column: 68
        }
      },
      "27": {
        start: {
          line: 46,
          column: 28
        },
        end: {
          line: 67,
          column: 14
        }
      },
      "28": {
        start: {
          line: 56,
          column: 75
        },
        end: {
          line: 56,
          column: 87
        }
      },
      "29": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 61
        }
      },
      "30": {
        start: {
          line: 68,
          column: 29
        },
        end: {
          line: 68,
          column: 61
        }
      },
      "31": {
        start: {
          line: 69,
          column: 25
        },
        end: {
          line: 69,
          column: 45
        }
      },
      "32": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 28
        }
      },
      "33": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 43
        }
      },
      "34": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 54
        }
      },
      "35": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 30
        }
      },
      "36": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 330,
          column: 7
        }
      },
      "37": {
        start: {
          line: 111,
          column: 55
        },
        end: {
          line: 111,
          column: 85
        }
      },
      "38": {
        start: {
          line: 131,
          column: 63
        },
        end: {
          line: 131,
          column: 96
        }
      },
      "39": {
        start: {
          line: 148,
          column: 63
        },
        end: {
          line: 148,
          column: 99
        }
      },
      "40": {
        start: {
          line: 203,
          column: 89
        },
        end: {
          line: 213,
          column: 49
        }
      },
      "41": {
        start: {
          line: 207,
          column: 64
        },
        end: {
          line: 209,
          column: 49
        }
      },
      "42": {
        start: {
          line: 210,
          column: 48
        },
        end: {
          line: 210,
          column: 74
        }
      },
      "43": {
        start: {
          line: 211,
          column: 48
        },
        end: {
          line: 211,
          column: 71
        }
      },
      "44": {
        start: {
          line: 246,
          column: 102
        },
        end: {
          line: 268,
          column: 53
        }
      },
      "45": {
        start: {
          line: 253,
          column: 103
        },
        end: {
          line: 266,
          column: 65
        }
      },
      "46": {
        start: {
          line: 279,
          column: 112
        },
        end: {
          line: 297,
          column: 57
        }
      },
      "47": {
        start: {
          line: 316,
          column: 78
        },
        end: {
          line: 322,
          column: 45
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "AutoPlanForm",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 21
          }
        },
        loc: {
          start: {
            line: 22,
            column: 41
          },
          end: {
            line: 331,
            column: 1
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 30,
            column: 28
          }
        },
        loc: {
          start: {
            line: 30,
            column: 37
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 56,
            column: 70
          },
          end: {
            line: 56,
            column: 71
          }
        },
        loc: {
          start: {
            line: 56,
            column: 75
          },
          end: {
            line: 56,
            column: 87
          }
        },
        line: 56
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 111,
            column: 50
          },
          end: {
            line: 111,
            column: 51
          }
        },
        loc: {
          start: {
            line: 111,
            column: 55
          },
          end: {
            line: 111,
            column: 85
          }
        },
        line: 111
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 131,
            column: 58
          },
          end: {
            line: 131,
            column: 59
          }
        },
        loc: {
          start: {
            line: 131,
            column: 63
          },
          end: {
            line: 131,
            column: 96
          }
        },
        line: 131
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 148,
            column: 58
          },
          end: {
            line: 148,
            column: 59
          }
        },
        loc: {
          start: {
            line: 148,
            column: 63
          },
          end: {
            line: 148,
            column: 99
          }
        },
        line: 148
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 203,
            column: 61
          },
          end: {
            line: 203,
            column: 62
          }
        },
        loc: {
          start: {
            line: 203,
            column: 89
          },
          end: {
            line: 213,
            column: 49
          }
        },
        line: 203
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 206,
            column: 54
          },
          end: {
            line: 206,
            column: 55
          }
        },
        loc: {
          start: {
            line: 206,
            column: 73
          },
          end: {
            line: 212,
            column: 45
          }
        },
        line: 206
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 246,
            column: 76
          },
          end: {
            line: 246,
            column: 77
          }
        },
        loc: {
          start: {
            line: 246,
            column: 102
          },
          end: {
            line: 268,
            column: 53
          }
        },
        line: 246
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 253,
            column: 75
          },
          end: {
            line: 253,
            column: 76
          }
        },
        loc: {
          start: {
            line: 253,
            column: 103
          },
          end: {
            line: 266,
            column: 65
          }
        },
        line: 253
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 279,
            column: 87
          },
          end: {
            line: 279,
            column: 88
          }
        },
        loc: {
          start: {
            line: 279,
            column: 112
          },
          end: {
            line: 297,
            column: 57
          }
        },
        line: 279
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 316,
            column: 56
          },
          end: {
            line: 316,
            column: 57
          }
        },
        loc: {
          start: {
            line: 316,
            column: 78
          },
          end: {
            line: 322,
            column: 45
          }
        },
        line: 316
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 68
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "1": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 68,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 68,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "2": {
        loc: {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 71,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 71,
            column: 35
          }
        }, {
          start: {
            line: 71,
            column: 39
          },
          end: {
            line: 71,
            column: 41
          }
        }],
        line: 71
      },
      "3": {
        loc: {
          start: {
            line: 73,
            column: 21
          },
          end: {
            line: 73,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 21
          },
          end: {
            line: 73,
            column: 32
          }
        }, {
          start: {
            line: 73,
            column: 36
          },
          end: {
            line: 73,
            column: 52
          }
        }],
        line: 73
      },
      "4": {
        loc: {
          start: {
            line: 158,
            column: 42
          },
          end: {
            line: 158,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 42
          },
          end: {
            line: 158,
            column: 49
          }
        }, {
          start: {
            line: 158,
            column: 53
          },
          end: {
            line: 158,
            column: 65
          }
        }],
        line: 158
      },
      "5": {
        loc: {
          start: {
            line: 160,
            column: 42
          },
          end: {
            line: 174,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 66
          },
          end: {
            line: 167,
            column: 34
          }
        }, {
          start: {
            line: 167,
            column: 51
          },
          end: {
            line: 174,
            column: 34
          }
        }],
        line: 160
      },
      "6": {
        loc: {
          start: {
            line: 176,
            column: 28
          },
          end: {
            line: 186,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 28
          },
          end: {
            line: 176,
            column: 33
          }
        }, {
          start: {
            line: 176,
            column: 51
          },
          end: {
            line: 186,
            column: 30
          }
        }],
        line: 176
      },
      "7": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 328,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 191,
            column: 18
          }
        }, {
          start: {
            line: 191,
            column: 36
          },
          end: {
            line: 328,
            column: 14
          }
        }],
        line: 191
      },
      "8": {
        loc: {
          start: {
            line: 305,
            column: 20
          },
          end: {
            line: 326,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 20
          },
          end: {
            line: 305,
            column: 35
          }
        }, {
          start: {
            line: 305,
            column: 39
          },
          end: {
            line: 305,
            column: 65
          }
        }, {
          start: {
            line: 305,
            column: 83
          },
          end: {
            line: 326,
            column: 22
          }
        }],
        line: 305
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/auto-plan/AutoPlanForm.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Loader2, Sparkles, AlertCircle } from 'lucide-react';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { EditableKPICard } from './EditableKPICard';\n\ninterface KPI {\n  name: string;\n  baseline?: number;\n  target: number;\n  unit: string;\n  method: string;\n  frequency: string;\n  rationale?: string;\n  sourceRef?: string;\n}\n\ninterface AutoPlanResponse {\n  kpis: KPI[];\n  plan: {\n    background: string;\n    solution: {\n      themes: Array<{\n        name: string;\n        measures: Array<{\n          name: string;\n          tasks: string[];\n        }>;\n      }>;\n    };\n    schedule: {\n      wbs: Array<{\n        task: string;\n        start: string;\n        end: string;\n      }>;\n    };\n  };\n  warnings?: any[];\n  fixes?: any[];\n}\n\nexport function AutoPlanForm({ applicationId }: { applicationId: string }) {\n  const [initiatives, setInitiatives] = useState('');\n  const [months, setMonths] = useState(6);\n  const [budgetMax, setBudgetMax] = useState(1500000);\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState<AutoPlanResponse | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [editedKpis, setEditedKpis] = useState<KPI[]>([]);\n\n  const handleGenerate = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Build baseline first\n      const baselineRes = await fetch('http://localhost:3001/v1/baseline/build', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ application_id: applicationId }),\n      });\n\n      if (!baselineRes.ok) throw new Error('\u30D9\u30FC\u30B9\u30E9\u30A4\u30F3\u69CB\u7BC9\u306B\u5931\u6557\u3057\u307E\u3057\u305F');\n\n      // Generate KPIs and Plan\n      const planRes = await fetch('http://localhost:3001/v1/plan/auto', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          application_id: applicationId,\n          initiatives: [{\n            text: initiatives,\n            tags: initiatives.split(/[\\s\u3001,]+/).filter(t => t.length > 0).slice(0, 5),\n          }],\n          constraints: { months, budget_max: budgetMax },\n          prefer: { kpi_count: 4 },\n        }),\n      });\n\n      if (!planRes.ok) throw new Error('KPI\u751F\u6210\u306B\u5931\u6557\u3057\u307E\u3057\u305F');\n\n      const data = await planRes.json();\n      setResult(data);\n      setEditedKpis(data.kpis || []);\n    } catch (err: any) {\n      setError(err.message || '\u751F\u6210\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Sparkles className=\"h-5 w-5\" />\n            KPI\u30FB\u4E8B\u696D\u8A08\u753B \u81EA\u52D5\u751F\u6210\n          </CardTitle>\n          <CardDescription>\n            \u53D6\u7D44\u5185\u5BB9\u3092\u5165\u529B\u3059\u308B\u3068\u3001\u78BA\u5B9A\u7533\u544A\u30C7\u30FC\u30BF\u304B\u3089\u73FE\u72B6\u3092\u63A8\u5B9A\u3057\u3001KPI\u3068\u4E8B\u696D\u8A08\u753B\u3092\u81EA\u52D5\u751F\u6210\u3057\u307E\u3059\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div>\n            <Label htmlFor=\"initiatives\">\u53D6\u7D44\u5185\u5BB9</Label>\n            <Textarea\n              id=\"initiatives\"\n              value={initiatives}\n              onChange={(e) => setInitiatives(e.target.value)}\n              placeholder=\"\u4F8B: EC\u30B5\u30A4\u30C8\u306ECVR\u6539\u5584\u3068\u65B0\u898F\u9867\u5BA2\u7372\u5F97\u5F37\u5316\"\n              className=\"mt-1\"\n              rows={3}\n            />\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"months\">\u5B9F\u65BD\u671F\u9593\uFF08\u6708\uFF09</Label>\n              <Input\n                id=\"months\"\n                type=\"number\"\n                value={months}\n                onChange={(e) => setMonths(Number(e.target.value))}\n                min={1}\n                max={12}\n                className=\"mt-1\"\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"budget\">\u4E88\u7B97\u4E0A\u9650\uFF08\u5186\uFF09</Label>\n              <Input\n                id=\"budget\"\n                type=\"number\"\n                value={budgetMax}\n                onChange={(e) => setBudgetMax(Number(e.target.value))}\n                min={0}\n                className=\"mt-1\"\n              />\n            </div>\n          </div>\n\n          <Button\n            onClick={handleGenerate}\n            disabled={loading || !initiatives}\n            className=\"w-full\"\n          >\n            {loading ? (\n              <>\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                \u751F\u6210\u4E2D...\n              </>\n            ) : (\n              <>\n                <Sparkles className=\"mr-2 h-4 w-4\" />\n                KPI\u30FB\u8A08\u753B\u3092\u81EA\u52D5\u751F\u6210\n              </>\n            )}\n          </Button>\n\n          {error && (\n            <Alert variant=\"destructive\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n        </CardContent>\n      </Card>\n\n      {result && (\n        <>\n          {/* KPI Display */}\n          <Card>\n            <CardHeader>\n              <CardTitle>\u751F\u6210\u3055\u308C\u305FKPI</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid gap-4\">\n                {editedKpis.map((kpi, index) => (\n                  <EditableKPICard\n                    key={index}\n                    kpi={kpi}\n                    index={index}\n                    onUpdate={(idx, updatedKpi) => {\n                      const newKpis = [...editedKpis];\n                      newKpis[idx] = updatedKpi;\n                      setEditedKpis(newKpis);\n                    }}\n                  />\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Plan Display */}\n          <Card>\n            <CardHeader>\n              <CardTitle>\u4E8B\u696D\u8A08\u753B\u6982\u8981</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div>\n                <h4 className=\"font-semibold mb-2\">\u80CC\u666F</h4>\n                <p className=\"text-sm\">{result.plan.background}</p>\n              </div>\n\n              <div>\n                <h4 className=\"font-semibold mb-2\">\u89E3\u6C7A\u7B56</h4>\n                {result.plan.solution.themes.map((theme, i) => (\n                  <div key={i} className=\"ml-4 mb-3\">\n                    <h5 className=\"font-medium\">{theme.name}</h5>\n                    {theme.measures.map((measure, j) => (\n                      <div key={j} className=\"ml-4 text-sm\">\n                        <span className=\"text-muted-foreground\">\u2022 {measure.name}: </span>\n                        {measure.tasks.join(', ')}\n                      </div>\n                    ))}\n                  </div>\n                ))}\n              </div>\n\n              <div>\n                <h4 className=\"font-semibold mb-2\">\u30B9\u30B1\u30B8\u30E5\u30FC\u30EB</h4>\n                <div className=\"space-y-1\">\n                  {result.plan.schedule.wbs.map((task, i) => (\n                    <div key={i} className=\"text-sm\">\n                      <span className=\"font-medium\">{task.task}</span>\n                      <span className=\"text-muted-foreground ml-2\">\n                        ({task.start} \u301C {task.end})\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Warnings */}\n          {result.warnings && result.warnings.length > 0 && (\n            <Alert>\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>\n                <div className=\"font-semibold mb-1\">\u691C\u8A3C\u7D50\u679C</div>\n                {result.warnings.map((w: any, i: number) => (\n                  <div key={i} className=\"text-sm\">\u2022 {w.message}</div>\n                ))}\n              </AlertDescription>\n            </Alert>\n          )}\n        </>\n      )}\n    </div>\n  );\n}"],
      names: ["AutoPlanForm", "applicationId", "initiatives", "setInitiatives", "useState", "months", "setMonths", "budgetMax", "setBudgetMax", "loading", "setLoading", "result", "setResult", "error", "setError", "editedKpis", "setEditedKpis", "handleGenerate", "baselineRes", "fetch", "method", "headers", "body", "JSON", "stringify", "application_id", "ok", "Error", "planRes", "text", "tags", "split", "filter", "t", "length", "slice", "constraints", "budget_max", "prefer", "kpi_count", "data", "json", "kpis", "err", "message", "div", "className", "Card", "CardHeader", "CardTitle", "Sparkles", "CardDescription", "CardContent", "Label", "htmlFor", "Textarea", "id", "value", "onChange", "e", "target", "placeholder", "rows", "Input", "type", "Number", "min", "max", "Button", "onClick", "disabled", "Loader2", "Alert", "variant", "AlertCircle", "AlertDescription", "map", "kpi", "index", "EditableKPICard", "onUpdate", "idx", "updatedKpi", "newKpis", "h4", "p", "plan", "background", "solution", "themes", "theme", "i", "h5", "name", "measures", "measure", "j", "span", "tasks", "join", "schedule", "wbs", "task", "start", "end", "warnings", "w"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b2e7c2b164f4d827db7fd345a00edd15be170627"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wsu7g2xhq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wsu7g2xhq();
cov_1wsu7g2xhq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1wsu7g2xhq().s[1]++;
Object.defineProperty(exports, "AutoPlanForm", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1wsu7g2xhq().f[0]++;
    cov_1wsu7g2xhq().s[2]++;
    return AutoPlanForm;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1wsu7g2xhq().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1wsu7g2xhq().s[4]++, require("react"));
const _card =
/* istanbul ignore next */
(cov_1wsu7g2xhq().s[5]++, require("../ui/card"));
const _button =
/* istanbul ignore next */
(cov_1wsu7g2xhq().s[6]++, require("../ui/button"));
const _textarea =
/* istanbul ignore next */
(cov_1wsu7g2xhq().s[7]++, require("../ui/textarea"));
const _label =
/* istanbul ignore next */
(cov_1wsu7g2xhq().s[8]++, require("../ui/label"));
const _input =
/* istanbul ignore next */
(cov_1wsu7g2xhq().s[9]++, require("../ui/input"));
const _lucidereact =
/* istanbul ignore next */
(cov_1wsu7g2xhq().s[10]++, require("lucide-react"));
const _alert =
/* istanbul ignore next */
(cov_1wsu7g2xhq().s[11]++, require("../ui/alert"));
const _EditableKPICard =
/* istanbul ignore next */
(cov_1wsu7g2xhq().s[12]++, require("./EditableKPICard"));
function AutoPlanForm({
  applicationId
}) {
  /* istanbul ignore next */
  cov_1wsu7g2xhq().f[1]++;
  const [initiatives, setInitiatives] =
  /* istanbul ignore next */
  (cov_1wsu7g2xhq().s[13]++, (0, _react.useState)(''));
  const [months, setMonths] =
  /* istanbul ignore next */
  (cov_1wsu7g2xhq().s[14]++, (0, _react.useState)(6));
  const [budgetMax, setBudgetMax] =
  /* istanbul ignore next */
  (cov_1wsu7g2xhq().s[15]++, (0, _react.useState)(1500000));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_1wsu7g2xhq().s[16]++, (0, _react.useState)(false));
  const [result, setResult] =
  /* istanbul ignore next */
  (cov_1wsu7g2xhq().s[17]++, (0, _react.useState)(null));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1wsu7g2xhq().s[18]++, (0, _react.useState)(null));
  const [editedKpis, setEditedKpis] =
  /* istanbul ignore next */
  (cov_1wsu7g2xhq().s[19]++, (0, _react.useState)([]));
  /* istanbul ignore next */
  cov_1wsu7g2xhq().s[20]++;
  const handleGenerate = async () => {
    /* istanbul ignore next */
    cov_1wsu7g2xhq().f[2]++;
    cov_1wsu7g2xhq().s[21]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_1wsu7g2xhq().s[22]++;
    setError(null);
    /* istanbul ignore next */
    cov_1wsu7g2xhq().s[23]++;
    try {
      // Build baseline first
      const baselineRes =
      /* istanbul ignore next */
      (cov_1wsu7g2xhq().s[24]++, await fetch('http://localhost:3001/v1/baseline/build', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          application_id: applicationId
        })
      }));
      /* istanbul ignore next */
      cov_1wsu7g2xhq().s[25]++;
      if (!baselineRes.ok) {
        /* istanbul ignore next */
        cov_1wsu7g2xhq().b[0][0]++;
        cov_1wsu7g2xhq().s[26]++;
        throw new Error('ベースライン構築に失敗しました');
      } else
      /* istanbul ignore next */
      {
        cov_1wsu7g2xhq().b[0][1]++;
      }
      // Generate KPIs and Plan
      const planRes =
      /* istanbul ignore next */
      (cov_1wsu7g2xhq().s[27]++, await fetch('http://localhost:3001/v1/plan/auto', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          application_id: applicationId,
          initiatives: [{
            text: initiatives,
            tags: initiatives.split(/[\s、,]+/).filter(t => {
              /* istanbul ignore next */
              cov_1wsu7g2xhq().f[3]++;
              cov_1wsu7g2xhq().s[28]++;
              return t.length > 0;
            }).slice(0, 5)
          }],
          constraints: {
            months,
            budget_max: budgetMax
          },
          prefer: {
            kpi_count: 4
          }
        })
      }));
      /* istanbul ignore next */
      cov_1wsu7g2xhq().s[29]++;
      if (!planRes.ok) {
        /* istanbul ignore next */
        cov_1wsu7g2xhq().b[1][0]++;
        cov_1wsu7g2xhq().s[30]++;
        throw new Error('KPI生成に失敗しました');
      } else
      /* istanbul ignore next */
      {
        cov_1wsu7g2xhq().b[1][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_1wsu7g2xhq().s[31]++, await planRes.json());
      /* istanbul ignore next */
      cov_1wsu7g2xhq().s[32]++;
      setResult(data);
      /* istanbul ignore next */
      cov_1wsu7g2xhq().s[33]++;
      setEditedKpis(
      /* istanbul ignore next */
      (cov_1wsu7g2xhq().b[2][0]++, data.kpis) ||
      /* istanbul ignore next */
      (cov_1wsu7g2xhq().b[2][1]++, []));
    } catch (err) {
      /* istanbul ignore next */
      cov_1wsu7g2xhq().s[34]++;
      setError(
      /* istanbul ignore next */
      (cov_1wsu7g2xhq().b[3][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1wsu7g2xhq().b[3][1]++, '生成中にエラーが発生しました'));
    } finally {
      /* istanbul ignore next */
      cov_1wsu7g2xhq().s[35]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_1wsu7g2xhq().s[36]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
          className: "flex items-center gap-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Sparkles, {
            className: "h-5 w-5"
          }), "KPI・事業計画 自動生成"]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
          children: "取組内容を入力すると、確定申告データから現状を推定し、KPIと事業計画を自動生成します"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
            htmlFor: "initiatives",
            children: "取組内容"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_textarea.Textarea, {
            id: "initiatives",
            value: initiatives,
            onChange: e => {
              /* istanbul ignore next */
              cov_1wsu7g2xhq().f[4]++;
              cov_1wsu7g2xhq().s[37]++;
              return setInitiatives(e.target.value);
            },
            placeholder: "例: ECサイトのCVR改善と新規顧客獲得強化",
            className: "mt-1",
            rows: 3
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid grid-cols-2 gap-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
              htmlFor: "months",
              children: "実施期間（月）"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
              id: "months",
              type: "number",
              value: months,
              onChange: e => {
                /* istanbul ignore next */
                cov_1wsu7g2xhq().f[5]++;
                cov_1wsu7g2xhq().s[38]++;
                return setMonths(Number(e.target.value));
              },
              min: 1,
              max: 12,
              className: "mt-1"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
              htmlFor: "budget",
              children: "予算上限（円）"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
              id: "budget",
              type: "number",
              value: budgetMax,
              onChange: e => {
                /* istanbul ignore next */
                cov_1wsu7g2xhq().f[6]++;
                cov_1wsu7g2xhq().s[39]++;
                return setBudgetMax(Number(e.target.value));
              },
              min: 0,
              className: "mt-1"
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
          onClick: handleGenerate,
          disabled:
          /* istanbul ignore next */
          (cov_1wsu7g2xhq().b[4][0]++, loading) ||
          /* istanbul ignore next */
          (cov_1wsu7g2xhq().b[4][1]++, !initiatives),
          className: "w-full",
          children: loading ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1wsu7g2xhq().b[5][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
              className: "mr-2 h-4 w-4 animate-spin"
            }), "生成中..."]
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1wsu7g2xhq().b[5][1]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Sparkles, {
              className: "mr-2 h-4 w-4"
            }), "KPI・計画を自動生成"]
          }))
        }),
        /* istanbul ignore next */
        (cov_1wsu7g2xhq().b[6][0]++, error) &&
        /* istanbul ignore next */
        (cov_1wsu7g2xhq().b[6][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
          variant: "destructive",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
            className: "h-4 w-4"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertDescription, {
            children: error
          })]
        }))]
      })]
    }),
    /* istanbul ignore next */
    (cov_1wsu7g2xhq().b[7][0]++, result) &&
    /* istanbul ignore next */
    (cov_1wsu7g2xhq().b[7][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            children: "生成されたKPI"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "grid gap-4",
            children: editedKpis.map((kpi, index) => {
              /* istanbul ignore next */
              cov_1wsu7g2xhq().f[7]++;
              cov_1wsu7g2xhq().s[40]++;
              return /*#__PURE__*/(0, _jsxruntime.jsx)(_EditableKPICard.EditableKPICard, {
                kpi: kpi,
                index: index,
                onUpdate: (idx, updatedKpi) => {
                  /* istanbul ignore next */
                  cov_1wsu7g2xhq().f[8]++;
                  const newKpis =
                  /* istanbul ignore next */
                  (cov_1wsu7g2xhq().s[41]++, [...editedKpis]);
                  /* istanbul ignore next */
                  cov_1wsu7g2xhq().s[42]++;
                  newKpis[idx] = updatedKpi;
                  /* istanbul ignore next */
                  cov_1wsu7g2xhq().s[43]++;
                  setEditedKpis(newKpis);
                }
              }, index);
            })
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            children: "事業計画概要"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
              className: "font-semibold mb-2",
              children: "背景"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm",
              children: result.plan.background
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
              className: "font-semibold mb-2",
              children: "解決策"
            }), result.plan.solution.themes.map((theme, i) => {
              /* istanbul ignore next */
              cov_1wsu7g2xhq().f[9]++;
              cov_1wsu7g2xhq().s[44]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "ml-4 mb-3",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h5", {
                  className: "font-medium",
                  children: theme.name
                }), theme.measures.map((measure, j) => {
                  /* istanbul ignore next */
                  cov_1wsu7g2xhq().f[10]++;
                  cov_1wsu7g2xhq().s[45]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "ml-4 text-sm",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      className: "text-muted-foreground",
                      children: ["• ", measure.name, ": "]
                    }), measure.tasks.join(', ')]
                  }, j);
                })]
              }, i);
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
              className: "font-semibold mb-2",
              children: "スケジュール"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "space-y-1",
              children: result.plan.schedule.wbs.map((task, i) => {
                /* istanbul ignore next */
                cov_1wsu7g2xhq().f[11]++;
                cov_1wsu7g2xhq().s[46]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "text-sm",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "font-medium",
                    children: task.task
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                    className: "text-muted-foreground ml-2",
                    children: ["(", task.start, " 〜 ", task.end, ")"]
                  })]
                }, i);
              })
            })]
          })]
        })]
      }),
      /* istanbul ignore next */
      (cov_1wsu7g2xhq().b[8][0]++, result.warnings) &&
      /* istanbul ignore next */
      (cov_1wsu7g2xhq().b[8][1]++, result.warnings.length > 0) &&
      /* istanbul ignore next */
      (cov_1wsu7g2xhq().b[8][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
          className: "h-4 w-4"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.AlertDescription, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "font-semibold mb-1",
            children: "検証結果"
          }), result.warnings.map((w, i) => {
            /* istanbul ignore next */
            cov_1wsu7g2xhq().f[12]++;
            cov_1wsu7g2xhq().s[47]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "text-sm",
              children: ["• ", w.message]
            }, i);
          })]
        })]
      }))]
    }))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,