{"version":3,"names":["EvidenceSection","applicationId","onEvidenceUpdate","cov_25e8my3u29","f","searchQuery","setSearchQuery","s","_react","useState","isSearching","setIsSearching","searchResults","setSearchResults","evidences","setEvidences","selectedEvidence","setSelectedEvidence","showPickerModal","setShowPickerModal","fetchProgress","setFetchProgress","handleSearch","trim","b","response","_client","apiClient","post","query","limit","locale","results","items","map","item","id","Date","now","Math","random","title","url","snippet","source","publishedDate","datePublished","error","console","addEvidence","result","evidence","status","fetchedDate","toISOString","prev","fetchContent","fetchResponse","ingestResponse","evidence_id","content","metadata","e","embedding","setTimeout","_","rest","removeEvidence","filter","handleAISuggestion","suggestions","Promise","resolve","getStatusIcon","_jsxruntime","jsx","_lucidereact","Hash","className","Loader2","CheckCircle","XCircle","jsxs","Fragment","_card","Card","CardHeader","CardTitle","FileText","CardDescription","CardContent","_input","Input","placeholder","value","onChange","target","onKeyPress","key","_button","Button","onClick","disabled","Search","variant","Sparkles","length","_badge","Badge","_scrollarea","ScrollArea","Globe","href","rel","ExternalLink","URL","hostname","Calendar","toLocaleDateString","size","some","Plus","undefined","_progress","Progress","citations","_alert","Alert","AlertDescription","_evidencepickermodal","EvidencePickerModal","isOpen","onClose","onCitationsSelect"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/evidence/evidence-section.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Progress } from '@/components/ui/progress';\nimport {\n  Search,\n  Plus,\n  ExternalLink,\n  FileText,\n  CheckCircle,\n  XCircle,\n  Loader2,\n  Globe,\n  Calendar,\n  Hash,\n  Sparkles,\n} from 'lucide-react';\nimport { EvidencePickerModal } from './evidence-picker-modal';\nimport { apiClient } from '@/lib/api/client';\n\n/**\n * エビデンスセクション\n * APP-419: 検索→選択→/fetch→/ingest\n */\n\ninterface Evidence {\n  id: string;\n  title: string;\n  url: string;\n  snippet: string;\n  content?: string;\n  source: string;\n  publishedDate?: string;\n  fetchedDate?: string;\n  status: 'pending' | 'fetching' | 'ingested' | 'failed';\n  embedding?: number[];\n  citations?: Citation[];\n}\n\ninterface Citation {\n  id: string;\n  text: string;\n  pageNumber?: number;\n  confidence?: number;\n}\n\ninterface SearchResult {\n  id: string;\n  title: string;\n  url: string;\n  snippet: string;\n  source: string;\n  publishedDate?: string;\n}\n\ninterface EvidenceSectionProps {\n  applicationId: string;\n  onEvidenceUpdate?: (evidence: Evidence[]) => void;\n}\n\nexport function EvidenceSection({\n  applicationId,\n  onEvidenceUpdate,\n}: EvidenceSectionProps) {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchResults, setSearchResults] = useState<SearchResult[]>([]);\n  const [evidences, setEvidences] = useState<Evidence[]>([]);\n  const [selectedEvidence, setSelectedEvidence] = useState<Evidence | null>(null);\n  const [showPickerModal, setShowPickerModal] = useState(false);\n  const [fetchProgress, setFetchProgress] = useState<Record<string, number>>({});\n\n  /**\n   * 検索実行\n   */\n  const handleSearch = async () => {\n    if (!searchQuery.trim()) return;\n\n    setIsSearching(true);\n    try {\n      const response = await apiClient.post('/research/search', {\n        query: searchQuery,\n        limit: 10,\n        locale: 'ja-JP',\n      });\n\n      const results: SearchResult[] = response.items.map((item: any) => ({\n        id: `search-${Date.now()}-${Math.random()}`,\n        title: item.title,\n        url: item.url,\n        snippet: item.snippet,\n        source: item.source || 'web',\n        publishedDate: item.datePublished,\n      }));\n\n      setSearchResults(results);\n    } catch (error) {\n      console.error('Search failed:', error);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  /**\n   * エビデンス追加\n   */\n  const addEvidence = async (result: SearchResult) => {\n    const evidence: Evidence = {\n      ...result,\n      status: 'pending',\n      fetchedDate: new Date().toISOString(),\n    };\n\n    setEvidences((prev) => [...prev, evidence]);\n    \n    // コンテンツ取得開始\n    await fetchContent(evidence);\n  };\n\n  /**\n   * コンテンツ取得\n   */\n  const fetchContent = async (evidence: Evidence) => {\n    setFetchProgress((prev) => ({ ...prev, [evidence.id]: 10 }));\n    \n    try {\n      // コンテンツ取得\n      setFetchProgress((prev) => ({ ...prev, [evidence.id]: 30 }));\n      const fetchResponse = await apiClient.post('/research/fetch', {\n        url: evidence.url,\n      });\n\n      // エンベディング生成\n      setFetchProgress((prev) => ({ ...prev, [evidence.id]: 60 }));\n      const ingestResponse = await apiClient.post('/research/ingest', {\n        evidence_id: evidence.id,\n        content: fetchResponse.content,\n        metadata: {\n          title: evidence.title,\n          url: evidence.url,\n          source: evidence.source,\n        },\n      });\n\n      setFetchProgress((prev) => ({ ...prev, [evidence.id]: 100 }));\n\n      // ステータス更新\n      setEvidences((prev) =>\n        prev.map((e) =>\n          e.id === evidence.id\n            ? {\n                ...e,\n                status: 'ingested',\n                content: fetchResponse.content,\n                embedding: ingestResponse.embedding,\n              }\n            : e\n        )\n      );\n\n      // 進捗クリア\n      setTimeout(() => {\n        setFetchProgress((prev) => {\n          const { [evidence.id]: _, ...rest } = prev;\n          return rest;\n        });\n      }, 1000);\n    } catch (error) {\n      console.error('Fetch failed:', error);\n      setEvidences((prev) =>\n        prev.map((e) =>\n          e.id === evidence.id ? { ...e, status: 'failed' } : e\n        )\n      );\n      setFetchProgress((prev) => {\n        const { [evidence.id]: _, ...rest } = prev;\n        return rest;\n      });\n    }\n  };\n\n  /**\n   * エビデンス削除\n   */\n  const removeEvidence = (id: string) => {\n    setEvidences((prev) => prev.filter((e) => e.id !== id));\n  };\n\n  /**\n   * AI提案\n   */\n  const handleAISuggestion = async () => {\n    setIsSearching(true);\n    try {\n      // AIが関連キーワードを提案\n      const suggestions = [\n        '補助金 中小企業 デジタル化',\n        '事業再構築補助金 申請要件',\n        'IT導入補助金 2024',\n      ];\n\n      // 複数検索を実行\n      for (const query of suggestions) {\n        setSearchQuery(query);\n        await handleSearch();\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n      }\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const getStatusIcon = (status: Evidence['status']) => {\n    switch (status) {\n      case 'pending':\n        return <Hash className=\"h-4 w-4 text-muted-foreground\" />;\n      case 'fetching':\n        return <Loader2 className=\"h-4 w-4 animate-spin\" />;\n      case 'ingested':\n        return <CheckCircle className=\"h-4 w-4 text-green-600\" />;\n      case 'failed':\n        return <XCircle className=\"h-4 w-4 text-destructive\" />;\n    }\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <FileText className=\"h-5 w-5\" />\n            エビデンス管理\n          </CardTitle>\n          <CardDescription>\n            補助金申請の根拠となる資料を検索・収集します\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* 検索バー */}\n          <div className=\"flex gap-2\">\n            <Input\n              placeholder=\"検索キーワードを入力\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && handleSearch()}\n            />\n            <Button\n              onClick={handleSearch}\n              disabled={isSearching}\n              className=\"gap-2\"\n            >\n              {isSearching ? (\n                <Loader2 className=\"h-4 w-4 animate-spin\" />\n              ) : (\n                <Search className=\"h-4 w-4\" />\n              )}\n              検索\n            </Button>\n            <Button\n              variant=\"outline\"\n              onClick={handleAISuggestion}\n              disabled={isSearching}\n              className=\"gap-2\"\n            >\n              <Sparkles className=\"h-4 w-4\" />\n              AI提案\n            </Button>\n          </div>\n\n          {/* 検索結果 */}\n          {searchResults.length > 0 && (\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-sm font-medium\">検索結果</h3>\n                <Badge variant=\"secondary\">{searchResults.length}件</Badge>\n              </div>\n              <ScrollArea className=\"h-48 border rounded-lg p-3\">\n                <div className=\"space-y-2\">\n                  {searchResults.map((result) => (\n                    <div\n                      key={result.id}\n                      className=\"flex items-start justify-between p-2 hover:bg-muted rounded\"\n                    >\n                      <div className=\"flex-1 space-y-1\">\n                        <div className=\"flex items-start gap-2\">\n                          <Globe className=\"h-4 w-4 text-muted-foreground mt-0.5\" />\n                          <div className=\"flex-1\">\n                            <div className=\"font-medium text-sm\">\n                              {result.title}\n                            </div>\n                            <div className=\"text-xs text-muted-foreground line-clamp-2\">\n                              {result.snippet}\n                            </div>\n                            <div className=\"flex items-center gap-2 mt-1\">\n                              <a\n                                href={result.url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"text-xs text-primary hover:underline flex items-center gap-1\"\n                              >\n                                <ExternalLink className=\"h-3 w-3\" />\n                                {new URL(result.url).hostname}\n                              </a>\n                              {result.publishedDate && (\n                                <span className=\"text-xs text-muted-foreground flex items-center gap-1\">\n                                  <Calendar className=\"h-3 w-3\" />\n                                  {new Date(result.publishedDate).toLocaleDateString('ja-JP')}\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <Button\n                        size=\"sm\"\n                        variant=\"ghost\"\n                        onClick={() => addEvidence(result)}\n                        disabled={evidences.some((e) => e.url === result.url)}\n                      >\n                        <Plus className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n              </ScrollArea>\n            </div>\n          )}\n\n          {/* 収集済みエビデンス */}\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-sm font-medium\">収集済みエビデンス</h3>\n              <Badge>{evidences.length}件</Badge>\n            </div>\n            \n            {evidences.length > 0 ? (\n              <div className=\"space-y-2\">\n                {evidences.map((evidence) => (\n                  <div\n                    key={evidence.id}\n                    className=\"border rounded-lg p-3 space-y-2\"\n                  >\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-2\">\n                          {getStatusIcon(evidence.status)}\n                          <span className=\"font-medium text-sm\">\n                            {evidence.title}\n                          </span>\n                        </div>\n                        <div className=\"text-xs text-muted-foreground mt-1\">\n                          {evidence.url}\n                        </div>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        {evidence.status === 'ingested' && (\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => {\n                              setSelectedEvidence(evidence);\n                              setShowPickerModal(true);\n                            }}\n                          >\n                            引用選択\n                          </Button>\n                        )}\n                        <Button\n                          size=\"sm\"\n                          variant=\"ghost\"\n                          onClick={() => removeEvidence(evidence.id)}\n                        >\n                          <XCircle className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </div>\n\n                    {/* 進捗バー */}\n                    {fetchProgress[evidence.id] !== undefined && (\n                      <Progress value={fetchProgress[evidence.id]} className=\"h-2\" />\n                    )}\n\n                    {/* 引用数 */}\n                    {evidence.citations && evidence.citations.length > 0 && (\n                      <div className=\"flex items-center gap-2\">\n                        <Badge variant=\"secondary\" className=\"text-xs\">\n                          {evidence.citations.length} 引用\n                        </Badge>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <Alert>\n                <AlertDescription>\n                  エビデンスがありません。検索して追加してください。\n                </AlertDescription>\n              </Alert>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 引用選択モーダル */}\n      {selectedEvidence && (\n        <EvidencePickerModal\n          isOpen={showPickerModal}\n          onClose={() => {\n            setShowPickerModal(false);\n            setSelectedEvidence(null);\n          }}\n          evidence={selectedEvidence}\n          onCitationsSelect={(citations) => {\n            // 引用を更新\n            setEvidences((prev) =>\n              prev.map((e) =>\n                e.id === selectedEvidence.id\n                  ? { ...e, citations }\n                  : e\n              )\n            );\n            onEvidenceUpdate?.(evidences);\n          }}\n        />\n      )}\n    </>\n  );\n}"],"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","ignoreList":[]}