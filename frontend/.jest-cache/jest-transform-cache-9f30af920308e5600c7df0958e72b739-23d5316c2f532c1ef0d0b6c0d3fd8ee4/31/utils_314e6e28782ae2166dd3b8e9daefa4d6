cab6b1f15a419b381ce266d241791f8c
"use strict";

/* istanbul ignore next */
function cov_1f74pprzkt() {
  var path = "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/lib/utils.ts";
  var hash = "4fad6a38602de9c168fe993e5d107ed5d7d43445";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/noritakasawada/AI_P/subsidyApp/frontend/src/lib/utils.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 18
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 26
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 27
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 29
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 27
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 22
        }
      },
      "13": {
        start: {
          line: 40,
          column: 14
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "14": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 41,
          column: 48
        }
      },
      "15": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 64
        }
      },
      "16": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 50,
          column: 22
        }
      },
      "17": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "18": {
        start: {
          line: 53,
          column: 21
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "19": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "20": {
        start: {
          line: 55,
          column: 21
        },
        end: {
          line: 55,
          column: 41
        }
      },
      "21": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 60,
          column: 24
        }
      },
      "22": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 26
        }
      },
      "23": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 35
        }
      },
      "24": {
        start: {
          line: 66,
          column: 25
        },
        end: {
          line: 66,
          column: 35
        }
      },
      "25": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "26": {
        start: {
          line: 68,
          column: 21
        },
        end: {
          line: 68,
          column: 45
        }
      },
      "27": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 75,
          column: 24
        }
      },
      "28": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 30
        }
      },
      "29": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 38
        }
      },
      "30": {
        start: {
          line: 81,
          column: 21
        },
        end: {
          line: 81,
          column: 38
        }
      },
      "31": {
        start: {
          line: 82,
          column: 14
        },
        end: {
          line: 82,
          column: 18
        }
      },
      "32": {
        start: {
          line: 83,
          column: 15
        },
        end: {
          line: 83,
          column: 42
        }
      },
      "33": {
        start: {
          line: 84,
          column: 18
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "34": {
        start: {
          line: 95,
          column: 14
        },
        end: {
          line: 95,
          column: 55
        }
      },
      "35": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 77
        }
      },
      "36": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 99,
          column: 89
        }
      },
      "37": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 38
        }
      },
      "38": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "39": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 38
        }
      },
      "40": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 24
        }
      },
      "41": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 127
        }
      },
      "42": {
        start: {
          line: 112,
          column: 71
        },
        end: {
          line: 112,
          column: 124
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 14
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 25
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 23
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 18
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "cn",
        decl: {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 42,
            column: 11
          }
        },
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 42
      },
      "11": {
        name: "formatCurrency",
        decl: {
          start: {
            line: 45,
            column: 9
          },
          end: {
            line: 45,
            column: 23
          }
        },
        loc: {
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 45
      },
      "12": {
        name: "formatDate",
        decl: {
          start: {
            line: 52,
            column: 9
          },
          end: {
            line: 52,
            column: 19
          }
        },
        loc: {
          start: {
            line: 52,
            column: 32
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 52
      },
      "13": {
        name: "formatDateTime",
        decl: {
          start: {
            line: 65,
            column: 9
          },
          end: {
            line: 65,
            column: 23
          }
        },
        loc: {
          start: {
            line: 65,
            column: 40
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 65
      },
      "14": {
        name: "formatBytes",
        decl: {
          start: {
            line: 80,
            column: 9
          },
          end: {
            line: 80,
            column: 20
          }
        },
        loc: {
          start: {
            line: 80,
            column: 42
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 80
      },
      "15": {
        name: "toKebabCase",
        decl: {
          start: {
            line: 98,
            column: 9
          },
          end: {
            line: 98,
            column: 20
          }
        },
        loc: {
          start: {
            line: 98,
            column: 26
          },
          end: {
            line: 100,
            column: 1
          }
        },
        line: 98
      },
      "16": {
        name: "unique",
        decl: {
          start: {
            line: 101,
            column: 9
          },
          end: {
            line: 101,
            column: 15
          }
        },
        loc: {
          start: {
            line: 101,
            column: 23
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 101
      },
      "17": {
        name: "safeJsonParse",
        decl: {
          start: {
            line: 104,
            column: 9
          },
          end: {
            line: 104,
            column: 22
          }
        },
        loc: {
          start: {
            line: 104,
            column: 45
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 104
      },
      "18": {
        name: "removeEmpty",
        decl: {
          start: {
            line: 111,
            column: 9
          },
          end: {
            line: 111,
            column: 20
          }
        },
        loc: {
          start: {
            line: 111,
            column: 26
          },
          end: {
            line: 113,
            column: 1
          }
        },
        line: 111
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 112,
            column: 57
          },
          end: {
            line: 112,
            column: 58
          }
        },
        loc: {
          start: {
            line: 112,
            column: 71
          },
          end: {
            line: 112,
            column: 124
          }
        },
        line: 112
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "1": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "2": {
        loc: {
          start: {
            line: 80,
            column: 28
          },
          end: {
            line: 80,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 80,
            column: 39
          },
          end: {
            line: 80,
            column: 40
          }
        }],
        line: 80
      },
      "3": {
        loc: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "4": {
        loc: {
          start: {
            line: 83,
            column: 15
          },
          end: {
            line: 83,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 30
          },
          end: {
            line: 83,
            column: 31
          }
        }, {
          start: {
            line: 83,
            column: 34
          },
          end: {
            line: 83,
            column: 42
          }
        }],
        line: 83
      },
      "5": {
        loc: {
          start: {
            line: 112,
            column: 71
          },
          end: {
            line: 112,
            column: 124
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 71
          },
          end: {
            line: 112,
            column: 85
          }
        }, {
          start: {
            line: 112,
            column: 89
          },
          end: {
            line: 112,
            column: 108
          }
        }, {
          start: {
            line: 112,
            column: 112
          },
          end: {
            line: 112,
            column: 124
          }
        }],
        line: 112
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/lib/utils.ts"],
      sourcesContent: ["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n/**\n * \u6570\u5024\u3092\u65E5\u672C\u306E\u901A\u8CA8\u5F62\u5F0F\u3067\u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\n */\nexport function formatCurrency(amount: number): string {\n  return new Intl.NumberFormat('ja-JP', {\n    style: 'decimal',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  }).format(amount);\n}\n\n/**\n * ISO\u65E5\u4ED8\u6587\u5B57\u5217\u3092\u65E5\u672C\u8A9E\u5F62\u5F0F\u3067\u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\n */\nexport function formatDate(dateString: string): string {\n  if (!dateString) return '';\n  \n  try {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('ja-JP', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n    }).format(date);\n  } catch (error) {\n    return dateString;\n  }\n}\n\n/**\n * ISO\u65E5\u6642\u6587\u5B57\u5217\u3092\u65E5\u672C\u8A9E\u5F62\u5F0F\u3067\u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\n */\nexport function formatDateTime(dateTimeString: string): string {\n  if (!dateTimeString) return '';\n  \n  try {\n    const date = new Date(dateTimeString);\n    return new Intl.DateTimeFormat('ja-JP', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n    }).format(date);\n  } catch (error) {\n    return dateTimeString;\n  }\n}\n\n/**\n * \u30D0\u30A4\u30C8\u6570\u3092\u4EBA\u9593\u304C\u8AAD\u307F\u3084\u3059\u3044\u5F62\u5F0F\u3067\u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\n */\nexport function formatBytes(bytes: number, decimals = 2): string {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\n/**\n * \u6587\u5B57\u5217\u3092\u30B1\u30D0\u30D6\u30B1\u30FC\u30B9\u306B\u5909\u63DB\n */\nexport function toKebabCase(str: string): string {\n  return str\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/[\\s_]+/g, '-')\n    .toLowerCase();\n}\n\n/**\n * \u914D\u5217\u304B\u3089\u91CD\u8907\u3092\u524A\u9664\n */\nexport function unique<T>(array: T[]): T[] {\n  return Array.from(new Set(array));\n}\n\n/**\n * \u5B89\u5168\u306AJSON.parse\n */\nexport function safeJsonParse<T>(jsonString: string, fallback: T): T {\n  try {\n    return JSON.parse(jsonString);\n  } catch {\n    return fallback;\n  }\n}\n\n/**\n * \u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304B\u3089\u7A7A\u306E\u5024\u3092\u9664\u53BB\n */\nexport function removeEmpty<T extends Record<string, any>>(obj: T): Partial<T> {\n  return Object.fromEntries(\n    Object.entries(obj).filter(([_, value]) => \n      value !== null && value !== undefined && value !== ''\n    )\n  ) as Partial<T>;\n}\n"],
      names: ["cn", "formatBytes", "formatCurrency", "formatDate", "formatDateTime", "removeEmpty", "safeJsonParse", "toKebabCase", "unique", "inputs", "twMerge", "clsx", "amount", "Intl", "NumberFormat", "style", "minimumFractionDigits", "maximumFractionDigits", "format", "dateString", "date", "Date", "DateTimeFormat", "year", "month", "day", "error", "dateTimeString", "hour", "minute", "bytes", "decimals", "k", "dm", "sizes", "i", "Math", "floor", "log", "parseFloat", "pow", "toFixed", "str", "replace", "toLowerCase", "array", "Array", "from", "Set", "jsonString", "fallback", "JSON", "parse", "obj", "Object", "fromEntries", "entries", "filter", "_", "value", "undefined"],
      mappings: ";;;;;;;;;;;QAGgBA;eAAAA;;QAwDAC;eAAAA;;QAjDAC;eAAAA;;QAWAC;eAAAA;;QAkBAC;eAAAA;;QA+DAC;eAAAA;;QAXAC;eAAAA;;QAjBAC;eAAAA;;QAUAC;eAAAA;;;sBApFsB;+BACd;AAEjB,SAASR,GAAG,GAAGS,MAAoB;IACxC,OAAOC,IAAAA,sBAAO,EAACC,IAAAA,UAAI,EAACF;AACtB;AAKO,SAASP,eAAeU,MAAc;IAC3C,OAAO,IAAIC,KAAKC,YAAY,CAAC,SAAS;QACpCC,OAAO;QACPC,uBAAuB;QACvBC,uBAAuB;IACzB,GAAGC,MAAM,CAACN;AACZ;AAKO,SAAST,WAAWgB,UAAkB;IAC3C,IAAI,CAACA,YAAY,OAAO;IAExB,IAAI;QACF,MAAMC,OAAO,IAAIC,KAAKF;QACtB,OAAO,IAAIN,KAAKS,cAAc,CAAC,SAAS;YACtCC,MAAM;YACNC,OAAO;YACPC,KAAK;QACP,GAAGP,MAAM,CAACE;IACZ,EAAE,OAAOM,OAAO;QACd,OAAOP;IACT;AACF;AAKO,SAASf,eAAeuB,cAAsB;IACnD,IAAI,CAACA,gBAAgB,OAAO;IAE5B,IAAI;QACF,MAAMP,OAAO,IAAIC,KAAKM;QACtB,OAAO,IAAId,KAAKS,cAAc,CAAC,SAAS;YACtCC,MAAM;YACNC,OAAO;YACPC,KAAK;YACLG,MAAM;YACNC,QAAQ;QACV,GAAGX,MAAM,CAACE;IACZ,EAAE,OAAOM,OAAO;QACd,OAAOC;IACT;AACF;AAKO,SAAS1B,YAAY6B,KAAa,EAAEC,WAAW,CAAC;IACrD,IAAID,UAAU,GAAG,OAAO;IAExB,MAAME,IAAI;IACV,MAAMC,KAAKF,WAAW,IAAI,IAAIA;IAC9B,MAAMG,QAAQ;QAAC;QAAS;QAAM;QAAM;QAAM;QAAM;QAAM;QAAM;QAAM;KAAK;IAEvE,MAAMC,IAAIC,KAAKC,KAAK,CAACD,KAAKE,GAAG,CAACR,SAASM,KAAKE,GAAG,CAACN;IAEhD,OAAOO,WAAW,AAACT,CAAAA,QAAQM,KAAKI,GAAG,CAACR,GAAGG,EAAC,EAAGM,OAAO,CAACR,OAAO,MAAMC,KAAK,CAACC,EAAE;AAC1E;AAKO,SAAS5B,YAAYmC,GAAW;IACrC,OAAOA,IACJC,OAAO,CAAC,mBAAmB,SAC3BA,OAAO,CAAC,WAAW,KACnBC,WAAW;AAChB;AAKO,SAASpC,OAAUqC,KAAU;IAClC,OAAOC,MAAMC,IAAI,CAAC,IAAIC,IAAIH;AAC5B;AAKO,SAASvC,cAAiB2C,UAAkB,EAAEC,QAAW;IAC9D,IAAI;QACF,OAAOC,KAAKC,KAAK,CAACH;IACpB,EAAE,OAAM;QACN,OAAOC;IACT;AACF;AAKO,SAAS7C,YAA2CgD,GAAM;IAC/D,OAAOC,OAAOC,WAAW,CACvBD,OAAOE,OAAO,CAACH,KAAKI,MAAM,CAAC,CAAC,CAACC,GAAGC,MAAM,GACpCA,UAAU,QAAQA,UAAUC,aAAaD,UAAU;AAGzD"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4fad6a38602de9c168fe993e5d107ed5d7d43445"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1f74pprzkt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1f74pprzkt();
cov_1f74pprzkt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1f74pprzkt().f[0]++;
  cov_1f74pprzkt().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1f74pprzkt().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1f74pprzkt().s[3]++;
_export(exports, {
  get cn() {
    /* istanbul ignore next */
    cov_1f74pprzkt().f[1]++;
    cov_1f74pprzkt().s[4]++;
    return cn;
  },
  get formatBytes() {
    /* istanbul ignore next */
    cov_1f74pprzkt().f[2]++;
    cov_1f74pprzkt().s[5]++;
    return formatBytes;
  },
  get formatCurrency() {
    /* istanbul ignore next */
    cov_1f74pprzkt().f[3]++;
    cov_1f74pprzkt().s[6]++;
    return formatCurrency;
  },
  get formatDate() {
    /* istanbul ignore next */
    cov_1f74pprzkt().f[4]++;
    cov_1f74pprzkt().s[7]++;
    return formatDate;
  },
  get formatDateTime() {
    /* istanbul ignore next */
    cov_1f74pprzkt().f[5]++;
    cov_1f74pprzkt().s[8]++;
    return formatDateTime;
  },
  get removeEmpty() {
    /* istanbul ignore next */
    cov_1f74pprzkt().f[6]++;
    cov_1f74pprzkt().s[9]++;
    return removeEmpty;
  },
  get safeJsonParse() {
    /* istanbul ignore next */
    cov_1f74pprzkt().f[7]++;
    cov_1f74pprzkt().s[10]++;
    return safeJsonParse;
  },
  get toKebabCase() {
    /* istanbul ignore next */
    cov_1f74pprzkt().f[8]++;
    cov_1f74pprzkt().s[11]++;
    return toKebabCase;
  },
  get unique() {
    /* istanbul ignore next */
    cov_1f74pprzkt().f[9]++;
    cov_1f74pprzkt().s[12]++;
    return unique;
  }
});
const _clsx =
/* istanbul ignore next */
(cov_1f74pprzkt().s[13]++, require("clsx"));
const _tailwindmerge =
/* istanbul ignore next */
(cov_1f74pprzkt().s[14]++, require("tailwind-merge"));
function cn(...inputs) {
  /* istanbul ignore next */
  cov_1f74pprzkt().f[10]++;
  cov_1f74pprzkt().s[15]++;
  return (0, _tailwindmerge.twMerge)((0, _clsx.clsx)(inputs));
}
function formatCurrency(amount) {
  /* istanbul ignore next */
  cov_1f74pprzkt().f[11]++;
  cov_1f74pprzkt().s[16]++;
  return new Intl.NumberFormat('ja-JP', {
    style: 'decimal',
    minimumFractionDigits: 0,
    maximumFractionDigits: 0
  }).format(amount);
}
function formatDate(dateString) {
  /* istanbul ignore next */
  cov_1f74pprzkt().f[12]++;
  cov_1f74pprzkt().s[17]++;
  if (!dateString) {
    /* istanbul ignore next */
    cov_1f74pprzkt().b[0][0]++;
    cov_1f74pprzkt().s[18]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_1f74pprzkt().b[0][1]++;
  }
  cov_1f74pprzkt().s[19]++;
  try {
    const date =
    /* istanbul ignore next */
    (cov_1f74pprzkt().s[20]++, new Date(dateString));
    /* istanbul ignore next */
    cov_1f74pprzkt().s[21]++;
    return new Intl.DateTimeFormat('ja-JP', {
      year: 'numeric',
      month: '2-digit',
      day: '2-digit'
    }).format(date);
  } catch (error) {
    /* istanbul ignore next */
    cov_1f74pprzkt().s[22]++;
    return dateString;
  }
}
function formatDateTime(dateTimeString) {
  /* istanbul ignore next */
  cov_1f74pprzkt().f[13]++;
  cov_1f74pprzkt().s[23]++;
  if (!dateTimeString) {
    /* istanbul ignore next */
    cov_1f74pprzkt().b[1][0]++;
    cov_1f74pprzkt().s[24]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_1f74pprzkt().b[1][1]++;
  }
  cov_1f74pprzkt().s[25]++;
  try {
    const date =
    /* istanbul ignore next */
    (cov_1f74pprzkt().s[26]++, new Date(dateTimeString));
    /* istanbul ignore next */
    cov_1f74pprzkt().s[27]++;
    return new Intl.DateTimeFormat('ja-JP', {
      year: 'numeric',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit'
    }).format(date);
  } catch (error) {
    /* istanbul ignore next */
    cov_1f74pprzkt().s[28]++;
    return dateTimeString;
  }
}
function formatBytes(bytes, decimals =
/* istanbul ignore next */
(cov_1f74pprzkt().b[2][0]++, 2)) {
  /* istanbul ignore next */
  cov_1f74pprzkt().f[14]++;
  cov_1f74pprzkt().s[29]++;
  if (bytes === 0) {
    /* istanbul ignore next */
    cov_1f74pprzkt().b[3][0]++;
    cov_1f74pprzkt().s[30]++;
    return '0 Bytes';
  } else
  /* istanbul ignore next */
  {
    cov_1f74pprzkt().b[3][1]++;
  }
  const k =
  /* istanbul ignore next */
  (cov_1f74pprzkt().s[31]++, 1024);
  const dm =
  /* istanbul ignore next */
  (cov_1f74pprzkt().s[32]++, decimals < 0 ?
  /* istanbul ignore next */
  (cov_1f74pprzkt().b[4][0]++, 0) :
  /* istanbul ignore next */
  (cov_1f74pprzkt().b[4][1]++, decimals));
  const sizes =
  /* istanbul ignore next */
  (cov_1f74pprzkt().s[33]++, ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']);
  const i =
  /* istanbul ignore next */
  (cov_1f74pprzkt().s[34]++, Math.floor(Math.log(bytes) / Math.log(k)));
  /* istanbul ignore next */
  cov_1f74pprzkt().s[35]++;
  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
}
function toKebabCase(str) {
  /* istanbul ignore next */
  cov_1f74pprzkt().f[15]++;
  cov_1f74pprzkt().s[36]++;
  return str.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[\s_]+/g, '-').toLowerCase();
}
function unique(array) {
  /* istanbul ignore next */
  cov_1f74pprzkt().f[16]++;
  cov_1f74pprzkt().s[37]++;
  return Array.from(new Set(array));
}
function safeJsonParse(jsonString, fallback) {
  /* istanbul ignore next */
  cov_1f74pprzkt().f[17]++;
  cov_1f74pprzkt().s[38]++;
  try {
    /* istanbul ignore next */
    cov_1f74pprzkt().s[39]++;
    return JSON.parse(jsonString);
  } catch {
    /* istanbul ignore next */
    cov_1f74pprzkt().s[40]++;
    return fallback;
  }
}
function removeEmpty(obj) {
  /* istanbul ignore next */
  cov_1f74pprzkt().f[18]++;
  cov_1f74pprzkt().s[41]++;
  return Object.fromEntries(Object.entries(obj).filter(([_, value]) => {
    /* istanbul ignore next */
    cov_1f74pprzkt().f[19]++;
    cov_1f74pprzkt().s[42]++;
    return /* istanbul ignore next */(cov_1f74pprzkt().b[5][0]++, value !== null) &&
    /* istanbul ignore next */
    (cov_1f74pprzkt().b[5][1]++, value !== undefined) &&
    /* istanbul ignore next */
    (cov_1f74pprzkt().b[5][2]++, value !== '');
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,