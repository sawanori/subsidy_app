{"version":3,"names":["cov_360f3ps2g","actualCoverage","s","FileDropZone","f","MultiFileDropZone","onFileSelect","onUpload","accept","b","maxSize","className","disabled","fileStatus","setFileStatus","_react","useState","isDragging","setIsDragging","onDrop","useCallback","acceptedFiles","rejectedFiles","length","error","errors","errorMessage","code","Math","round","message","console","file","status","progress","log","name","size","type","lastModified","prev","progressInterval","setInterval","clearInterval","Error","getRootProps","getInputProps","isDragActive","_reactdropzone","useDropzone","multiple","onDragEnter","onDragLeave","onDropAccepted","onDropRejected","files","onFileDialogCancel","onError","_lucidereact","File","removeFile","formatFileSize","bytes","toFixed","_jsxruntime","jsxs","_utils","cn","jsx","Upload","_button","Button","variant","asChild","Loader2","CheckCircle","AlertCircle","FileText","onClick","X","_progress","Progress","value","_alert","Alert","AlertDescription","onFilesSelect","maxFiles","setFiles","newFiles","map","index","filter","_","i"],"sources":["/Users/noritakasawada/AI_P/subsidyApp/frontend/src/components/intake/file-drop-zone.tsx"],"sourcesContent":["'use client';\n\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { cn } from '@/lib/utils';\nimport { Progress } from '@/components/ui/progress';\nimport { Button } from '@/components/ui/button';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport {\n  Upload,\n  File,\n  X,\n  CheckCircle,\n  AlertCircle,\n  FileText,\n  Loader2,\n} from 'lucide-react';\n\ninterface FileDropZoneProps {\n  onFileSelect: (file: File) => void;\n  onUpload?: (file: File) => Promise<void>;\n  accept?: Record<string, string[]>;\n  maxSize?: number;\n  className?: string;\n  disabled?: boolean;\n}\n\ninterface FileStatus {\n  file: File;\n  status: 'idle' | 'uploading' | 'success' | 'error';\n  progress: number;\n  error?: string;\n}\n\nexport function FileDropZone({\n  onFileSelect,\n  onUpload,\n  accept = {\n    'application/pdf': ['.pdf'],\n    'image/*': ['.png', '.jpg', '.jpeg', '.tiff'],\n  },\n  maxSize = 50 * 1024 * 1024, // 50MB\n  className,\n  disabled = false,\n}: FileDropZoneProps) {\n  const [fileStatus, setFileStatus] = useState<FileStatus | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n\n  const onDrop = useCallback(\n    async (acceptedFiles: File[], rejectedFiles: any[]) => {\n      if (rejectedFiles.length > 0) {\n        const error = rejectedFiles[0].errors[0];\n        let errorMessage = 'ファイルのアップロードに失敗しました';\n\n        if (error.code === 'file-too-large') {\n          errorMessage = `ファイルサイズが大きすぎます（最大${Math.round(\n            maxSize / 1024 / 1024\n          )}MB）`;\n        } else if (error.code === 'file-invalid-type') {\n          errorMessage = 'サポートされていないファイル形式です';\n        } else {\n          // より詳細なエラー情報を表示\n          errorMessage = `ファイル読み込みエラー: ${error.message || error.code || 'Unknown error'}`;\n        }\n\n        console.error('File rejected:', error);\n\n        setFileStatus({\n          file: rejectedFiles[0].file,\n          status: 'error',\n          progress: 0,\n          error: errorMessage,\n        });\n        return;\n      }\n\n      if (acceptedFiles.length === 0) return;\n\n      const file = acceptedFiles[0];\n\n      // ファイル情報をログに記録\n      console.log('File accepted:', {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        lastModified: file.lastModified,\n      });\n\n      onFileSelect(file);\n\n      setFileStatus({\n        file,\n        status: 'idle',\n        progress: 0,\n      });\n\n      if (onUpload) {\n        setFileStatus((prev) => prev && { ...prev, status: 'uploading', progress: 10 });\n\n        try {\n          // プログレスをシミュレート（実際はアップロード進捗をトラッキング）\n          const progressInterval = setInterval(() => {\n            setFileStatus((prev) => {\n              if (!prev || prev.progress >= 90) return prev;\n              return { ...prev, progress: prev.progress + 10 };\n            });\n          }, 200);\n\n          await onUpload(file);\n\n          clearInterval(progressInterval);\n          setFileStatus((prev) => prev && { ...prev, status: 'success', progress: 100 });\n        } catch (error) {\n          setFileStatus((prev) =>\n            prev\n              ? {\n                  ...prev,\n                  status: 'error',\n                  progress: 0,\n                  error: error instanceof Error ? error.message : 'アップロードに失敗しました',\n                }\n              : null\n          );\n        }\n      }\n    },\n    [onFileSelect, onUpload, maxSize]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept,\n    maxSize,\n    multiple: false,\n    disabled,\n    onDragEnter: () => setIsDragging(true),\n    onDragLeave: () => setIsDragging(false),\n    onDropAccepted: () => setIsDragging(false),\n    onDropRejected: (files) => {\n      setIsDragging(false);\n      // ドロップが拒否された際のログ\n      console.error('Files rejected on drop:', files);\n    },\n    onFileDialogCancel: () => {\n      console.log('File dialog cancelled');\n    },\n    onError: (error) => {\n      console.error('Dropzone error:', error);\n      setFileStatus({\n        file: new File([], 'error'),\n        status: 'error',\n        progress: 0,\n        error: `ファイル選択エラー: ${error.message || error}`,\n      });\n    },\n  });\n\n  const removeFile = () => {\n    setFileStatus(null);\n  };\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes < 1024) return bytes + ' B';\n    if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(1) + ' KB';\n    return (bytes / (1024 * 1024)).toFixed(1) + ' MB';\n  };\n\n  return (\n    <div className={cn('space-y-4', className)}>\n      {!fileStatus && (\n        <div\n          {...getRootProps()}\n          className={cn(\n            'relative cursor-pointer rounded-lg border-2 border-dashed p-8 text-center transition-all',\n            isDragActive || isDragging\n              ? 'border-primary bg-primary/5'\n              : 'border-muted-foreground/25 hover:border-primary/50 hover:bg-accent/5',\n            disabled && 'cursor-not-allowed opacity-50'\n          )}\n        >\n          <input {...getInputProps()} />\n          <div className=\"flex flex-col items-center gap-4\">\n            <div className=\"rounded-full bg-primary/10 p-4\">\n              <Upload className=\"h-8 w-8 text-primary\" />\n            </div>\n            <div>\n              <p className=\"text-lg font-medium\">\n                {isDragActive\n                  ? 'ファイルをドロップしてください'\n                  : 'ファイルをドラッグ&ドロップ'}\n              </p>\n              <p className=\"mt-2 text-sm text-muted-foreground\">\n                または\n                <Button variant=\"link\" className=\"px-1\" asChild>\n                  <span>クリックして選択</span>\n                </Button>\n              </p>\n            </div>\n            <div className=\"text-xs text-muted-foreground\">\n              <p>対応形式: PDF、PNG、JPG、JPEG、TIFF</p>\n              <p>最大ファイルサイズ: {Math.round(maxSize / 1024 / 1024)}MB</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {fileStatus && (\n        <div className=\"rounded-lg border bg-card p-4\">\n          <div className=\"flex items-start gap-3\">\n            <div className=\"mt-1\">\n              {fileStatus.status === 'uploading' && (\n                <Loader2 className=\"h-5 w-5 animate-spin text-primary\" />\n              )}\n              {fileStatus.status === 'success' && (\n                <CheckCircle className=\"h-5 w-5 text-status-success\" />\n              )}\n              {fileStatus.status === 'error' && (\n                <AlertCircle className=\"h-5 w-5 text-status-error\" />\n              )}\n              {fileStatus.status === 'idle' && <FileText className=\"h-5 w-5 text-primary\" />}\n            </div>\n\n            <div className=\"flex-1 space-y-2\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"font-medium\">{fileStatus.file.name}</p>\n                  <p className=\"text-sm text-muted-foreground\">\n                    {formatFileSize(fileStatus.file.size)}\n                  </p>\n                </div>\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  onClick={removeFile}\n                  disabled={fileStatus.status === 'uploading'}\n                >\n                  <X className=\"h-4 w-4\" />\n                </Button>\n              </div>\n\n              {fileStatus.status === 'uploading' && (\n                <div className=\"space-y-1\">\n                  <Progress value={fileStatus.progress} className=\"h-2\" />\n                  <p className=\"text-xs text-muted-foreground\">\n                    アップロード中... {fileStatus.progress}%\n                  </p>\n                </div>\n              )}\n\n              {fileStatus.status === 'error' && fileStatus.error && (\n                <Alert variant=\"destructive\" className=\"py-2\">\n                  <AlertDescription className=\"text-sm\">{fileStatus.error}</AlertDescription>\n                </Alert>\n              )}\n\n              {fileStatus.status === 'success' && (\n                <p className=\"text-sm text-status-success\">アップロード完了</p>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// 複数ファイル対応版\nexport function MultiFileDropZone({\n  onFilesSelect,\n  onUpload,\n  accept = {\n    'application/pdf': ['.pdf'],\n    'image/*': ['.png', '.jpg', '.jpeg', '.tiff'],\n  },\n  maxSize = 50 * 1024 * 1024,\n  maxFiles = 10,\n  className,\n  disabled = false,\n}: {\n  onFilesSelect: (files: File[]) => void;\n  onUpload?: (files: File[]) => Promise<void>;\n  accept?: Record<string, string[]>;\n  maxSize?: number;\n  maxFiles?: number;\n  className?: string;\n  disabled?: boolean;\n}) {\n  const [files, setFiles] = useState<FileStatus[]>([]);\n\n  const onDrop = useCallback(\n    async (acceptedFiles: File[], rejectedFiles: any[]) => {\n      if (files.length + acceptedFiles.length > maxFiles) {\n        // エラー処理\n        return;\n      }\n\n      const newFiles: FileStatus[] = acceptedFiles.map((file) => ({\n        file,\n        status: 'idle' as const,\n        progress: 0,\n      }));\n\n      setFiles((prev) => [...prev, ...newFiles]);\n      onFilesSelect(acceptedFiles);\n\n      if (onUpload) {\n        // アップロード処理\n        await onUpload(acceptedFiles);\n      }\n    },\n    [files, maxFiles, onFilesSelect, onUpload]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept,\n    maxSize,\n    multiple: true,\n    disabled: disabled || files.length >= maxFiles,\n  });\n\n  return (\n    <div className={cn('space-y-4', className)}>\n      {files.length < maxFiles && (\n        <div\n          {...getRootProps()}\n          className={cn(\n            'cursor-pointer rounded-lg border-2 border-dashed p-6 text-center transition-all',\n            isDragActive\n              ? 'border-primary bg-primary/5'\n              : 'border-muted-foreground/25 hover:border-primary/50',\n            disabled && 'cursor-not-allowed opacity-50'\n          )}\n        >\n          <input {...getInputProps()} />\n          <Upload className=\"mx-auto h-8 w-8 text-muted-foreground\" />\n          <p className=\"mt-2 text-sm\">\n            {isDragActive ? 'ファイルをドロップ' : 'ファイルを選択またはドラッグ'}\n          </p>\n          <p className=\"text-xs text-muted-foreground\">\n            {files.length} / {maxFiles} ファイル\n          </p>\n        </div>\n      )}\n\n      {files.length > 0 && (\n        <div className=\"space-y-2\">\n          {files.map((fileStatus, index) => (\n            <div key={index} className=\"flex items-center gap-2 rounded border p-2\">\n              <FileText className=\"h-4 w-4\" />\n              <span className=\"flex-1 text-sm truncate\">{fileStatus.file.name}</span>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"h-6 w-6\"\n                onClick={() => setFiles((prev) => prev.filter((_, i) => i !== index))}\n              >\n                <X className=\"h-3 w-3\" />\n              </Button>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}"],"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","ignoreList":[]}